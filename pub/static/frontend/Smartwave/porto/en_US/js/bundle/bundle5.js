require.config({"config": {
        "jsbuild":{"Magento_Ui/js/form/components/group.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiCollection'\r\n], function (_, Collection) {\r\n    'use strict';\r\n\r\n    return Collection.extend({\r\n        defaults: {\r\n            visible: true,\r\n            label: '',\r\n            showLabel: true,\r\n            required: false,\r\n            template: 'ui/group/group',\r\n            fieldTemplate: 'ui/form/field',\r\n            breakLine: true,\r\n            validateWholeGroup: false,\r\n            additionalClasses: {}\r\n        },\r\n\r\n        /**\r\n         * Extends this with defaults and config.\r\n         * Then calls initObservable, iniListenes and extractData methods.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                ._setClasses();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Calls initObservable of parent class.\r\n         * Defines observable properties of instance.\r\n         *\r\n         * @return {Object} - reference to instance\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('visible')\r\n                .observe({\r\n                    required: !!+this.required\r\n                });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Extends 'additionalClasses' object.\r\n         *\r\n         * @returns {Group} Chainable.\r\n         */\r\n        _setClasses: function () {\r\n            var additional = this.additionalClasses,\r\n                classes;\r\n\r\n            if (_.isString(additional)) {\r\n                additional = this.additionalClasses.split(' ');\r\n                classes = this.additionalClasses = {};\r\n\r\n                additional.forEach(function (name) {\r\n                    classes[name] = true;\r\n                }, this);\r\n            }\r\n\r\n            _.extend(this.additionalClasses, {\r\n                'admin__control-grouped': !this.breakLine,\r\n                'admin__control-fields': this.breakLine,\r\n                required:   this.required,\r\n                _error:     this.error,\r\n                _disabled:  this.disabled\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Defines if group has only one element.\r\n         * @return {Boolean}\r\n         */\r\n        isSingle: function () {\r\n            return this.elems.getLength() === 1;\r\n        },\r\n\r\n        /**\r\n         * Defines if group has multiple elements.\r\n         * @return {Boolean}\r\n         */\r\n        isMultiple: function () {\r\n            return this.elems.getLength() > 1;\r\n        },\r\n\r\n        /**\r\n         * Returns an array of child components previews.\r\n         *\r\n         * @returns {Array}\r\n         */\r\n        getPreview: function () {\r\n            return this.elems.map('getPreview');\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/components/html.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'uiComponent'\r\n], function ($, _, Component) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            content:        '',\r\n            showSpinner:    false,\r\n            loading:        false,\r\n            visible:        true,\r\n            template:       'ui/content/content',\r\n            additionalClasses: {},\r\n            ignoreTmpls: {\r\n                content: true\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Extends instance with default config, calls 'initialize' method of\r\n         *     parent, calls 'initAjaxConfig'\r\n         */\r\n        initialize: function () {\r\n            _.bindAll(this, 'onContainerToggle', 'onDataLoaded');\r\n\r\n            this._super()\r\n                ._setClasses()\r\n                .initAjaxConfig();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Calls 'initObservable' method of parent, initializes observable\r\n         * properties of instance\r\n         *\r\n         * @return {Object} - reference to instance\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('content loading visible');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Extends 'additionalClasses' object.\r\n         *\r\n         * @returns {Group} Chainable.\r\n         */\r\n        _setClasses: function () {\r\n            var additional = this.additionalClasses,\r\n                classes;\r\n\r\n            if (_.isString(additional)) {\r\n                additional = this.additionalClasses.split(' ');\r\n                classes = this.additionalClasses = {};\r\n\r\n                additional.forEach(function (name) {\r\n                    classes[name] = true;\r\n                }, this);\r\n            }\r\n\r\n            _.extend(this.additionalClasses, {\r\n                'admin__scope-old': !!additional\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initContainer: function (parent) {\r\n            this._super();\r\n\r\n            parent.on('active', this.onContainerToggle);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes default ajax config on instance\r\n         *\r\n         * @return {Object} - reference to instance\r\n         */\r\n        initAjaxConfig: function () {\r\n            this.ajaxConfig = {\r\n                url: this.url,\r\n                data: {\r\n                    FORM_KEY: window.FORM_KEY\r\n                },\r\n                success:    this.onDataLoaded\r\n            };\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Calls 'loadData' if both 'active' variable and 'shouldLoad'\r\n         * property are truthy\r\n         *\r\n         * @param  {Boolean} active\r\n         */\r\n        onContainerToggle: function (active) {\r\n            if (active && this.shouldLoad()) {\r\n                this.loadData();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Defines if instance has 'content' property defined.\r\n         *\r\n         * @return {Boolean} [description]\r\n         */\r\n        hasData: function () {\r\n            return !!this.content();\r\n        },\r\n\r\n        /**\r\n         * Defines if instance should load external data\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        shouldLoad: function () {\r\n            return this.url && !this.hasData() && !this.loading();\r\n        },\r\n\r\n        /**\r\n         * Sets loading property to true, makes ajax call\r\n         *\r\n         * @return {Object} - reference to instance\r\n         */\r\n        loadData: function () {\r\n            this.loading(true);\r\n\r\n            $.ajax(this.ajaxConfig);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Ajax's request success handler. Calls 'updateContent' passing 'data'\r\n         * to it, then sets 'loading' property to false.\r\n         *\r\n         * @param  {String} data\r\n         */\r\n        onDataLoaded: function (data) {\r\n            this.updateContent(data)\r\n                .loading(false);\r\n        },\r\n\r\n        /**\r\n         * Sets incoming data 'content' property's value\r\n         *\r\n         * @param  {String} content\r\n         * @return {Object} - reference to instance\r\n         */\r\n        updateContent: function (content) {\r\n            this.content(content);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Content getter\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getContentUnsanitizedHtml: function () {\r\n            return this.content();\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/components/insert-form.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    './insert',\r\n    'mageUtils',\r\n    'jquery'\r\n], function (Insert, utils, $) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Get page actions element.\r\n     *\r\n     * @param {String} elem\r\n     * @param {String} actionsClass\r\n     * @returns {String}\r\n     */\r\n    function getPageActions(elem, actionsClass) {\r\n        var el = document.createElement('div');\r\n\r\n        el.innerHTML = elem;\r\n\r\n        return el.getElementsByClassName(actionsClass)[0];\r\n    }\r\n\r\n    /**\r\n     * Return element without page actions toolbar\r\n     *\r\n     * @param {String} elem\r\n     * @param {String} actionsClass\r\n     * @returns {String}\r\n     */\r\n    function removePageActions(elem, actionsClass) {\r\n        var el = document.createElement('div'),\r\n            actions;\r\n\r\n        el.innerHTML = elem;\r\n        actions = el.getElementsByClassName(actionsClass)[0];\r\n\r\n        if (actions) {\r\n            el.removeChild(actions);\r\n        }\r\n\r\n        return el.innerHTML;\r\n    }\r\n\r\n    return Insert.extend({\r\n        defaults: {\r\n            externalFormName: '${ $.ns }.${ $.ns }',\r\n            pageActionsClass: 'page-actions',\r\n            actionsContainerClass: 'page-main-actions',\r\n            exports: {\r\n                prefix: '${ $.externalFormName }:selectorPrefix'\r\n            },\r\n            imports: {\r\n                toolbarSection: '${ $.toolbarContainer }:toolbarSection',\r\n                prefix: '${ $.toolbarContainer }:rootSelector',\r\n                messagesClass: '${ $.externalFormName }:messagesClass'\r\n            },\r\n            settings: {\r\n                ajax: {\r\n                    ajaxSave: true,\r\n                    exports: {\r\n                        ajaxSave: '${ $.externalFormName }:ajaxSave'\r\n                    },\r\n                    imports: {\r\n                        responseStatus: '${ $.externalFormName }:responseStatus',\r\n                        responseData: '${ $.externalFormName }:responseData'\r\n                    }\r\n                }\r\n            },\r\n            modules: {\r\n                externalForm: '${ $.externalFormName }'\r\n            }\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initObservable: function () {\r\n            return this._super()\r\n                .observe('responseStatus');\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initConfig: function (config) {\r\n            var defaults = this.constructor.defaults;\r\n\r\n            utils.extend(defaults, defaults.settings[config.formSubmitType] || {});\r\n\r\n            return this._super();\r\n        },\r\n\r\n        /** @inheritdoc*/\r\n        destroyInserted: function () {\r\n            if (this.isRendered && this.externalForm()) {\r\n                this.externalForm().delegate('destroy');\r\n                this.removeActions();\r\n                this.responseStatus(undefined);\r\n                this.responseData = {};\r\n            }\r\n\r\n            return this._super();\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        onRender: function (data) {\r\n            var actions = getPageActions(data, this.pageActionsClass);\r\n\r\n            if (!data.length) {\r\n                return this;\r\n            }\r\n            data = removePageActions(data, this.pageActionsClass);\r\n            this.renderActions(actions);\r\n            this._super(data);\r\n        },\r\n\r\n        /**\r\n         * Insert actions in toolbar.\r\n         *\r\n         * @param {String} actions\r\n         */\r\n        renderActions: function (actions) {\r\n            var $container = $('<div></div>');\r\n\r\n            $container\r\n                .addClass(this.actionsContainerClass)\r\n                .append(actions);\r\n\r\n            this.formHeader = $container;\r\n\r\n            $(this.toolbarSection).append(this.formHeader);\r\n        },\r\n\r\n        /**\r\n         * Remove actions toolbar.\r\n         */\r\n        removeActions: function () {\r\n            $(this.formHeader).siblings('.' + this.messagesClass).remove();\r\n            $(this.formHeader).remove();\r\n            this.formHeader = $();\r\n        },\r\n\r\n        /**\r\n         * Reset external form data.\r\n         */\r\n        resetForm: function () {\r\n            if (this.externalSource()) {\r\n                this.externalSource().trigger('data.reset');\r\n                this.responseStatus(undefined);\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/components/multiline.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    './group'\r\n], function (Group) {\r\n    'use strict';\r\n\r\n    return Group.extend({\r\n        defaults: {\r\n            links: {\r\n                value: '${ $.provider }:${ $.dataScope }'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initialize Multiline component.\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        initialize: function () {\r\n            return this._super()\r\n                ._prepareValue();\r\n        },\r\n\r\n        /**\r\n         * {@inheritdoc}\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('value');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Prepare value for Multiline options.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         * @private\r\n         */\r\n        _prepareValue: function () {\r\n            var value = this.value();\r\n\r\n            if (typeof value === 'string') {\r\n                this.value(value.split('\\n'));\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/components/tab.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'uiCollection'\r\n], function (Collection) {\r\n    'use strict';\r\n\r\n    return Collection.extend({\r\n        defaults: {\r\n            uniqueProp:     'active',\r\n            active:         false,\r\n            wasActivated:   false\r\n        },\r\n\r\n        /**\r\n         * Extends instance with defaults. Invokes parent initialize method.\r\n         * Calls initListeners and pushParams methods.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .setUnique();\r\n        },\r\n\r\n        /**\r\n         * Calls initObservable of parent class.\r\n         * Defines observable properties of instance.\r\n         * @return {Object} - reference to instance\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('active wasActivated');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Sets active property to true, then invokes pushParams method.\r\n         */\r\n        activate: function () {\r\n            this.active(true);\r\n            this.wasActivated(true);\r\n\r\n            this.setUnique();\r\n\r\n            return true;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/components/tab_group.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'Magento_Ui/js/lib/collapsible'\r\n], function (_, Collapsible) {\r\n    'use strict';\r\n\r\n    return Collapsible.extend({\r\n        defaults: {\r\n            listens: {\r\n                '${ $.provider }:data.validate': 'onValidate'\r\n            },\r\n            collapsible: false,\r\n            opened: true\r\n        },\r\n\r\n        /**\r\n         * Invokes initElement method of parent class, calls 'initActivation' method\r\n         * passing element to it.\r\n         * @param {Object} elem\r\n         * @returns {Object} - reference to instance\r\n         */\r\n        initElement: function (elem) {\r\n            this._super()\r\n                .initActivation(elem);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Activates element if one is first or if one has 'active' propert\r\n         * set to true.\r\n         *\r\n         * @param  {Object} elem\r\n         * @returns {Object} - reference to instance\r\n         */\r\n        initActivation: function (elem) {\r\n            var elems   = this.elems(),\r\n                isFirst = !elems.indexOf(elem);\r\n\r\n            if (isFirst || elem.active()) {\r\n                elem.activate();\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Delegates 'validate' method on element, then reads 'invalid' property\r\n         * of params storage, and if defined, activates element, sets\r\n         * 'allValid' property of instance to false and sets invalid's\r\n         * 'focused' property to true.\r\n         *\r\n         * @param {Object} elem\r\n         */\r\n        validate: function (elem) {\r\n            var result  = elem.delegate('validate'),\r\n                invalid;\r\n\r\n            invalid = _.find(result, function (item) {\r\n                return typeof item !== 'undefined' && !item.valid;\r\n            });\r\n\r\n            if (invalid) {\r\n                elem.activate();\r\n                invalid.target.focused(true);\r\n            }\r\n\r\n            return invalid;\r\n        },\r\n\r\n        /**\r\n         * Sets 'allValid' property of instance to true, then calls 'validate' method\r\n         * of instance for each element.\r\n         */\r\n        onValidate: function () {\r\n            this.elems.sortBy(function (elem) {\r\n                return !elem.active();\r\n            }).some(this.validate, this);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/components/collection/item.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    '../tab'\r\n], function (_, utils, Tab) {\r\n    'use strict';\r\n\r\n    var previewConfig = {\r\n        separator: ' ',\r\n        prefix: ''\r\n    };\r\n\r\n    /**\r\n     * Parses incoming data and returns result merged with default preview config\r\n     *\r\n     * @param  {Object|String} data\r\n     * @return {Object}\r\n     */\r\n    function parsePreview(data) {\r\n        if (typeof data == 'string') {\r\n            data = {\r\n                items: data\r\n            };\r\n        }\r\n\r\n        data.items = utils.stringToArray(data.items);\r\n\r\n        return _.defaults(data, previewConfig);\r\n    }\r\n\r\n    return Tab.extend({\r\n        defaults: {\r\n            label: '',\r\n            uniqueNs: 'activeCollectionItem',\r\n            previewTpl: 'ui/form/components/collection/preview'\r\n        },\r\n\r\n        /**\r\n         * Extends instance with default config, calls initializes of parent class\r\n         */\r\n        initialize: function () {\r\n            _.bindAll(this, 'buildPreview', 'hasPreview');\r\n\r\n            return this._super();\r\n        },\r\n\r\n        /**\r\n         * Calls initProperties of parent class, initializes properties\r\n         * of instance.\r\n         *\r\n         * @return {Object} - reference to instance\r\n         */\r\n        initConfig: function () {\r\n            this._super();\r\n\r\n            this.displayed = [];\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Calls initObservable of parent class, initializes observable\r\n         * properties of instance.\r\n         *\r\n         * @return {Object} - reference to instance\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe({\r\n                    noPreview: true,\r\n                    indexed: {}\r\n                });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Is being called when child element has been initialized,\r\n         *     calls initElement of parent class, binds to element's update event,\r\n         *     calls insertToArea and insertToIndexed methods passing element to it\r\n         *\r\n         * @param  {Object} elem\r\n         */\r\n        initElement: function (elem) {\r\n            this._super()\r\n                .insertToIndexed(elem);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Adds element to observable indexed object of instance\r\n         *\r\n         * @param  {Object} elem\r\n         * @return {Object} - reference to instance\r\n         */\r\n        insertToIndexed: function (elem) {\r\n            var indexed = this.indexed();\r\n\r\n            indexed[elem.index] = elem;\r\n\r\n            this.indexed(indexed);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Destroys current instance along with all of its' children.\r\n         * Overrides base method to clear data when this method is called.\r\n         */\r\n        destroy: function () {\r\n            this._super();\r\n            this._clearData();\r\n        },\r\n\r\n        /**\r\n         * Clears all data associated with component.\r\n         * @private\r\n         *\r\n         * @returns {Item} Chainable.\r\n         */\r\n        _clearData: function () {\r\n            this.source.remove(this.dataScope);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Formats incoming previews array via parsePreview function.\r\n         *\r\n         * @param  {Array} previews\r\n         * @return {Array} - formatted previews\r\n         */\r\n        formatPreviews: function (previews) {\r\n            return previews.map(parsePreview);\r\n        },\r\n\r\n        /**\r\n         * Creates string view of previews\r\n         *\r\n         * @param  {Object} data\r\n         * @return {Strict} - formatted preview string\r\n         */\r\n        buildPreview: function (data) {\r\n            var preview = this.getPreview(data.items),\r\n                prefix = data.prefix;\r\n\r\n            return prefix + preview.join(data.separator);\r\n        },\r\n\r\n        /**\r\n         * Defines if instance has preview for incoming data\r\n         *\r\n         * @param  {Object}  data\r\n         * @return {Boolean}\r\n         */\r\n        hasPreview: function (data) {\r\n            return !!this.getPreview(data.items).length;\r\n        },\r\n\r\n        /**\r\n         * Creates an array of previews for elements specified in incoming\r\n         * items array, calls updatePreview afterwards.\r\n         *\r\n         * @param  {Array} items - An array of element's indexes.\r\n         * @returns {Array} An array of previews.\r\n         */\r\n        getPreview: function (items) {\r\n            var elems = this.indexed(),\r\n                displayed = this.displayed,\r\n                preview;\r\n\r\n            items = items.map(function (index) {\r\n                var elem = elems[index];\r\n\r\n                preview = elem && elem.visible() ? elem.getPreview() : '';\r\n\r\n                preview = Array.isArray(preview) ?\r\n                    _.compact(preview).join(', ') :\r\n                    preview;\r\n\r\n                utils.toggle(displayed, index, !!preview);\r\n\r\n                return preview;\r\n            });\r\n\r\n            this.noPreview(!displayed.length);\r\n\r\n            return _.compact(items);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/abstract.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    'uiLayout',\r\n    'uiElement',\r\n    'Magento_Ui/js/lib/validation/validator'\r\n], function (_, utils, layout, Element, validator) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            visible: true,\r\n            preview: '',\r\n            focused: false,\r\n            required: false,\r\n            disabled: false,\r\n            valueChangedByUser: false,\r\n            elementTmpl: 'ui/form/element/input',\r\n            tooltipTpl: 'ui/form/element/helper/tooltip',\r\n            fallbackResetTpl: 'ui/form/element/helper/fallback-reset',\r\n            'input_type': 'input',\r\n            placeholder: false,\r\n            description: '',\r\n            labelVisible: true,\r\n            label: '',\r\n            error: '',\r\n            warn: '',\r\n            notice: '',\r\n            customScope: '',\r\n            default: '',\r\n            isDifferedFromDefault: false,\r\n            showFallbackReset: false,\r\n            additionalClasses: {},\r\n            isUseDefault: '',\r\n            serviceDisabled: false,\r\n            valueUpdate: false, // ko binding valueUpdate\r\n\r\n            switcherConfig: {\r\n                component: 'Magento_Ui/js/form/switcher',\r\n                name: '${ $.name }_switcher',\r\n                target: '${ $.name }',\r\n                property: 'value'\r\n            },\r\n            listens: {\r\n                visible: 'setPreview',\r\n                value: 'setDifferedFromDefault',\r\n                '${ $.provider }:data.reset': 'reset',\r\n                '${ $.provider }:data.overload': 'overload',\r\n                '${ $.provider }:${ $.customScope ? $.customScope + \".\" : \"\"}data.validate': 'validate',\r\n                'isUseDefault': 'toggleUseDefault'\r\n            },\r\n            ignoreTmpls: {\r\n                value: true\r\n            },\r\n\r\n            links: {\r\n                value: '${ $.provider }:${ $.dataScope }'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Invokes initialize method of parent class,\r\n         * contains initialization logic\r\n         */\r\n        initialize: function () {\r\n            _.bindAll(this, 'reset');\r\n\r\n            this._super()\r\n                .setInitialValue()\r\n                ._setClasses()\r\n                .initSwitcher();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if component has error.\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        checkInvalid: function () {\r\n            return this.error() && this.error().length ? this : null;\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties of instance\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            var rules = this.validation = this.validation || {};\r\n\r\n            this._super();\r\n\r\n            this.observe('error disabled focused preview visible value warn notice isDifferedFromDefault')\r\n                .observe('isUseDefault serviceDisabled')\r\n                .observe({\r\n                    'required': !!rules['required-entry']\r\n                });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes regular properties of instance.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        initConfig: function () {\r\n            var uid = utils.uniqueid(),\r\n                name,\r\n                valueUpdate,\r\n                scope;\r\n\r\n            this._super();\r\n\r\n            scope = this.dataScope.split('.');\r\n            name = scope.length > 1 ? scope.slice(1) : scope;\r\n\r\n            valueUpdate = this.showFallbackReset ? 'afterkeydown' : this.valueUpdate;\r\n\r\n            _.extend(this, {\r\n                uid: uid,\r\n                noticeId: 'notice-' + uid,\r\n                errorId: 'error-' + uid,\r\n                tooltipId: 'tooltip-' + uid,\r\n                inputName: utils.serializeName(name.join('.')),\r\n                valueUpdate: valueUpdate\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes switcher element instance.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        initSwitcher: function () {\r\n            if (this.switcherConfig.enabled) {\r\n                layout([this.switcherConfig]);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Sets initial value of the element and subscribes to it's changes.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        setInitialValue: function () {\r\n            this.initialValue = this.getInitialValue();\r\n\r\n            if (this.value.peek() !== this.initialValue) {\r\n                this.value(this.initialValue);\r\n            }\r\n\r\n            this.on('value', this.onUpdate.bind(this));\r\n            this.isUseDefault(this.disabled());\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Extends 'additionalClasses' object.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        _setClasses: function () {\r\n            var additional = this.additionalClasses;\r\n\r\n            if (_.isString(additional)) {\r\n                this.additionalClasses = {};\r\n\r\n                if (additional.trim().length) {\r\n                    additional = additional.trim().split(' ');\r\n\r\n                    additional.forEach(function (name) {\r\n                        if (name.length) {\r\n                            this.additionalClasses[name] = true;\r\n                        }\r\n                    }, this);\r\n                }\r\n            }\r\n\r\n            _.extend(this.additionalClasses, {\r\n                _required: this.required,\r\n                _error: this.error,\r\n                _warn: this.warn,\r\n                _disabled: this.disabled\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Gets initial value of element\r\n         *\r\n         * @returns {*} Elements' value.\r\n         */\r\n        getInitialValue: function () {\r\n            var values = [this.value(), this.default],\r\n                value;\r\n\r\n            values.some(function (v) {\r\n                if (v !== null && v !== undefined) {\r\n                    value = v;\r\n\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n            });\r\n\r\n            return this.normalizeData(value);\r\n        },\r\n\r\n        /**\r\n         * Sets 'value' as 'hidden' property's value, triggers 'toggle' event,\r\n         * sets instance's hidden identifier in params storage based on\r\n         * 'value'.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        setVisible: function (isVisible) {\r\n            this.visible(isVisible);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Show element.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        show: function () {\r\n            this.visible(true);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Hide element.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        hide: function () {\r\n            this.visible(false);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Disable element.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        disable: function () {\r\n            this.disabled(true);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Enable element.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        enable: function () {\r\n            this.disabled(false);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @param {(String|Object)} rule\r\n         * @param {(Object|Boolean)} [options]\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        setValidation: function (rule, options) {\r\n            var rules = utils.copy(this.validation),\r\n                changed;\r\n\r\n            if (_.isObject(rule)) {\r\n                _.extend(this.validation, rule);\r\n            } else {\r\n                this.validation[rule] = options;\r\n            }\r\n\r\n            changed = !utils.compare(rules, this.validation).equal;\r\n\r\n            if (changed) {\r\n                this.required(!!rules['required-entry']);\r\n                this.validate();\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Returns unwrapped preview observable.\r\n         *\r\n         * @returns {String} Value of the preview observable.\r\n         */\r\n        getPreview: function () {\r\n            return this.value();\r\n        },\r\n\r\n        /**\r\n         * Checks if element has addons\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        hasAddons: function () {\r\n            return this.addbefore || this.addafter;\r\n        },\r\n\r\n        /**\r\n         * Checks if element has service setting\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        hasService: function () {\r\n            return this.service && this.service.template;\r\n        },\r\n\r\n        /**\r\n         * Defines if value has changed.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        hasChanged: function () {\r\n            var notEqual = this.value() !== this.initialValue;\r\n\r\n            return !this.visible() ? false : notEqual;\r\n        },\r\n\r\n        /**\r\n         * Checks if 'value' is not empty.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        hasData: function () {\r\n            return !utils.isEmpty(this.value());\r\n        },\r\n\r\n        /**\r\n         * Sets value observable to initialValue property.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        reset: function () {\r\n            this.value(this.initialValue);\r\n            this.error(false);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Sets current state as initial.\r\n         */\r\n        overload: function () {\r\n            this.setInitialValue();\r\n            this.bubble('update', this.hasChanged());\r\n        },\r\n\r\n        /**\r\n         * Clears 'value' property.\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        clear: function () {\r\n            this.value('');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Converts values like 'null' or 'undefined' to an empty string.\r\n         *\r\n         * @param {*} value - Value to be processed.\r\n         * @returns {*}\r\n         */\r\n        normalizeData: function (value) {\r\n            return utils.isEmpty(value) ? '' : value;\r\n        },\r\n\r\n        /**\r\n         * Validates itself by it's validation rules using validator object.\r\n         * If validation of a rule did not pass, writes it's message to\r\n         * 'error' observable property.\r\n         *\r\n         * @returns {Object} Validate information.\r\n         */\r\n        validate: function () {\r\n            var value = this.value(),\r\n                result = validator(this.validation, value, this.validationParams),\r\n                message = !this.disabled() && this.visible() ? result.message : '',\r\n                isValid = this.disabled() || !this.visible() || result.passed;\r\n\r\n            this.error(message);\r\n            this.error.valueHasMutated();\r\n            this.bubble('error', message);\r\n\r\n            //TODO: Implement proper result propagation for form\r\n            if (this.source && !isValid) {\r\n                this.source.set('params.invalid', true);\r\n            }\r\n\r\n            return {\r\n                valid: isValid,\r\n                target: this\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Callback that fires when 'value' property is updated.\r\n         */\r\n        onUpdate: function () {\r\n            this.bubble('update', this.hasChanged());\r\n\r\n            this.validate();\r\n        },\r\n\r\n        /**\r\n         * Restore value to default\r\n         */\r\n        restoreToDefault: function () {\r\n            this.value(this.default);\r\n            this.focused(true);\r\n        },\r\n\r\n        /**\r\n         * Update whether value differs from default value\r\n         */\r\n        setDifferedFromDefault: function () {\r\n            var value = typeof this.value() != 'undefined' && this.value() !== null ? this.value() : '',\r\n                defaultValue = typeof this.default != 'undefined' && this.default !== null ? this.default : '';\r\n\r\n            this.isDifferedFromDefault(value !== defaultValue);\r\n        },\r\n\r\n        /**\r\n         * @param {Boolean} state\r\n         */\r\n        toggleUseDefault: function (state) {\r\n            this.disabled(state);\r\n\r\n            if (this.source && this.hasService()) {\r\n                this.source.set('data.use_default.' + this.index, Number(state));\r\n            }\r\n        },\r\n\r\n        /**\r\n         *  Callback when value is changed by user\r\n         */\r\n        userChanges: function () {\r\n            this.valueChangedByUser = true;\r\n        },\r\n\r\n        /**\r\n         * Returns correct id for 'aria-describedby' accessibility attribute\r\n         *\r\n         * @returns {Boolean|String}\r\n         */\r\n        getDescriptionId: function () {\r\n            var id = false;\r\n\r\n            if (this.error()) {\r\n                id = this.errorId;\r\n            } else if (this.notice()) {\r\n                id = this.noticeId;\r\n            }\r\n\r\n            return id;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/boolean.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    './abstract'\r\n], function (Abstract) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            checked: false,\r\n            links: {\r\n                checked: 'value'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @returns {*|void|Element}\r\n         */\r\n        initObservable: function () {\r\n            return this._super()\r\n                    .observe('checked');\r\n        },\r\n\r\n        /**\r\n         * Converts provided value to boolean.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        normalizeData: function () {\r\n            return !!+this._super();\r\n        },\r\n\r\n        /**\r\n         * Calls 'onUpdate' method of parent, if value is defined and instance's\r\n         *     'unique' property set to true, calls 'setUnique' method\r\n         *\r\n         * @return {Object} - reference to instance\r\n         */\r\n        onUpdate: function () {\r\n            if (this.hasUnique) {\r\n                this.setUnique();\r\n            }\r\n\r\n            return this._super();\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/checkbox-set.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    './abstract'\r\n], function (_, utils, Abstract) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            template: 'ui/form/element/checkbox-set',\r\n            multiple: false,\r\n            multipleScopeValue: null\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        initConfig: function () {\r\n            this._super();\r\n\r\n            this.value = this.normalizeData(this.value);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        initLinks: function () {\r\n            var scope = this.source.get(this.dataScope);\r\n\r\n            this.multipleScopeValue = this.multiple && _.isArray(scope) ? utils.copy(scope) : undefined;\r\n\r\n            return this._super();\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        reset: function () {\r\n            this.value(utils.copy(this.initialValue));\r\n            this.error(false);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        clear: function () {\r\n            var value = this.multiple ? [] : '';\r\n\r\n            this.value(value);\r\n            this.error(false);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        normalizeData: function (value) {\r\n            if (!this.multiple) {\r\n                return this._super();\r\n            }\r\n\r\n            return _.isArray(value) ? utils.copy(value) : [];\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        setInitialValue: function () {\r\n            this._super();\r\n\r\n            this.initialValue = utils.copy(this.initialValue);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        getInitialValue: function () {\r\n            var values = [this.multipleScopeValue, this.default, this.value.peek(), []],\r\n                value;\r\n\r\n            if (!this.multiple) {\r\n                return this._super();\r\n            }\r\n\r\n            values.some(function (v) {\r\n                return _.isArray(v) && (value = utils.copy(v));\r\n            });\r\n\r\n            return value;\r\n        },\r\n\r\n        /**\r\n         * Returns labels which matches current value.\r\n         *\r\n         * @returns {String|Array}\r\n         */\r\n        getPreview: function () {\r\n            var option;\r\n\r\n            if (!this.multiple) {\r\n                option = this.getOption(this.value());\r\n\r\n                return option ? option.label : '';\r\n            }\r\n\r\n            return this.value.map(function (value) {\r\n                return this.getOption(value).label;\r\n            }, this);\r\n        },\r\n\r\n        /**\r\n         * Returns option object associated with provided value.\r\n         *\r\n         * @param {String} value\r\n         * @returns {Object}\r\n         */\r\n        getOption: function (value) {\r\n            return _.findWhere(this.options, {\r\n                value: value\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        hasChanged: function () {\r\n            var value = this.value(),\r\n                initial = this.initialValue;\r\n\r\n            return this.multiple ?\r\n                !utils.equalArrays(value, initial) :\r\n                this._super();\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/color-picker-palette.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/**\r\n * @api\r\n */\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return [\r\n        [\r\n            'rgb(0,0,0)', 'rgb(52,52,52)', 'rgb(83,83,83)', 'rgb(135,135,135)', 'rgb(193,193,193)',\r\n            'rgb(234,234,234)', 'rgb(240,240,240)', 'rgb(255,255,255)'\r\n        ],\r\n        [\r\n            'rgb(252,0,9)', 'rgb(253,135,10)', 'rgb(255,255,13)', 'rgb(35,255,9)', 'rgb(33,255,255)',\r\n            'rgb(0,0,254)', 'rgb(132,0,254)', 'rgb(251,0,255)'\r\n        ],\r\n        [\r\n            'rgb(240,192,194)', 'rgb(251,223,194)', 'rgb(255,241,193)', 'rgb(210,230,201)',\r\n            'rgb(199,217,220)', 'rgb(197,219,240)', 'rgb(208,200,227)', 'rgb(229,199,212)'\r\n        ],\r\n        [\r\n            'rgb(228,133,135)', 'rgb(246,193,139)', 'rgb(254,225,136)', 'rgb(168,208,152)',\r\n            'rgb(146,184,190)', 'rgb(143,184,227)', 'rgb(165,148,204)', 'rgb(202,147,175)'\r\n        ],\r\n        [\r\n            'rgb(214,78,83)', 'rgb(243,163,88)', 'rgb(254,211,83)', 'rgb(130,187,106)',\r\n            'rgb(99,149,159)', 'rgb(93,150,211)', 'rgb(123,100,182)', 'rgb(180,100,142)'\r\n        ],\r\n        [\r\n            'rgb(190,0,5)', 'rgb(222,126,44)', 'rgb(236,183,39)', 'rgb(89,155,61)', 'rgb(55,110,123)',\r\n            'rgb(49,112,185)', 'rgb(83,55,150)', 'rgb(147,55,101)'\r\n        ],\r\n        [\r\n            'rgb(133,0,3)', 'rgb(163,74,10)', 'rgb(177,127,7)', 'rgb(45,101,23)', 'rgb(18,62,74)',\r\n            'rgb(14,62,129)', 'rgb(40,15,97)', 'rgb(95,16,55)'\r\n        ],\r\n        [\r\n            'rgb(81,0,1)', 'rgb(100,48,7)', 'rgb(107,78,3)', 'rgb(31,63,16)',\r\n            'rgb(13,39,46)', 'rgb(10,40,79)', 'rgb(24,12,59)', 'rgb(59,10,36)'\r\n        ]\r\n    ];\r\n});\r\n","Magento_Ui/js/form/element/color-picker.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'mage/translate',\r\n    'Magento_Ui/js/form/element/abstract',\r\n    'Magento_Ui/js/form/element/color-picker-palette'\r\n], function ($t, Abstract, palette) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n\r\n        defaults: {\r\n            colorPickerConfig: {\r\n                chooseText: $t('Apply'),\r\n                cancelText: $t('Cancel'),\r\n                maxSelectionSize: 8,\r\n                clickoutFiresChange: true,\r\n                allowEmpty: true,\r\n                localStorageKey: 'magento.spectrum',\r\n                palette: palette\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Invokes initialize method of parent class,\r\n         * contains initialization logic\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            this.colorPickerConfig.value = this.value;\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/country.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiRegistry',\r\n    './select'\r\n], function (_, registry, Select) {\r\n    'use strict';\r\n\r\n    return Select.extend({\r\n        defaults: {\r\n            imports: {\r\n                update: '${ $.parentName }.website_id:value'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Filters 'initialOptions' property by 'field' and 'value' passed,\r\n         * calls 'setOptions' passing the result to it\r\n         *\r\n         * @param {*} value\r\n         * @param {String} field\r\n         */\r\n        filter: function (value, field) {\r\n            var result, defaultCountry, defaultValue;\r\n\r\n            if (!field) { //validate field, if we are on update\r\n                field = this.filterBy.field;\r\n            }\r\n\r\n            this._super(value, field);\r\n            result = _.filter(this.initialOptions, function (item) {\r\n\r\n                if (item[field]) {\r\n                    return ~item[field].indexOf(value);\r\n                }\r\n\r\n                return false;\r\n            });\r\n\r\n            this.setOptions(result);\r\n            this.reset();\r\n\r\n            if (!this.value()) {\r\n                defaultCountry = _.filter(result, function (item) {\r\n                    return item['is_default'] && _.contains(item['is_default'], value);\r\n                });\r\n\r\n                if (defaultCountry.length) {\r\n                    defaultValue = defaultCountry.shift();\r\n                    this.value(defaultValue.value);\r\n                }\r\n            }\r\n        }\r\n    });\r\n});\r\n\r\n","Magento_Ui/js/form/element/date.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'moment',\r\n    'mageUtils',\r\n    './abstract',\r\n    'moment-timezone-with-data'\r\n], function (moment, utils, Abstract) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            options: {},\r\n\r\n            storeTimeZone: 'UTC',\r\n\r\n            validationParams: {\r\n                dateFormat: '${ $.outputDateFormat }'\r\n            },\r\n\r\n            /**\r\n             * Format of date that comes from the\r\n             * server (ICU Date Format).\r\n             *\r\n             * Used only in date picker mode\r\n             * (this.options.showsTime == false).\r\n             *\r\n             * @type {String}\r\n             */\r\n            inputDateFormat: 'y-MM-dd',\r\n\r\n            /**\r\n             * Format of date that should be sent to the\r\n             * server (ICU Date Format).\r\n             *\r\n             * Used only in date picker mode\r\n             * (this.options.showsTime == false).\r\n             *\r\n             * @type {String}\r\n             */\r\n            outputDateFormat: 'MM/dd/y',\r\n\r\n            /**\r\n             * Date/time format that is used to display date in\r\n             * the input field.\r\n             *\r\n             * @type {String}\r\n             */\r\n            pickerDateTimeFormat: '',\r\n\r\n            pickerDefaultDateFormat: 'MM/dd/y', // ICU Date Format\r\n            pickerDefaultTimeFormat: 'h:mm a', // ICU Time Format\r\n\r\n            elementTmpl: 'ui/form/element/date',\r\n\r\n            /**\r\n             * Format needed by moment timezone for conversion\r\n             */\r\n            timezoneFormat: 'YYYY-MM-DD HH:mm',\r\n\r\n            listens: {\r\n                'value': 'onValueChange',\r\n                'shiftedValue': 'onShiftedValueChange'\r\n            },\r\n\r\n            /**\r\n             * Date/time value shifted to corresponding timezone\r\n             * according to this.storeTimeZone property. This value\r\n             * will be sent to the server.\r\n             *\r\n             * @type {String}\r\n             */\r\n            shiftedValue: ''\r\n        },\r\n\r\n        /**\r\n         * Initializes regular properties of instance.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initConfig: function () {\r\n            this._super();\r\n\r\n            if (!this.options.dateFormat) {\r\n                this.options.dateFormat = this.pickerDefaultDateFormat;\r\n            }\r\n\r\n            if (!this.options.timeFormat) {\r\n                this.options.timeFormat = this.pickerDefaultTimeFormat;\r\n            }\r\n\r\n            this.prepareDateTimeFormats();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        initObservable: function () {\r\n            return this._super().observe(['shiftedValue']);\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        getPreview: function () {\r\n            return this.shiftedValue();\r\n        },\r\n\r\n        /**\r\n         * Prepares and sets date/time value that will be displayed\r\n         * in the input field.\r\n         *\r\n         * @param {String} value\r\n         */\r\n        onValueChange: function (value) {\r\n            var shiftedValue;\r\n\r\n            if (value) {\r\n                if (this.options.showsTime && !this.options.timeOnly) {\r\n                    shiftedValue = moment.tz(value, 'UTC').tz(this.storeTimeZone);\r\n                } else {\r\n                    shiftedValue = moment(value, this.outputDateFormat, true);\r\n                }\r\n\r\n                if (!shiftedValue.isValid()) {\r\n                    shiftedValue = moment(value, this.inputDateFormat);\r\n                }\r\n                shiftedValue = shiftedValue.format(this.pickerDateTimeFormat);\r\n            } else {\r\n                shiftedValue = '';\r\n            }\r\n\r\n            if (shiftedValue !== this.shiftedValue()) {\r\n                this.shiftedValue(shiftedValue);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Prepares and sets date/time value that will be sent\r\n         * to the server.\r\n         *\r\n         * @param {String} shiftedValue\r\n         */\r\n        onShiftedValueChange: function (shiftedValue) {\r\n            var value,\r\n                formattedValue,\r\n                momentValue;\r\n\r\n            if (shiftedValue) {\r\n                momentValue = moment(shiftedValue, this.pickerDateTimeFormat);\r\n\r\n                if (this.options.showsTime && !this.options.timeOnly) {\r\n                    formattedValue = moment(momentValue).format(this.timezoneFormat);\r\n                    value = moment.tz(formattedValue, this.storeTimeZone).tz('UTC').toISOString();\r\n                } else {\r\n                    value = momentValue.format(this.outputDateFormat);\r\n                }\r\n            } else {\r\n                value = '';\r\n            }\r\n\r\n            if (value !== this.value()) {\r\n                this.value(value);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Prepares and converts all date/time formats to be compatible\r\n         * with moment.js library.\r\n         */\r\n        prepareDateTimeFormats: function () {\r\n            if (this.options.timeOnly) {\r\n                this.pickerDateTimeFormat = this.options.timeFormat;\r\n            } else {\r\n                this.pickerDateTimeFormat = this.options.dateFormat;\r\n\r\n                if (this.options.showsTime) {\r\n                    this.pickerDateTimeFormat += ' ' + this.options.timeFormat;\r\n                }\r\n            }\r\n\r\n            this.pickerDateTimeFormat = utils.convertToMomentFormat(this.pickerDateTimeFormat);\r\n\r\n            if (this.options.dateFormat) {\r\n                this.outputDateFormat = this.options.dateFormat;\r\n            }\r\n\r\n            this.inputDateFormat = this.options.timeOnly ?\r\n                utils.convertToMomentFormat(this.pickerDefaultTimeFormat) :\r\n                utils.convertToMomentFormat(this.inputDateFormat);\r\n            this.outputDateFormat = this.options.timeOnly ?\r\n                utils.convertToMomentFormat(this.options.timeFormat) :\r\n                utils.convertToMomentFormat(this.outputDateFormat);\r\n\r\n            this.validationParams.dateFormat = this.outputDateFormat;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/image-uploader.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/* global Base64 */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mageUtils',\r\n    'Magento_Ui/js/modal/alert',\r\n    'Magento_Ui/js/lib/validation/validator',\r\n    'Magento_Ui/js/form/element/file-uploader',\r\n    'mage/adminhtml/browser'\r\n], function ($, _, utils, uiAlert, validator, Element, browser) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        /**\r\n         * {@inheritDoc}\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            // Listen for file deletions from the media browser\r\n            $(window).on('fileDeleted.mediabrowser', this.onDeleteFile.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Assign uid for media gallery\r\n         *\r\n         * @return {ImageUploader} Chainable.\r\n         */\r\n        initConfig: function () {\r\n            var mediaGalleryUid = utils.uniqueid();\r\n\r\n            this._super();\r\n\r\n            _.extend(this, {\r\n                mediaGalleryUid: mediaGalleryUid\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Add file event callback triggered from media gallery\r\n         *\r\n         * @param {ImageUploader} imageUploader - UI Class\r\n         * @param {Event} e\r\n         */\r\n        addFileFromMediaGallery: function (imageUploader, e) {\r\n            var $buttonEl = $(e.target),\r\n                fileSize = $buttonEl.data('size'),\r\n                fileMimeType = $buttonEl.data('mime-type'),\r\n                filePathname = $buttonEl.val(),\r\n                fileBasename = filePathname.split('/').pop();\r\n\r\n            this.addFile({\r\n                type: fileMimeType,\r\n                name: fileBasename,\r\n                size: fileSize,\r\n                url: filePathname\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Open the media browser dialog\r\n         *\r\n         * @param {ImageUploader} imageUploader - UI Class\r\n         * @param {Event} e\r\n         */\r\n        openMediaBrowserDialog: function (imageUploader, e) {\r\n            var $buttonEl = $(e.target),\r\n                openDialogUrl = this.mediaGallery.openDialogUrl +\r\n                'target_element_id/' + $buttonEl.attr('id') +\r\n                '/store/' + this.mediaGallery.storeId +\r\n                '/type/image/?isAjax=true';\r\n\r\n            if (this.mediaGallery.initialOpenSubpath) {\r\n                openDialogUrl += '&current_tree_path=' + Base64.idEncode(this.mediaGallery.initialOpenSubpath);\r\n            }\r\n\r\n            browser.openDialog(\r\n                openDialogUrl,\r\n                null,\r\n                null,\r\n                this.mediaGallery.openDialogTitle,\r\n                {\r\n                    targetElementId: $buttonEl.attr('id')\r\n                }\r\n            );\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.event} e\r\n         * @param {Object} data\r\n         * @returns {Object} Chainables\r\n         */\r\n        onDeleteFile: function (e, data) {\r\n            var fileId = this.getFileId(),\r\n                deletedFileIds = data.ids;\r\n\r\n            if (fileId && $.inArray(fileId, deletedFileIds) > -1) {\r\n                this.clear();\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * {@inheritDoc}\r\n         */\r\n        clear: function () {\r\n            this.value([]);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Gets the ID of the file used if set\r\n         *\r\n         * @return {String|Null} ID\r\n         */\r\n        getFileId: function () {\r\n            return this.hasData() ? this.value()[0].id : null;\r\n        },\r\n\r\n        /**\r\n         * Trigger native browser file upload UI via clicking on 'Upload' button\r\n         *\r\n         * @param {ImageUploader} imageUploader - UI Class\r\n         * @param {Event} e\r\n         */\r\n        triggerImageUpload: function (imageUploader, e) {\r\n            $(e.target).closest('.file-uploader').find('input[type=\"file\"]').trigger('click');\r\n        },\r\n\r\n        /**\r\n         * Get list of file extensions allowed in comma delimited format\r\n         *\r\n         * @return {String}\r\n         */\r\n        getAllowedFileExtensionsInCommaDelimitedFormat: function () {\r\n            var allowedExtensions = this.allowedExtensions.toUpperCase().split(' ');\r\n\r\n            // if jpg and jpeg in allowed extensions, remove jpeg from list\r\n            if (allowedExtensions.indexOf('JPG') !== -1 && allowedExtensions.indexOf('JPEG') !== -1) {\r\n                allowedExtensions.splice(allowedExtensions.indexOf('JPEG'), 1);\r\n            }\r\n\r\n            return allowedExtensions.join(', ');\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/media.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'mageUtils',\r\n    './abstract'\r\n], function (utils, Abstract) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            links: {\r\n                value: ''\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes file component.\r\n         *\r\n         * @returns {Media} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .initFormId();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Defines form ID with which file input will be associated.\r\n         *\r\n         * @returns {Media} Chainable.\r\n         */\r\n        initFormId: function () {\r\n            var namespace;\r\n\r\n            if (this.formId) {\r\n                return this;\r\n            }\r\n\r\n            namespace   = this.name.split('.');\r\n            this.formId = namespace[0];\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/multiselect.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    './select'\r\n], function (_, utils, Select) {\r\n    'use strict';\r\n\r\n    return Select.extend({\r\n        defaults: {\r\n            size: 5,\r\n            elementTmpl: 'ui/form/element/multiselect',\r\n            listens: {\r\n                value: 'setDifferedFromDefault setPrepareToSendData'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        setInitialValue: function () {\r\n            this._super();\r\n\r\n            this.initialValue = utils.copy(this.initialValue);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        normalizeData: function (value) {\r\n            if (utils.isEmpty(value)) {\r\n                value = [];\r\n            }\r\n\r\n            return _.isString(value) ? value.split(',') : value;\r\n        },\r\n\r\n        /**\r\n         * Sets the prepared data to dataSource\r\n         * by path, where key is component link to dataSource with\r\n         * suffix \"-prepared-for-send\"\r\n         *\r\n         * @param {Array} data - current component value\r\n         */\r\n        setPrepareToSendData: function (data) {\r\n            if (_.isUndefined(data) || !data.length) {\r\n                data = '';\r\n            }\r\n\r\n            this.source.set(this.dataScope + '-prepared-for-send', data);\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        getInitialValue: function () {\r\n            var values = [\r\n                    this.normalizeData(this.source.get(this.dataScope)),\r\n                    this.normalizeData(this.default)\r\n                ],\r\n                value;\r\n\r\n            values.some(function (v) {\r\n                return _.isArray(v) && (value = utils.copy(v)) && !_.isEmpty(v);\r\n            });\r\n\r\n            return value;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        hasChanged: function () {\r\n            var value = this.value(),\r\n                initial = this.initialValue;\r\n\r\n            return !utils.equalArrays(value, initial);\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        reset: function () {\r\n            this.value(utils.copy(this.initialValue));\r\n            this.error(false);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        clear: function () {\r\n            this.value([]);\r\n            this.error(false);\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/post-code.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    './abstract'\r\n], function (_, Abstract) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            imports: {\r\n                countryOptions: '${ $.parentName }.country_id:indexedOptions',\r\n                update: '${ $.parentName }.country_id:value'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties of instance\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super();\r\n\r\n            /**\r\n             * equalityComparer function\r\n             *\r\n             * @returns boolean.\r\n             */\r\n            this.value.equalityComparer = function (oldValue, newValue) {\r\n                return !oldValue && !newValue || oldValue === newValue;\r\n            };\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Method called every time country selector's value gets changed.\r\n         * Updates all validations and requirements for certain country.\r\n         * @param {String} value - Selected country ID.\r\n         */\r\n        update: function (value) {\r\n            var isZipCodeOptional,\r\n                option;\r\n\r\n            if (!value) {\r\n                return;\r\n            }\r\n\r\n            option = _.isObject(this.countryOptions) && this.countryOptions[value];\r\n\r\n            if (!option) {\r\n                return;\r\n            }\r\n\r\n            isZipCodeOptional = !!option['is_zipcode_optional'];\r\n\r\n            if (isZipCodeOptional) {\r\n                this.error(false);\r\n            }\r\n\r\n            this.validation['required-entry'] = !isZipCodeOptional;\r\n            this.required(!isZipCodeOptional);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/region.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiRegistry',\r\n    './select',\r\n    'Magento_Checkout/js/model/default-post-code-resolver'\r\n], function (_, registry, Select, defaultPostCodeResolver) {\r\n    'use strict';\r\n\r\n    return Select.extend({\r\n        defaults: {\r\n            skipValidation: false,\r\n            imports: {\r\n                countryOptions: '${ $.parentName }.country_id:indexedOptions',\r\n                update: '${ $.parentName }.country_id:value'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * {@inheritdoc}\r\n         */\r\n        initialize: function () {\r\n            var option;\r\n\r\n            this._super();\r\n\r\n            option = _.find(this.countryOptions, function (row) {\r\n                return row['is_default'] === true;\r\n            });\r\n            this.hideRegion(option);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Method called every time country selector's value gets changed.\r\n         * Updates all validations and requirements for certain country.\r\n         * @param {String} value - Selected country ID.\r\n         */\r\n        update: function (value) {\r\n            var isRegionRequired,\r\n                option;\r\n\r\n            if (!value) {\r\n                return;\r\n            }\r\n\r\n            option = _.isObject(this.countryOptions) && this.countryOptions[value];\r\n\r\n            if (!option) {\r\n                return;\r\n            }\r\n\r\n            this.hideRegion(option);\r\n\r\n            defaultPostCodeResolver.setUseDefaultPostCode(!option['is_zipcode_optional']);\r\n\r\n            isRegionRequired = !this.skipValidation && !!option['is_region_required'];\r\n\r\n            if (!isRegionRequired) {\r\n                this.error(false);\r\n            }\r\n\r\n            this.required(isRegionRequired);\r\n            this.validation['required-entry'] = isRegionRequired;\r\n\r\n            registry.get(this.customName, function (input) {\r\n                input.required(isRegionRequired);\r\n                input.validation['required-entry'] = isRegionRequired;\r\n                input.validation['validate-not-number-first'] = !this.options().length;\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Hide select and corresponding text input field if region must not be shown for selected country.\r\n         *\r\n         * @private\r\n         * @param {Object}option\r\n         */\r\n        hideRegion: function (option) {\r\n            if (!option || option['is_region_visible'] !== false) {\r\n                return;\r\n            }\r\n\r\n            this.setVisible(false);\r\n\r\n            if (this.customEntry) {\r\n                this.toggleInput(false);\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/select.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    'uiRegistry',\r\n    './abstract',\r\n    'uiLayout'\r\n], function (_, utils, registry, Abstract, layout) {\r\n    'use strict';\r\n\r\n    var inputNode = {\r\n        parent: '${ $.$data.parentName }',\r\n        component: 'Magento_Ui/js/form/element/abstract',\r\n        template: '${ $.$data.template }',\r\n        provider: '${ $.$data.provider }',\r\n        name: '${ $.$data.index }_input',\r\n        dataScope: '${ $.$data.customEntry }',\r\n        customScope: '${ $.$data.customScope }',\r\n        sortOrder: {\r\n            after: '${ $.$data.name }'\r\n        },\r\n        displayArea: 'body',\r\n        label: '${ $.$data.label }'\r\n    };\r\n\r\n    /**\r\n     * Parses incoming options, considers options with undefined value property\r\n     *     as caption\r\n     *\r\n     * @param  {Array} nodes\r\n     * @return {Object}\r\n     */\r\n    function parseOptions(nodes, captionValue) {\r\n        var caption,\r\n            value;\r\n\r\n        nodes = _.map(nodes, function (node) {\r\n            value = node.value;\r\n\r\n            if (value === null || value === captionValue) {\r\n                if (_.isUndefined(caption)) {\r\n                    caption = node.label;\r\n                }\r\n            } else {\r\n                return node;\r\n            }\r\n        });\r\n\r\n        return {\r\n            options: _.compact(nodes),\r\n            caption: _.isString(caption) ? caption : false\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Recursively loops over data to find non-undefined, non-array value\r\n     *\r\n     * @param  {Array} data\r\n     * @return {*} - first non-undefined value in array\r\n     */\r\n    function findFirst(data) {\r\n        var value;\r\n\r\n        data.some(function (node) {\r\n            value = node.value;\r\n\r\n            if (Array.isArray(value)) {\r\n                value = findFirst(value);\r\n            }\r\n\r\n            return !_.isUndefined(value);\r\n        });\r\n\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * Recursively set to object item like value and item.value like key.\r\n     *\r\n     * @param {Array} data\r\n     * @param {Object} result\r\n     * @returns {Object}\r\n     */\r\n    function indexOptions(data, result) {\r\n        var value;\r\n\r\n        result = result || {};\r\n\r\n        data.forEach(function (item) {\r\n            value = item.value;\r\n\r\n            if (Array.isArray(value)) {\r\n                indexOptions(value, result);\r\n            } else {\r\n                result[value] = item;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            customName: '${ $.parentName }.${ $.index }_input',\r\n            elementTmpl: 'ui/form/element/select',\r\n            caption: '',\r\n            options: []\r\n        },\r\n\r\n        /**\r\n         * Extends instance with defaults, extends config with formatted values\r\n         *     and options, and invokes initialize method of AbstractElement class.\r\n         *     If instance's 'customEntry' property is set to true, calls 'initInput'\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            if (this.customEntry) {\r\n                registry.get(this.name, this.initInput.bind(this));\r\n            }\r\n\r\n            if (this.filterBy) {\r\n                this.initFilter();\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Calls 'initObservable' of parent, initializes 'options' and 'initialOptions'\r\n         *     properties, calls 'setOptions' passing options to it\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super();\r\n\r\n            this.initialOptions = this.options;\r\n\r\n            this.observe('options caption')\r\n                .setOptions(this.options());\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Set link for filter.\r\n         *\r\n         * @returns {Object} Chainable\r\n         */\r\n        initFilter: function () {\r\n            var filter = this.filterBy;\r\n\r\n            this.filter(this.default, filter.field);\r\n            this.setLinks({\r\n                filter: filter.target\r\n            }, 'imports');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Creates input from template, renders it via renderer.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initInput: function () {\r\n            layout([utils.template(inputNode, this)]);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Matches specified value with existing options\r\n         * or, if value is not specified, returns value of the first option.\r\n         *\r\n         * @returns {*}\r\n         */\r\n        normalizeData: function () {\r\n            var value = this._super(),\r\n                option;\r\n\r\n            if (value !== '') {\r\n                option = this.getOption(value);\r\n\r\n                return option && option.value;\r\n            }\r\n\r\n            if (!this.caption()) {\r\n                return findFirst(this.options);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Filters 'initialOptions' property by 'field' and 'value' passed,\r\n         * calls 'setOptions' passing the result to it\r\n         *\r\n         * @param {*} value\r\n         * @param {String} field\r\n         */\r\n        filter: function (value, field) {\r\n            var source = this.initialOptions,\r\n                result;\r\n\r\n            field = field || this.filterBy.field;\r\n\r\n            result = _.filter(source, function (item) {\r\n                return item[field] === value || item.value === '';\r\n            });\r\n\r\n            this.setOptions(result);\r\n        },\r\n\r\n        /**\r\n         * Change visibility for input.\r\n         *\r\n         * @param {Boolean} isVisible\r\n         */\r\n        toggleInput: function (isVisible) {\r\n            registry.get(this.customName, function (input) {\r\n                input.setVisible(isVisible);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Sets 'data' to 'options' observable array, if instance has\r\n         * 'customEntry' property set to true, calls 'setHidden' method\r\n         *  passing !options.length as a parameter\r\n         *\r\n         * @param {Array} data\r\n         * @returns {Object} Chainable\r\n         */\r\n        setOptions: function (data) {\r\n            var captionValue = this.captionValue || '',\r\n                result = parseOptions(data, captionValue),\r\n                isVisible;\r\n\r\n            this.indexedOptions = indexOptions(result.options);\r\n\r\n            this.options(result.options);\r\n\r\n            if (!this.caption()) {\r\n                this.caption(result.caption);\r\n            }\r\n\r\n            if (this.customEntry) {\r\n                isVisible = !!result.options.length;\r\n\r\n                this.setVisible(isVisible);\r\n                this.toggleInput(!isVisible);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Processes preview for option by it's value, and sets the result\r\n         * to 'preview' observable\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        getPreview: function () {\r\n            var value = this.value(),\r\n                option = this.indexedOptions[value],\r\n                preview = option ? option.label : '';\r\n\r\n            this.preview(preview);\r\n\r\n            return preview;\r\n        },\r\n\r\n        /**\r\n         * Get option from indexedOptions list.\r\n         *\r\n         * @param {Number} value\r\n         * @returns {Object} Chainable\r\n         */\r\n        getOption: function (value) {\r\n            return this.indexedOptions[value];\r\n        },\r\n\r\n        /**\r\n         * Select first available option\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        clear: function () {\r\n            var value = this.caption() ? '' : findFirst(this.options);\r\n\r\n            this.value(value);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties of instance\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        setInitialValue: function () {\r\n            if (_.isUndefined(this.value()) && !this.default) {\r\n                this.clear();\r\n            }\r\n\r\n            return this._super();\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/single-checkbox-toggle-notice.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/single-checkbox'\r\n], function (SingleCheckbox) {\r\n    'use strict';\r\n\r\n    return SingleCheckbox.extend({\r\n        defaults: {\r\n            notices: [],\r\n            tracks: {\r\n                notice: true\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Choose notice on initialization\r\n         *\r\n         * @returns {*|void|Element}\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .chooseNotice();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Choose notice function\r\n         *\r\n         * @returns void\r\n         */\r\n        chooseNotice: function () {\r\n            var checkedNoticeNumber = Number(this.checked());\r\n\r\n            this.notice = this.notices[checkedNoticeNumber];\r\n        },\r\n\r\n        /**\r\n         * Choose notice on update\r\n         *\r\n         * @returns void\r\n         */\r\n        onUpdate: function () {\r\n            this._super();\r\n            this.chooseNotice();\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/single-checkbox-use-config.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/single-checkbox'\r\n], function (Component) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            isUseDefault: false,\r\n            isUseConfig: false,\r\n            listens: {\r\n                'isUseConfig': 'toggleElement',\r\n                'isUseDefault': 'toggleElement'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        initObservable: function () {\r\n\r\n            return this\r\n                ._super()\r\n                .observe('isUseConfig');\r\n        },\r\n\r\n        /**\r\n         * Toggle element\r\n         */\r\n        toggleElement: function () {\r\n            this.disabled(this.isUseDefault() || this.isUseConfig());\r\n\r\n            if (this.source) {\r\n                this.source.set('data.use_default.' + this.index, Number(this.isUseDefault()));\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/single-checkbox.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'Magento_Ui/js/form/element/abstract',\r\n    'underscore',\r\n    'mage/translate'\r\n], function (AbstractField, _, $t) {\r\n    'use strict';\r\n\r\n    return AbstractField.extend({\r\n        defaults: {\r\n            template: 'ui/form/components/single/field',\r\n            checked: false,\r\n            initialChecked: false,\r\n            multiple: false,\r\n            prefer: 'checkbox', // 'radio' | 'checkbox' | 'toggle'\r\n            valueMap: {},\r\n\r\n            templates: {\r\n                radio: 'ui/form/components/single/radio',\r\n                checkbox: 'ui/form/components/single/checkbox',\r\n                toggle: 'ui/form/components/single/switcher'\r\n            },\r\n\r\n            listens: {\r\n                'checked': 'onCheckedChanged',\r\n                'value': 'onExtendedValueChanged'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        initConfig: function (config) {\r\n            this._super();\r\n\r\n            if (!config.elementTmpl) {\r\n                if (!this.prefer && !this.multiple) {\r\n                    this.elementTmpl = this.templates.radio;\r\n                } else if (this.prefer === 'radio') {\r\n                    this.elementTmpl = this.templates.radio;\r\n                } else if (this.prefer === 'checkbox') {\r\n                    this.elementTmpl = this.templates.checkbox;\r\n                } else if (this.prefer === 'toggle') {\r\n                    this.elementTmpl = this.templates.toggle;\r\n                } else {\r\n                    this.elementTmpl = this.templates.checkbox;\r\n                }\r\n            }\r\n\r\n            if (this.prefer === 'toggle' && _.isEmpty(this.toggleLabels)) {\r\n                this.toggleLabels = {\r\n                    'on': $t('Yes'),\r\n                    'off': $t('No')\r\n                };\r\n            }\r\n\r\n            if (typeof this.default === 'undefined' || this.default === null) {\r\n                this.default = '';\r\n            }\r\n\r\n            if (typeof this.value === 'undefined' || this.value === null) {\r\n                this.value = _.isEmpty(this.valueMap) || this.default !== '' ? this.default : this.valueMap.false;\r\n                this.initialValue = this.value;\r\n            } else {\r\n                this.initialValue = this.value;\r\n            }\r\n\r\n            if (this.multiple && !_.isArray(this.value)) {\r\n                this.value = []; // needed for correct observable assignment\r\n            }\r\n\r\n            this.initialChecked = this.checked;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        initObservable: function () {\r\n            return this\r\n                ._super()\r\n                .observe('checked');\r\n        },\r\n\r\n        /**\r\n         * Get true/false key from valueMap by value.\r\n         *\r\n         * @param {*} value\r\n         * @returns {Boolean|undefined}\r\n         */\r\n        getReverseValueMap: function getReverseValueMap(value) {\r\n            var bool = false;\r\n\r\n            _.some(this.valueMap, function (iValue, iBool) {\r\n                if (iValue === value) {\r\n                    bool = iBool === 'true';\r\n\r\n                    return true;\r\n                }\r\n            });\r\n\r\n            return bool;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        setInitialValue: function () {\r\n            if (_.isEmpty(this.valueMap)) {\r\n                this.on('value', this.onUpdate.bind(this));\r\n            } else {\r\n                this._super();\r\n                this.checked(this.getReverseValueMap(this.value()));\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Handle dataScope changes for checkbox / radio button.\r\n         *\r\n         * @param {*} newExportedValue\r\n         */\r\n        onExtendedValueChanged: function (newExportedValue) {\r\n            var isMappedUsed = !_.isEmpty(this.valueMap),\r\n                oldChecked = this.checked.peek(),\r\n                oldValue = this.initialValue,\r\n                newChecked;\r\n\r\n            if (this.multiple) {\r\n                newChecked = newExportedValue.indexOf(oldValue) !== -1;\r\n            } else if (isMappedUsed) {\r\n                newChecked = this.getReverseValueMap(newExportedValue);\r\n            } else if (typeof newExportedValue === 'boolean') {\r\n                newChecked = newExportedValue;\r\n            } else {\r\n                newChecked = newExportedValue === oldValue;\r\n            }\r\n\r\n            if (newChecked !== oldChecked) {\r\n                this.checked(newChecked);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handle checked state changes for checkbox / radio button.\r\n         *\r\n         * @param {Boolean} newChecked\r\n         */\r\n        onCheckedChanged: function (newChecked) {\r\n            var isMappedUsed = !_.isEmpty(this.valueMap),\r\n                oldValue = this.initialValue,\r\n                newValue;\r\n\r\n            if (isMappedUsed) {\r\n                newValue = this.valueMap[newChecked];\r\n            } else {\r\n                newValue = oldValue;\r\n            }\r\n\r\n            if (!this.multiple && newChecked) {\r\n                this.value(newValue);\r\n            } else if (!this.multiple && !newChecked) {\r\n                if (typeof newValue === 'boolean') {\r\n                    this.value(newChecked);\r\n                } else if (newValue === this.value.peek()) {\r\n                    this.value('');\r\n                }\r\n\r\n                if (isMappedUsed) {\r\n                    this.value(newValue);\r\n                }\r\n            } else if (this.multiple && newChecked && this.value.indexOf(newValue) === -1) {\r\n                this.value.push(newValue);\r\n            } else if (this.multiple && !newChecked && this.value.indexOf(newValue) !== -1) {\r\n                this.value.splice(this.value.indexOf(newValue), 1);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        onUpdate: function () {\r\n            if (this.hasUnique) {\r\n                this.setUnique();\r\n            }\r\n\r\n            return this._super();\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        reset: function () {\r\n            if (this.multiple && this.initialChecked) {\r\n                this.value.push(this.initialValue);\r\n            } else if (this.multiple && !this.initialChecked) {\r\n                this.value.splice(this.value.indexOf(this.initialValue), 1);\r\n            } else {\r\n                this.value(this.initialValue);\r\n            }\r\n\r\n            this.error(false);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        clear: function () {\r\n            if (this.multiple) {\r\n                this.value([]);\r\n            } else {\r\n                this.value('');\r\n            }\r\n\r\n            this.error(false);\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/text.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'uiElement',\r\n    'mageUtils'\r\n], function (Element, utils) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            visible: true,\r\n            label: '',\r\n            error: '',\r\n            uid: utils.uniqueid(),\r\n            disabled: false,\r\n            links: {\r\n                value: '${ $.provider }:${ $.dataScope }'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Has service\r\n         *\r\n         * @returns {Boolean} false.\r\n         */\r\n        hasService: function () {\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Has addons\r\n         *\r\n         * @returns {Boolean} false.\r\n         */\r\n        hasAddons: function () {\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Calls 'initObservable' of parent\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('disabled visible value');\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/textarea.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    './abstract'\r\n], function (Abstract) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            cols: 15,\r\n            rows: 2,\r\n            elementTmpl: 'ui/form/element/textarea'\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/url-input.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiLayout',\r\n    'mage/translate',\r\n    'Magento_Ui/js/form/element/abstract'\r\n], function (_, layout, $t, Abstract) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        defaults: {\r\n            linkedElement: {},\r\n            settingTemplate: 'ui/form/element/urlInput/setting',\r\n            typeSelectorTemplate: 'ui/form/element/urlInput/typeSelector',\r\n            options: [],\r\n            linkedElementInstances: {},\r\n            //checkbox\r\n            isDisplayAdditionalSettings: true,\r\n            settingValue: false,\r\n            settingLabel: $t('Open in new tab'),\r\n            tracks: {\r\n                linkedElement: true\r\n            },\r\n            baseLinkSetting: {\r\n                namePrefix: '${$.name}.',\r\n                dataScopePrefix: '${$.dataScope}.',\r\n                provider: '${$.provider}'\r\n            },\r\n            urlTypes: {},\r\n            listens: {\r\n                settingValue: 'checked',\r\n                disabled: 'hideLinkedElement',\r\n                linkType: 'createChildUrlInputComponent'\r\n            },\r\n            links: {\r\n                linkType: '${$.provider}:${$.dataScope}.type',\r\n                settingValue: '${$.provider}:${$.dataScope}.setting'\r\n            }\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initConfig: function (config) {\r\n            var processedLinkTypes = {},\r\n                baseLinkType = this.constructor.defaults.baseLinkSetting;\r\n\r\n            _.each(config.urlTypes, function (linkSettingsArray, linkName) {\r\n                //add link name by link type\r\n                linkSettingsArray.name = baseLinkType.namePrefix + linkName;\r\n                linkSettingsArray.dataScope = baseLinkType.dataScopePrefix + linkName;\r\n                linkSettingsArray.type = linkName;\r\n                linkSettingsArray.disabled = config.disabled;\r\n                linkSettingsArray.visible = config.visible;\r\n                processedLinkTypes[linkName] = {};\r\n                _.extend(processedLinkTypes[linkName], baseLinkType, linkSettingsArray);\r\n            });\r\n            _.extend(this.constructor.defaults.urlTypes, processedLinkTypes);\r\n\r\n            this._super();\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties of instance\r\n         *\r\n         * @returns {Abstract} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('componentTemplate options value linkType settingValue checked isDisplayAdditionalSettings')\r\n                .setOptions();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Set options to select based on link types configuration\r\n         *\r\n         * @return {Object}\r\n         */\r\n        setOptions: function () {\r\n            var result = [];\r\n\r\n            _.each(this.urlTypes, function (option, key) {\r\n                result.push({\r\n                    value: key,\r\n                    label: option.label,\r\n                    sortOrder: option.sortOrder || 0\r\n                });\r\n            });\r\n\r\n            //sort options by sortOrder\r\n            result.sort(function (a, b) {\r\n                return a.sortOrder > b.sortOrder ? 1 : -1;\r\n            });\r\n\r\n            this.options(result);\r\n\r\n            return this;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        setPreview: function (visible) {\r\n            this.linkedElement().visible(visible);\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties of instance\r\n         *\r\n         * @param {Boolean} disabled\r\n         */\r\n        hideLinkedElement: function (disabled) {\r\n            this.linkedElement().disabled(disabled);\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        destroy: function () {\r\n            _.each(this.linkedElementInstances, function (value) {\r\n                value().destroy();\r\n            });\r\n            this._super();\r\n        },\r\n\r\n        /**\r\n         * Create child component by value\r\n         *\r\n         * @param {String} value\r\n         * @return void\r\n         */\r\n        createChildUrlInputComponent: function (value) {\r\n            var elementConfig;\r\n\r\n            if (!_.isEmpty(value) && _.isUndefined(this.linkedElementInstances[value])) {\r\n                elementConfig = this.urlTypes[value];\r\n                layout([elementConfig]);\r\n                this.linkedElementInstances[value] = this.requestModule(elementConfig.name);\r\n            }\r\n            this.linkedElement = this.linkedElementInstances[value];\r\n\r\n        },\r\n\r\n        /**\r\n         * Returns linked element to display related field in template\r\n         * @return String\r\n         */\r\n        getLinkedElementName: function () {\r\n            return this.linkedElement;\r\n        },\r\n\r\n        /**\r\n         * Add ability to choose check box by clicking on label\r\n         */\r\n        checkboxClick: function () {\r\n            if (!this.disabled()) {\r\n                this.settingValue(!this.settingValue());\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/website.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiRegistry',\r\n    './select'\r\n], function (_, registry, Select) {\r\n    'use strict';\r\n\r\n    return Select.extend({\r\n        defaults: {\r\n            customerId: null,\r\n            isGlobalScope: 0\r\n        },\r\n\r\n        /**\r\n         * Website component constructor.\r\n         * @returns {exports}\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/form/element/wysiwyg.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'wysiwygAdapter',\r\n    'Magento_Ui/js/lib/view/utils/async',\r\n    'underscore',\r\n    'ko',\r\n    './abstract',\r\n    'mage/adminhtml/events',\r\n    'Magento_Variable/variables'\r\n], function (wysiwyg, $, _, ko, Abstract, varienGlobalEvents) {\r\n    'use strict';\r\n\r\n    return Abstract.extend({\r\n        currentWysiwyg: undefined,\r\n        defaults: {\r\n            elementSelector: 'textarea',\r\n            suffixRegExpPattern: '${ $.wysiwygUniqueSuffix }',\r\n            $wysiwygEditorButton: '',\r\n            links: {\r\n                value: '${ $.provider }:${ $.dataScope }'\r\n            },\r\n            template: 'ui/form/field',\r\n            elementTmpl: 'ui/form/element/wysiwyg',\r\n            content:        '',\r\n            showSpinner:    false,\r\n            loading:        false,\r\n            listens: {\r\n                disabled: 'setDisabled'\r\n            }\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @returns {} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .initNodeListener();\r\n\r\n            $.async({\r\n                component: this,\r\n                selector: 'button'\r\n            }, function (element) {\r\n                this.$wysiwygEditorButton = this.$wysiwygEditorButton ?\r\n                    this.$wysiwygEditorButton.add($(element)) : $(element);\r\n            }.bind(this));\r\n\r\n            // disable editor completely after initialization is field is disabled\r\n            varienGlobalEvents.attachEventHandler('wysiwygEditorInitialized', function () {\r\n                if (!_.isUndefined(window.tinyMceEditors)) {\r\n                    this.currentWysiwyg = window.tinyMceEditors[this.wysiwygId];\r\n                }\r\n\r\n                if (this.disabled()) {\r\n                    this.setDisabled(true);\r\n                }\r\n            }.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initConfig: function (config) {\r\n            var pattern = config.suffixRegExpPattern || this.constructor.defaults.suffixRegExpPattern;\r\n\r\n            pattern = pattern.replace(/\\$/g, '\\\\$&');\r\n            config.content = config.content.replace(new RegExp(pattern, 'g'), this.getUniqueSuffix(config));\r\n            this._super();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Build unique id based on name, underscore separated.\r\n         *\r\n         * @param {Object} config\r\n         */\r\n        getUniqueSuffix: function (config) {\r\n            return config.name.replace(/(\\.|-)/g, '_');\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        destroy: function () {\r\n            this._super();\r\n            wysiwyg.removeEvents(this.wysiwygId);\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @returns {exports}\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe(['value', 'content']);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @returns {} Chainable.\r\n         */\r\n        initNodeListener: function () {\r\n            $.async({\r\n                component: this,\r\n                selector: this.elementSelector\r\n            }, this.setElementNode.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @param {HTMLElement} node\r\n         */\r\n        setElementNode: function (node) {\r\n            $(node).bindings({\r\n                value: this.value\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Set disabled property to wysiwyg component\r\n         *\r\n         * @param {Boolean} disabled\r\n         */\r\n        setDisabled: function (disabled) {\r\n            if (this.$wysiwygEditorButton && disabled) {\r\n                this.$wysiwygEditorButton.prop('disabled', 'disabled');\r\n            } else if (this.$wysiwygEditorButton) {\r\n                this.$wysiwygEditorButton.prop('disabled', false);\r\n            }\r\n\r\n            /* eslint-disable no-undef */\r\n            if (!_.isUndefined(this.currentWysiwyg) && this.currentWysiwyg.activeEditor()) {\r\n                this.currentWysiwyg.setEnabledStatus(!disabled);\r\n                this.currentWysiwyg.getPluginButtons().prop('disabled', disabled);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Content getter\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getContentUnsanitizedHtml: function () {\r\n            return this.content();\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/data-storage.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mageUtils',\r\n    'uiClass'\r\n], function ($, _, utils, Class) {\r\n    'use strict';\r\n\r\n    return Class.extend({\r\n        defaults: {\r\n            cacheRequests: true,\r\n            cachedRequestDelay: 50,\r\n            indexField: 'entity_id',\r\n            requestConfig: {\r\n                url: '${ $.updateUrl }',\r\n                method: 'GET',\r\n                dataType: 'json'\r\n            },\r\n            dataScope: '',\r\n            data: {}\r\n        },\r\n\r\n        /**\r\n         * Initializes dataStorage configuration.\r\n         *\r\n         * @returns {DataStorage} Chainable.\r\n         */\r\n        initConfig: function () {\r\n            var scope;\r\n\r\n            this._super();\r\n\r\n            scope = this.dataScope;\r\n\r\n            if (typeof scope === 'string') {\r\n                this.dataScope = scope ? [scope] : [];\r\n            }\r\n\r\n            this._requests = [];\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Extracts data which matches specified set of identifiers.\r\n         *\r\n         * @param {Array} ids - Records identifiers.\r\n         * @returns {Array|Boolean}\r\n         */\r\n        getByIds: function (ids) {\r\n            var result = [],\r\n                hasData;\r\n\r\n            hasData = ids.every(function (id) {\r\n                var item = this.data[id];\r\n\r\n                return item ? result.push(item) : false;\r\n            }, this);\r\n\r\n            return hasData ? result : false;\r\n        },\r\n\r\n        /**\r\n         * Extracts identifiers of provided records.\r\n         * If no records were provided then full list of\r\n         * current data id's will be returned.\r\n         *\r\n         * @param {Object|Array} [data=this.data]\r\n         * @returns {Array}\r\n         */\r\n        getIds: function (data) {\r\n            data = data || this.data;\r\n\r\n            return _.pluck(data, this.indexField);\r\n        },\r\n\r\n        /**\r\n         * Extracts data which matches specified parameters.\r\n         *\r\n         * @param {Object} params - Request parameters.\r\n         * @param {Object} [options={}]\r\n         * @returns {jQueryPromise}\r\n         */\r\n        getData: function (params, options) {\r\n            var cachedRequest;\r\n\r\n            if (this.hasScopeChanged(params)) {\r\n                this.clearRequests();\r\n            } else {\r\n                cachedRequest = this.getRequest(params);\r\n            }\r\n\r\n            options = options || {};\r\n\r\n            return !options.refresh && cachedRequest ?\r\n                this.getRequestData(cachedRequest) :\r\n                this.requestData(params);\r\n        },\r\n\r\n        /**\r\n         * Tells whether one of the parameters defined in the \"dataScope\" has\r\n         * changed since the last request.\r\n         *\r\n         * @param {Object} params - Request parameters.\r\n         * @returns {Boolean}\r\n         */\r\n        hasScopeChanged: function (params) {\r\n            var lastRequest = _.last(this._requests),\r\n                keys,\r\n                diff;\r\n\r\n            if (!lastRequest) {\r\n                return false;\r\n            }\r\n\r\n            diff = utils.compare(lastRequest.params, params);\r\n\r\n            keys = _.pluck(diff.changes, 'path');\r\n            keys = keys.concat(Object.keys(diff.containers));\r\n\r\n            return _.intersection(this.dataScope, keys).length > 0;\r\n        },\r\n\r\n        /**\r\n         * Extends records of current data object\r\n         * with the provided records collection.\r\n         *\r\n         * @param {Array} data - An array of records.\r\n         * @returns {DataStorage} Chainable.\r\n         */\r\n        updateData: function (data) {\r\n            var records = _.indexBy(data || [], this.indexField);\r\n\r\n            _.extend(this.data, records);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Sends request to the server with provided parameters.\r\n         *\r\n         * @param {Object} params - Request parameters.\r\n         * @returns {jQueryPromise}\r\n         */\r\n        requestData: function (params) {\r\n            var query = utils.copy(params),\r\n                handler = this.onRequestComplete.bind(this, query),\r\n                request;\r\n\r\n            this.requestConfig.data = query;\r\n            request = $.ajax(this.requestConfig).done(handler);\r\n\r\n            return request;\r\n        },\r\n\r\n        /**\r\n         * Returns request's instance which\r\n         * contains provided parameters.\r\n         *\r\n         * @param {Object} params - Request parameters.\r\n         * @returns {Object} Instance of request.\r\n         */\r\n        getRequest: function (params) {\r\n            return _.find(this._requests, function (request) {\r\n                return _.isEqual(params, request.params);\r\n            }, this);\r\n        },\r\n\r\n        /**\r\n         * Forms data object associated with provided request.\r\n         *\r\n         * @param {Object} request - Request object.\r\n         * @returns {jQueryPromise}\r\n         */\r\n        getRequestData: function (request) {\r\n            var defer = $.Deferred(),\r\n                resolve = defer.resolve.bind(defer),\r\n                delay = this.cachedRequestDelay,\r\n                result;\r\n\r\n            if (request.showTotalRecords === undefined) {\r\n                request.showTotalRecords = true;\r\n            }\r\n\r\n            result = {\r\n                items: this.getByIds(request.ids),\r\n                totalRecords: request.totalRecords,\r\n                showTotalRecords: request.showTotalRecords,\r\n                errorMessage: request.errorMessage\r\n            };\r\n\r\n            delay ?\r\n                _.delay(resolve, delay, result) :\r\n                resolve(result);\r\n\r\n            return defer.promise();\r\n        },\r\n\r\n        /**\r\n         * Caches requests object with provided parameters\r\n         * and data object associated with it.\r\n         *\r\n         * @param {Object} data - Data associated with request.\r\n         * @param {Object} params - Request parameters.\r\n         * @returns {DataStorage} Chainable.\r\n         */\r\n        cacheRequest: function (data, params) {\r\n            var cached = this.getRequest(params);\r\n\r\n            if (cached) {\r\n                this.removeRequest(cached);\r\n            }\r\n\r\n            if (data.showTotalRecords === undefined) {\r\n                data.showTotalRecords = true;\r\n            }\r\n\r\n            this._requests.push({\r\n                ids: this.getIds(data.items),\r\n                params: params,\r\n                totalRecords: data.totalRecords,\r\n                showTotalRecords: data.showTotalRecords,\r\n                errorMessage: data.errorMessage\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Clears all cached requests.\r\n         *\r\n         * @returns {DataStorage} Chainable.\r\n         */\r\n        clearRequests: function () {\r\n            this._requests.splice(0);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes provided request object from cached requests list.\r\n         *\r\n         * @param {Object} request - Request object.\r\n         * @returns {DataStorage} Chainable.\r\n         */\r\n        removeRequest: function (request) {\r\n            var requests = this._requests,\r\n                index = requests.indexOf(request);\r\n\r\n            if (~index) {\r\n                requests.splice(index, 1);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if request with a specified parameters was cached.\r\n         *\r\n         * @param {Object} params - Parameters of the request.\r\n         * @returns {Boolean}\r\n         */\r\n        wasRequested: function (params) {\r\n            return !!this.getRequest(params);\r\n        },\r\n\r\n        /**\r\n         * Handles successful data request.\r\n         *\r\n         * @param {Object} params - Request parameters.\r\n         * @param {Object} data - Response data.\r\n         */\r\n        onRequestComplete: function (params, data) {\r\n            this.updateData(data.items);\r\n\r\n            if (this.cacheRequests) {\r\n                this.cacheRequest(data, params);\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/dnd.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'ko',\r\n    'Magento_Ui/js/lib/view/utils/async',\r\n    'underscore',\r\n    'uiRegistry',\r\n    'uiClass'\r\n], function (ko, $, _, registry, Class) {\r\n    'use strict';\r\n\r\n    var isTouchDevice = typeof document.ontouchstart !== 'undefined',\r\n        transformProp;\r\n\r\n    /**\r\n     * Defines supported css 'transform' property.\r\n     *\r\n     * @returns {String|Undefined}\r\n     */\r\n    transformProp = (function () {\r\n        var style = document.body.style,\r\n            base = 'Transform',\r\n            vendors = ['webkit', 'moz', 'ms', 'o'],\r\n            vi = vendors.length,\r\n            property;\r\n\r\n        if (typeof style.transform != 'undefined') {\r\n            return 'transform';\r\n        }\r\n\r\n        while (vi--) {\r\n            property = vendors[vi] + base;\r\n\r\n            if (typeof style[property] != 'undefined') {\r\n                return property;\r\n            }\r\n        }\r\n    })();\r\n\r\n    /**\r\n     * Returns first touch data if it's available.\r\n     *\r\n     * @param {(MouseEvent|TouchEvent)} e - Event object.\r\n     * @returns {Object}\r\n     */\r\n    function getTouch(e) {\r\n        return e.touches ? e.touches[0] : e;\r\n    }\r\n\r\n    /**\r\n     * Moves specified DOM element to the x and y coordinates.\r\n     *\r\n     * @param {HTMLElement} elem - Element to be relocated.\r\n     * @param {Number} x - X coordinate.\r\n     * @param {Number} y - Y coordinate.\r\n     */\r\n    function locate(elem, x, y) {\r\n        var value = 'translate(' + x + 'px,' + y + 'px)';\r\n\r\n        elem.style[transformProp] = value;\r\n    }\r\n\r\n    /*eslint-disable no-extra-parens*/\r\n    /**\r\n     * Checks if specified coordinate is inside of the provided area.\r\n     *\r\n     * @param {Number} x - X coordinate.\r\n     * @param {Number} y - Y coordinate.\r\n     * @param {Object} area - Object which represents area.\r\n     * @returns {Boolean}\r\n     */\r\n    function isInside(x, y, area) {\r\n        return (\r\n            area &&\r\n            x >= area.left && x <= area.right &&\r\n            y >= area.top && y <= area.bottom\r\n        );\r\n    }\r\n\r\n    /*eslint-enable no-extra-parens*/\r\n\r\n    /**\r\n     * Calculates distance between two points.\r\n     *\r\n     * @param {Number} x1 - X coordinate of a first point.\r\n     * @param {Number} y1 - Y coordinate of a first point.\r\n     * @param {Number} x2 - X coordinate of a second point.\r\n     * @param {Number} y2 - Y coordinate of a second point.\r\n     * @returns {Number} Distance between points.\r\n     */\r\n    function distance(x1, y1, x2, y2) {\r\n        var dx = x2 - x1,\r\n            dy = y2 - y1;\r\n\r\n        dx *= dx;\r\n        dy *= dy;\r\n\r\n        return Math.sqrt(dx + dy);\r\n    }\r\n\r\n    /**\r\n     * Returns viewModel associated with a provided DOM element.\r\n     *\r\n     * @param {HTMLElement} elem\r\n     * @returns {Object|Array}\r\n     */\r\n    function getModel(elem) {\r\n        return ko.dataFor(elem);\r\n    }\r\n\r\n    /**\r\n     * Checks whether cols are identical\r\n     *\r\n     * @param {HTMLElement} c1\r\n     * @param {HTMLElement} c2\r\n     * @returns {Boolean}\r\n     */\r\n    function compareCols(c1, c2) {\r\n        return c1.cellIndex === c2.cellIndex;\r\n    }\r\n\r\n    return Class.extend({\r\n        defaults: {\r\n            rootSelector: '${ $.columnsProvider }:.admin__data-grid-wrap',\r\n            tableSelector: '${ $.rootSelector } -> table.data-grid',\r\n            mainTableSelector: '[data-role=\"grid\"]',\r\n            columnSelector: '${ $.tableSelector } thead tr th',\r\n            noSelectClass: '_no-select',\r\n            hiddenClass: '_hidden',\r\n            fixedX: false,\r\n            fixedY: true,\r\n            minDistance: 2,\r\n            columns: []\r\n        },\r\n\r\n        /**\r\n         * Initializes Dnd component.\r\n         *\r\n         * @returns {Dnd} Chainable.\r\n         */\r\n        initialize: function () {\r\n            _.bindAll(\r\n                this,\r\n                'initTable',\r\n                'initColumn',\r\n                'removeColumn',\r\n                'onMouseMove',\r\n                'onMouseUp',\r\n                'onMouseDown'\r\n            );\r\n\r\n            this.$body = $('body');\r\n\r\n            this._super()\r\n                .initListeners();\r\n\r\n            $.async(this.tableSelector, this.initTable);\r\n            $.async(this.columnSelector, this.initColumn);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Binds necessary events listeners.\r\n         *\r\n         * @returns {Dnd} Chainbale.\r\n         */\r\n        initListeners: function () {\r\n            if (isTouchDevice) {\r\n                $(document).on({\r\n                    touchmove: this.onMouseMove,\r\n                    touchend: this.onMouseUp,\r\n                    touchleave: this.onMouseUp\r\n                });\r\n            } else {\r\n                $(document).on({\r\n                    mousemove: this.onMouseMove,\r\n                    mouseup: this.onMouseUp\r\n                });\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Defines specified table element as a main container.\r\n         *\r\n         * @param {HTMLTableElement} table\r\n         * @returns {Dnd} Chainable.\r\n         */\r\n        initTable: function (table) {\r\n            this.table =  $(table).is(this.mainTableSelector) ?  table : this.table;\r\n\r\n            $(table).addClass('data-grid-draggable');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Sets specified column as a draggable element.\r\n         *\r\n         * @param {HTMLTableHeaderCellElement} column - Columns header element.\r\n         * @returns {Dnd} Chainable.\r\n         */\r\n        initColumn: function (column) {\r\n            var model = getModel(column),\r\n                eventName;\r\n\r\n            if (!model || !model.draggable) {\r\n                return this;\r\n            }\r\n\r\n            if (!ko.es5.isTracked(model, 'dragover')) {\r\n                model.track('dragover');\r\n            }\r\n\r\n            this.columns.push(column);\r\n\r\n            $(column).bindings({\r\n                css: {\r\n                    '_dragover-left': ko.computed(function () {\r\n                        return model.dragover === 'right';\r\n                    }),\r\n                    '_dragover-right': ko.computed(function () {\r\n                        return model.dragover === 'left';\r\n                    })\r\n                }\r\n            });\r\n\r\n            eventName = isTouchDevice ?\r\n                'touchstart' :\r\n                'mousedown';\r\n\r\n            $(column).on(eventName, this.onMouseDown);\r\n            $.async.remove(column, this.removeColumn);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes specified column element from the columns array.\r\n         *\r\n         * @param {HTMLTableHeaderCellElement} column - Columns header element.\r\n         * @returns {Dnd} Chainable.\r\n         */\r\n        removeColumn: function (column) {\r\n            var columns = this.columns,\r\n                index = columns.indexOf(column);\r\n\r\n            if (~index) {\r\n                columns.splice(index, 1);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Returns index of column.\r\n         *\r\n         * @param {HTMLTableHeaderCellElement} elem\r\n         * @returns {Number}\r\n         */\r\n        _getColumnIndex: function (elem) {\r\n            return _.toArray(elem.parentNode.cells).indexOf(elem);\r\n        },\r\n\r\n        /**\r\n         * Calculates coordinates of draggable elements.\r\n         *\r\n         * @returns {Dnd} Chainbale.\r\n         */\r\n        _cacheCoords: function () {\r\n            var container   = this.table.getBoundingClientRect(),\r\n                bodyRect    = document.body.getBoundingClientRect(),\r\n                grabbed     = this.grabbed,\r\n                dragElem    = grabbed.elem,\r\n                cells       = _.toArray(dragElem.parentNode.cells),\r\n                rect;\r\n\r\n            this.coords = this.columns.map(function (column) {\r\n                var data,\r\n                    colIndex = _.findIndex(cells, function (cell) {\r\n                        return compareCols(cell, column);\r\n                    });\r\n\r\n                rect = column.getBoundingClientRect();\r\n\r\n                data = {\r\n                    index: colIndex,\r\n                    target: column,\r\n                    orig: rect,\r\n                    left: rect.left - bodyRect.left,\r\n                    right: rect.right - bodyRect.left,\r\n                    top: rect.top - bodyRect.top,\r\n                    bottom: container.bottom - bodyRect.top\r\n                };\r\n\r\n                if (column === dragElem) {\r\n                    this.dragArea = data;\r\n\r\n                    grabbed.shiftX = rect.left - grabbed.x;\r\n                    grabbed.shiftY = rect.top - grabbed.y;\r\n                }\r\n\r\n                return data;\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Creates clone of a target table with only specified column visible.\r\n         *\r\n         * @param {HTMLTableHeaderCellElement} elem - Dragging column.\r\n         * @returns {Dnd} Chainbale.\r\n         */\r\n        _cloneTable: function (elem) {\r\n            var clone       = this.table.cloneNode(true),\r\n                columnIndex = this._getColumnIndex(elem),\r\n                headRow     = clone.tHead.firstElementChild,\r\n                headCells   = _.toArray(headRow.cells),\r\n                tableBody   = clone.tBodies[0],\r\n                bodyRows    = _.toArray(tableBody.children),\r\n                origTrs     = this.table.tBodies[0].children;\r\n\r\n            clone.style.width = elem.offsetWidth + 'px';\r\n\r\n            headCells.forEach(function (th, index) {\r\n                if (index !== columnIndex) {\r\n                    headRow.removeChild(th);\r\n                }\r\n            });\r\n\r\n            headRow.cells[0].style.height = elem.offsetHeight + 'px';\r\n\r\n            bodyRows.forEach(function (row, rowIndex) {\r\n                var cells = row.cells,\r\n                    cell;\r\n\r\n                if (cells.length !== headCells.length) {\r\n                    tableBody.removeChild(row);\r\n\r\n                    return;\r\n                }\r\n\r\n                cell = row.cells[columnIndex].cloneNode(true);\r\n\r\n                while (row.firstElementChild) {\r\n                    row.removeChild(row.firstElementChild);\r\n                }\r\n\r\n                cell.style.height = origTrs[rowIndex].cells[columnIndex].offsetHeight + 'px';\r\n\r\n                row.appendChild(cell);\r\n            });\r\n\r\n            this.dragTable = clone;\r\n\r\n            $(clone)\r\n                .addClass('_dragging-copy')\r\n                .appendTo('body');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Matches provided coordinates to available areas.\r\n         *\r\n         * @param {Number} x - X coordinate of a mouse pointer.\r\n         * @param {Number} y - Y coordinate of a mouse pointer.\r\n         * @returns {Object|Undefined} Matched area.\r\n         */\r\n        _getDropArea: function (x, y) {\r\n            return _.find(this.coords, function (area) {\r\n                return isInside(x, y, area);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Updates state of hovered areas.\r\n         *\r\n         * @param {Number} x - X coordinate of a mouse pointer.\r\n         * @param {Number} y - Y coordinate of a mouse pointer.\r\n         */\r\n        _updateAreas: function (x, y) {\r\n            var leavedArea = this.dropArea,\r\n                area = this.dropArea = this._getDropArea(x, y);\r\n\r\n            if (leavedArea) {\r\n                this.dragleave(leavedArea);\r\n            }\r\n\r\n            if (area && !compareCols(area.target, this.dragArea.target)) {\r\n                this.dragenter(area);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Grab action handler.\r\n         *\r\n         * @param {Number} x - X coordinate of a grabbed point.\r\n         * @param {Number} y - Y coordinate of a grabbed point.\r\n         * @param {HTMLElement} elem - Grabbed element.\r\n         */\r\n        grab: function (x, y, elem) {\r\n            this.initDrag = true;\r\n\r\n            this.grabbed = {\r\n                x: x,\r\n                y: y,\r\n                elem: elem\r\n            };\r\n\r\n            this.$body.addClass(this.noSelectClass);\r\n        },\r\n\r\n        /**\r\n         * Dragstart action handler.\r\n         *\r\n         * @param {HTMLTableHeaderCellElement} elem - Element which is dragging.\r\n         */\r\n        dragstart: function (elem) {\r\n            this.initDrag = false;\r\n            this.dropArea = false;\r\n            this.dragging = true;\r\n\r\n            getModel(elem).dragging(true);\r\n\r\n            this._cacheCoords()\r\n                ._cloneTable(elem);\r\n        },\r\n\r\n        /**\r\n         * Drag action handler. Locates draggable\r\n         * grid at a specified coordinates.\r\n         *\r\n         * @param {Number} x - X coordinate.\r\n         * @param {Number} y - Y coordinate.\r\n         */\r\n        drag: function (x, y) {\r\n            var grabbed  = this.grabbed,\r\n                dragArea = this.dragArea,\r\n                posX     = x + grabbed.shiftX,\r\n                posY     = y + grabbed.shiftY;\r\n\r\n            if (this.fixedX) {\r\n                x    = dragArea.left;\r\n                posX = dragArea.orig.left;\r\n            }\r\n\r\n            if (this.fixedY) {\r\n                y    = dragArea.top;\r\n                posY = dragArea.orig.top;\r\n            }\r\n\r\n            locate(this.dragTable, posX, posY);\r\n\r\n            if (!isInside(x, y, this.dropArea)) {\r\n                this._updateAreas(x, y);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Dragenter action handler.\r\n         *\r\n         * @param {Object} dropArea\r\n         */\r\n        dragenter: function (dropArea) {\r\n            var direction = this.dragArea.index < dropArea.index ?\r\n                'left' :\r\n                'right';\r\n\r\n            getModel(dropArea.target).dragover = direction;\r\n        },\r\n\r\n        /**\r\n         * Dragleave action handler.\r\n         *\r\n         * @param {Object} dropArea\r\n         */\r\n        dragleave: function (dropArea) {\r\n            getModel(dropArea.target).dragover = false;\r\n        },\r\n\r\n        /**\r\n         * Dragend action handler.\r\n         *\r\n         * @param {Object} dragArea\r\n         */\r\n        dragend: function (dragArea) {\r\n            var dropArea = this.dropArea,\r\n                dragElem = dragArea.target;\r\n\r\n            this.dragging = false;\r\n\r\n            document.body.removeChild(this.dragTable);\r\n\r\n            getModel(dragElem).dragging(false);\r\n\r\n            if (dropArea && !compareCols(dropArea.target, dragElem)) {\r\n                this.drop(dropArea, dragArea);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Drop action handler.\r\n         *\r\n         * @param {Object} dropArea\r\n         * @param {Object} dragArea\r\n         */\r\n        drop: function (dropArea, dragArea) {\r\n            var dropModel = getModel(dropArea.target),\r\n                dragModel = getModel(dragArea.target);\r\n\r\n            getModel(this.table).insertChild(dragModel, dropModel);\r\n            dropModel.dragover = false;\r\n        },\r\n\r\n        /**\r\n         * Documents' 'mousemove' event handler.\r\n         *\r\n         * @param {(MouseEvent|TouchEvent)} e - Event object.\r\n         */\r\n        onMouseMove: function (e) {\r\n            var grab    = this.grabbed,\r\n                touch   = getTouch(e),\r\n                x       = touch.pageX,\r\n                y       = touch.pageY;\r\n\r\n            if (this.initDrag || this.dragging) {\r\n                e.preventDefault();\r\n            }\r\n\r\n            if (this.initDrag && distance(x, y, grab.x, grab.y) >= this.minDistance) {\r\n                this.dragstart(grab.elem);\r\n            }\r\n\r\n            if (this.dragging) {\r\n                this.drag(x, y);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Documents' 'mouseup' event handler.\r\n         */\r\n        onMouseUp: function () {\r\n            if (this.initDrag || this.dragging) {\r\n                this.initDrag = false;\r\n                this.$body.removeClass(this.noSelectClass);\r\n            }\r\n\r\n            if (this.dragging) {\r\n                this.dragend(this.dragArea);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Columns' 'mousedown' event handler.\r\n         *\r\n         * @param {(MouseEvent|TouchEvent)} e - Event object.\r\n         */\r\n        onMouseDown: function (e) {\r\n            var touch = getTouch(e);\r\n\r\n            this.grab(touch.pageX, touch.pageY, e.currentTarget);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/export.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'uiElement'\r\n], function ($, _, Element) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            template: 'ui/grid/exportButton',\r\n            selectProvider: 'ns = ${ $.ns }, index = ids',\r\n            checked: '',\r\n            additionalParams: [],\r\n            modules: {\r\n                selections: '${ $.selectProvider }'\r\n            }\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            this._super()\r\n                .initChecked();\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initConfig: function () {\r\n            this._super();\r\n\r\n            _.each(this.additionalParams, function (value, key) {\r\n                key = 'additionalParams.' + key;\r\n                this.imports[key] = value;\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('checked');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks first option if checked not defined.\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        initChecked: function () {\r\n            if (!this.checked()) {\r\n                this.checked(\r\n                    this.options[0].value\r\n                );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Compose params object that will be added to request.\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        getParams: function () {\r\n            var selections = this.selections(),\r\n                data = selections ? selections.getSelections() : null,\r\n                itemsType,\r\n                result = {};\r\n\r\n            if (data) {\r\n                itemsType = data.excludeMode ? 'excluded' : 'selected';\r\n                result.filters = data.params.filters;\r\n                result.search = data.params.search;\r\n                result.namespace = data.params.namespace;\r\n                result[itemsType] = data[itemsType];\r\n                _.each(this.additionalParams, function (param, key) {\r\n                    result[key] = param;\r\n                });\r\n\r\n                if (!result[itemsType].length) {\r\n                    result[itemsType] = false;\r\n                }\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Find checked option.\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        getActiveOption: function () {\r\n            return _.findWhere(this.options, {\r\n                value: this.checked()\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Build option url.\r\n         *\r\n         * @param {Object} option\r\n         * @returns {String}\r\n         */\r\n        buildOptionUrl: function (option) {\r\n            var params = this.getParams();\r\n\r\n            if (!params) {\r\n                return 'javascript:void(0);';\r\n            }\r\n\r\n            return option.url + '?' + $.param(params);\r\n            //TODO: MAGETWO-40250\r\n        },\r\n\r\n        /**\r\n         * Redirect to built option url.\r\n         */\r\n        applyOption: function () {\r\n            var option = this.getActiveOption(),\r\n                url = this.buildOptionUrl(option);\r\n\r\n            location.href = url;\r\n\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/listing.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'Magento_Ui/js/lib/spinner',\r\n    'rjsResolver',\r\n    'uiLayout',\r\n    'uiCollection'\r\n], function (ko, _, loader, resolver, layout, Collection) {\r\n    'use strict';\r\n\r\n    return Collection.extend({\r\n        defaults: {\r\n            template: 'ui/grid/listing',\r\n            listTemplate: 'ui/list/listing',\r\n            stickyTmpl: 'ui/grid/sticky/listing',\r\n            viewSwitcherTmpl: 'ui/grid/view-switcher',\r\n            positions: false,\r\n            displayMode: 'grid',\r\n            displayModes: {\r\n                grid: {\r\n                    value: 'grid',\r\n                    label: 'Grid',\r\n                    template: '${ $.template }'\r\n                },\r\n                list: {\r\n                    value: 'list',\r\n                    label: 'List',\r\n                    template: '${ $.listTemplate }'\r\n                }\r\n            },\r\n            dndConfig: {\r\n                name: '${ $.name }_dnd',\r\n                component: 'Magento_Ui/js/grid/dnd',\r\n                columnsProvider: '${ $.name }',\r\n                enabled: true\r\n            },\r\n            editorConfig: {\r\n                name: '${ $.name }_editor',\r\n                component: 'Magento_Ui/js/grid/editing/editor',\r\n                columnsProvider: '${ $.name }',\r\n                dataProvider: '${ $.provider }',\r\n                enabled: false\r\n            },\r\n            resizeConfig: {\r\n                name: '${ $.name }_resize',\r\n                columnsProvider: '${ $.name }',\r\n                component: 'Magento_Ui/js/grid/resize',\r\n                enabled: false\r\n            },\r\n            imports: {\r\n                rows: '${ $.provider }:data.items'\r\n            },\r\n            listens: {\r\n                elems: 'updatePositions updateVisible',\r\n                '${ $.provider }:reload': 'onBeforeReload',\r\n                '${ $.provider }:reloaded': 'onDataReloaded'\r\n            },\r\n            modules: {\r\n                dnd: '${ $.dndConfig.name }',\r\n                resize: '${ $.resizeConfig.name }'\r\n            },\r\n            tracks: {\r\n                displayMode: true\r\n            },\r\n            statefull: {\r\n                displayMode: true\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes Listing component.\r\n         *\r\n         * @returns {Listing} Chainable.\r\n         */\r\n        initialize: function () {\r\n            _.bindAll(this, 'updateVisible');\r\n\r\n            this._super()\r\n                .initDnd()\r\n                .initEditor()\r\n                .initResize();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties.\r\n         *\r\n         * @returns {Listing} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .track({\r\n                    rows: [],\r\n                    visibleColumns: []\r\n                });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Creates drag&drop widget instance.\r\n         *\r\n         * @returns {Listing} Chainable.\r\n         */\r\n        initDnd: function () {\r\n            if (this.dndConfig.enabled) {\r\n                layout([this.dndConfig]);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes resize component.\r\n         *\r\n         * @returns {Listing} Chainable.\r\n         */\r\n        initResize: function () {\r\n            if (this.resizeConfig.enabled) {\r\n                layout([this.resizeConfig]);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Creates inline editing component.\r\n         *\r\n         * @returns {Listing} Chainable.\r\n         */\r\n        initEditor: function () {\r\n            if (this.editorConfig.enabled) {\r\n                layout([this.editorConfig]);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Called when another element was added to current component.\r\n         *\r\n         * @returns {Listing} Chainable.\r\n         */\r\n        initElement: function (element) {\r\n            var currentCount = this.elems().length,\r\n                totalCount = this.initChildCount;\r\n\r\n            if (totalCount === currentCount) {\r\n                this.initPositions();\r\n            }\r\n\r\n            element.on('visible', this.updateVisible);\r\n\r\n            return this._super();\r\n        },\r\n\r\n        /**\r\n         * Defines initial order of child elements.\r\n         *\r\n         * @returns {Listing} Chainable.\r\n         */\r\n        initPositions: function () {\r\n            this.on('positions', this.applyPositions.bind(this));\r\n\r\n            this.setStatefull('positions');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Updates current state of child positions.\r\n         *\r\n         * @returns {Listing} Chainable.\r\n         */\r\n        updatePositions: function () {\r\n            var positions = {};\r\n\r\n            this.elems.each(function (elem, index) {\r\n                positions[elem.index] = index;\r\n            });\r\n\r\n            this.set('positions', positions);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Resorts child elements array according to provided positions.\r\n         *\r\n         * @param {Object} positions - Object where key represents child\r\n         *      index and value is its' position.\r\n         * @returns {Listing} Chainable.\r\n         */\r\n        applyPositions: function (positions) {\r\n            var sorting;\r\n\r\n            sorting = this.elems.map(function (elem) {\r\n                return {\r\n                    elem: elem,\r\n                    position: positions[elem.index]\r\n                };\r\n            });\r\n\r\n            this.insertChild(sorting);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Returns reference to 'visibleColumns' array.\r\n         *\r\n         * @returns {Array}\r\n         */\r\n        getVisible: function () {\r\n            var observable = ko.getObservable(this, 'visibleColumns');\r\n\r\n            return observable || this.visibleColumns;\r\n        },\r\n\r\n        /**\r\n         * Returns path to the template\r\n         * defined for a current display mode.\r\n         *\r\n         * @returns {String} Path to the template.\r\n         */\r\n        getTemplate: function () {\r\n            var mode = this.displayModes[this.displayMode];\r\n\r\n            return mode.template;\r\n        },\r\n\r\n        /**\r\n         * Returns an array of available display modes.\r\n         *\r\n         * @returns {Array<Object>}\r\n         */\r\n        getDisplayModes: function () {\r\n            var modes = this.displayModes;\r\n\r\n            return _.values(modes);\r\n        },\r\n\r\n        /**\r\n         * Sets display mode to provided value.\r\n         *\r\n         * @param {String} index\r\n         * @returns {Listing} Chainable\r\n         */\r\n        setDisplayMode: function (index) {\r\n            this.displayMode = index;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Returns total number of displayed columns in grid.\r\n         *\r\n         * @returns {Number}\r\n         */\r\n        countVisible: function () {\r\n            return this.visibleColumns.length;\r\n        },\r\n\r\n        /**\r\n         * Updates array of visible columns.\r\n         *\r\n         * @returns {Listing} Chainable.\r\n         */\r\n        updateVisible: function () {\r\n            this.visibleColumns = this.elems.filter('visible');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if grid has data.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        hasData: function () {\r\n            return !!this.rows && !!this.rows.length;\r\n        },\r\n\r\n        /**\r\n         * Hides loader.\r\n         */\r\n        hideLoader: function () {\r\n            loader.get(this.name).hide();\r\n        },\r\n\r\n        /**\r\n         * Shows loader.\r\n         */\r\n        showLoader: function () {\r\n            loader.get(this.name).show();\r\n        },\r\n\r\n        /**\r\n         * Handler of the data providers' 'reload' event.\r\n         */\r\n        onBeforeReload: function () {\r\n            this.showLoader();\r\n        },\r\n\r\n        /**\r\n         * Handler of the data providers' 'reloaded' event.\r\n         */\r\n        onDataReloaded: function () {\r\n            resolver(this.hideLoader, this);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/masonry.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/grid/listing',\r\n    'Magento_Ui/js/lib/view/utils/raf',\r\n    'jquery',\r\n    'ko',\r\n    'underscore'\r\n], function (Listing, raf, $, ko, _) {\r\n    'use strict';\r\n\r\n    return Listing.extend({\r\n        defaults: {\r\n            template: 'ui/grid/masonry',\r\n            imports: {\r\n                rows: '${ $.provider }:data.items',\r\n                errorMessage: '${ $.provider }:data.errorMessage'\r\n            },\r\n            listens: {\r\n                rows: 'initComponent'\r\n            },\r\n\r\n            /**\r\n             * Images container id\r\n             * @param string\r\n             */\r\n            containerId: null,\r\n\r\n            /**\r\n             * Minimum aspect ratio for each image\r\n             * @param int\r\n             */\r\n            minRatio: null,\r\n\r\n            /**\r\n             * Container width\r\n             * @param int\r\n             */\r\n            containerWidth: window.innerWidth,\r\n\r\n            /**\r\n             * Margin between images\r\n             * @param int\r\n             */\r\n            imageMargin: 20,\r\n\r\n            /**\r\n             * Maximum image height value\r\n             * @param int\r\n             */\r\n            maxImageHeight: 240,\r\n\r\n            /**\r\n             * The value is minimum image width to height ratio when container width is less than the key\r\n             * @param {Object}\r\n             */\r\n            containerWidthToMinRatio: {\r\n                640: 3,\r\n                1280: 5,\r\n                1920: 8\r\n            },\r\n\r\n            /**\r\n             * Default minimal image width to height ratio.\r\n             * Applied when container width is greater than max width in the containerWidthToMinRatio matrix.\r\n             * @param int\r\n             */\r\n            defaultMinRatio: 10,\r\n\r\n            /**\r\n             * Layout update FPS during window resizing\r\n             */\r\n            refreshFPS: 60\r\n        },\r\n\r\n        /**\r\n         * Init observable variables\r\n         * @return {Object}\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe([\r\n                    'rows',\r\n                    'errorMessage'\r\n                ]);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Init component handler\r\n         * @param {Object} rows\r\n         * @return {Object}\r\n         */\r\n        initComponent: function (rows) {\r\n            if (!rows.length) {\r\n                return;\r\n            }\r\n            this.imageMargin = parseInt(this.imageMargin, 10);\r\n            this.container = $('[data-id=\"' + this.containerId + '\"]')[0];\r\n\r\n            this.setLayoutStyles();\r\n            this.setEventListener();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Set event listener to track resize event\r\n         */\r\n        setEventListener: function () {\r\n            window.addEventListener('resize', function () {\r\n                this.updateStyles();\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Updates styles for component.\r\n         */\r\n        updateStyles: function () {\r\n            raf(function () {\r\n                this.containerWidth = window.innerWidth;\r\n                this.setLayoutStyles();\r\n            }.bind(this), this.refreshFPS);\r\n        },\r\n\r\n        /**\r\n         * Set layout styles inside the container\r\n         */\r\n        setLayoutStyles: function () {\r\n            var containerWidth = parseInt(this.container.clientWidth, 10),\r\n                rowImages = [],\r\n                ratio = 0,\r\n                rowHeight = 0,\r\n                calcHeight = 0,\r\n                isLastRow = false,\r\n                rowNumber = 1;\r\n\r\n            this.setMinRatio();\r\n\r\n            this.rows().forEach(function (image, index) {\r\n                ratio += parseFloat((image.width / image.height).toFixed(2));\r\n                rowImages.push(image);\r\n\r\n                if (ratio < this.minRatio && index + 1 !== this.rows().length) {\r\n                    // Row has more space for images and the image is not the last one - proceed to the next iteration\r\n                    return;\r\n                }\r\n\r\n                ratio = Math.max(ratio, this.minRatio);\r\n                calcHeight = (containerWidth - this.imageMargin * rowImages.length) / ratio;\r\n                rowHeight = calcHeight < this.maxImageHeight ? calcHeight : this.maxImageHeight;\r\n                isLastRow = index + 1 === this.rows().length;\r\n\r\n                this.assignImagesToRow(rowImages, rowNumber, rowHeight, isLastRow);\r\n\r\n                rowImages = [];\r\n                ratio = 0;\r\n                rowNumber++;\r\n\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Apply styles, css classes and add properties for images in the row\r\n         *\r\n         * @param {Object[]} images\r\n         * @param {Number} rowNumber\r\n         * @param {Number} rowHeight\r\n         * @param {Boolean} isLastRow\r\n         */\r\n        assignImagesToRow: function (images, rowNumber, rowHeight, isLastRow) {\r\n            var imageWidth;\r\n\r\n            images.forEach(function (img) {\r\n                imageWidth = rowHeight * (img.width / img.height).toFixed(2);\r\n                this.setImageStyles(img, imageWidth, rowHeight);\r\n                this.setImageClass(img, {\r\n                    bottom: isLastRow\r\n                });\r\n                img.rowNumber = rowNumber;\r\n            }.bind(this));\r\n\r\n            images[0].firstInRow = true;\r\n            images[images.length - 1].lastInRow = true;\r\n        },\r\n\r\n        /**\r\n         * Wait for container to initialize\r\n         */\r\n        waitForContainer: function (callback) {\r\n            if (typeof this.container === 'undefined') {\r\n                setTimeout(function () {\r\n                    this.waitForContainer(callback);\r\n                }.bind(this), 500);\r\n            } else {\r\n                setTimeout(callback, 0);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set layout styles when container element is loaded.\r\n         */\r\n        setLayoutStylesWhenLoaded: function () {\r\n            this.waitForContainer(function () {\r\n                this.setLayoutStyles();\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Set styles for every image in layout\r\n         *\r\n         * @param {Object} img\r\n         * @param {Number} width\r\n         * @param {Number} height\r\n         */\r\n        setImageStyles: function (img, width, height) {\r\n            if (!img.styles) {\r\n                img.styles = ko.observable();\r\n            }\r\n            img.styles({\r\n                width: parseInt(width, 10) + 'px',\r\n                height: parseInt(height, 10) + 'px'\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Set css classes to and an image\r\n         *\r\n         * @param {Object} image\r\n         * @param {Object} classes\r\n         */\r\n        setImageClass: function (image, classes) {\r\n            if (!image.css) {\r\n                image.css = ko.observable(classes);\r\n            }\r\n            image.css(classes);\r\n        },\r\n\r\n        /**\r\n         * Set min ratio for images in layout\r\n         */\r\n        setMinRatio: function () {\r\n            var minRatio = _.find(\r\n                this.containerWidthToMinRatio,\r\n\r\n                /**\r\n                 * Find the minimal ratio for container width in the matrix\r\n                 *\r\n                 * @param {Number} ratio\r\n                 * @param {Number} width\r\n                 * @returns {Boolean}\r\n                 */\r\n                function (ratio, width) {\r\n                    return this.containerWidth <= width;\r\n                },\r\n                this\r\n            );\r\n\r\n            this.minRatio = minRatio ? minRatio : this.defaultMinRatio;\r\n        },\r\n\r\n        /**\r\n         * Checks if grid has data.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        hasData: function () {\r\n            return !!this.rows() && !!this.rows().length;\r\n        },\r\n\r\n        /**\r\n         * Returns error message returned by the data provider\r\n         *\r\n         * @returns {String|null}\r\n         */\r\n        getErrorMessageUnsanitizedHtml: function () {\r\n            return this.errorMessage();\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/massactions.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiRegistry',\r\n    'mageUtils',\r\n    'Magento_Ui/js/lib/collapsible',\r\n    'Magento_Ui/js/modal/confirm',\r\n    'Magento_Ui/js/modal/alert',\r\n    'mage/translate'\r\n], function (_, registry, utils, Collapsible, confirm, alert, $t) {\r\n    'use strict';\r\n\r\n    return Collapsible.extend({\r\n        defaults: {\r\n            template: 'ui/grid/actions',\r\n            stickyTmpl: 'ui/grid/sticky/actions',\r\n            selectProvider: 'ns = ${ $.ns }, index = ids',\r\n            actions: [],\r\n            noItemsMsg: $t('You haven\\'t selected any items!'),\r\n            modules: {\r\n                selections: '${ $.selectProvider }'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties.\r\n         *\r\n         * @returns {Massactions} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('actions');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Applies specified action.\r\n         *\r\n         * @param {String} actionIndex - Actions' identifier.\r\n         * @returns {Massactions} Chainable.\r\n         */\r\n        applyAction: function (actionIndex) {\r\n            var data = this.getSelections(),\r\n                action,\r\n                callback;\r\n\r\n            if (!data.total) {\r\n                alert({\r\n                    content: this.noItemsMsg\r\n                });\r\n\r\n                return this;\r\n            }\r\n\r\n            action   = this.getAction(actionIndex);\r\n            callback = this._getCallback(action, data);\r\n\r\n            action.confirm ?\r\n                this._confirm(action, callback) :\r\n                callback();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Retrieves selections data from the selections provider.\r\n         *\r\n         * @returns {Object|Undefined}\r\n         */\r\n        getSelections: function () {\r\n            var provider = this.selections(),\r\n                selections = provider && provider.getSelections();\r\n\r\n            return selections;\r\n        },\r\n\r\n        /**\r\n         * Retrieves action object associated with a specified index.\r\n         *\r\n         * @param {String} actionIndex - Actions' identifier.\r\n         * @returns {Object} Action object.\r\n         */\r\n        getAction: function (actionIndex) {\r\n            return _.findWhere(this.actions(), {\r\n                type: actionIndex\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Adds new action. If action with a specified identifier\r\n         * already exists, than the original one will be overrided.\r\n         *\r\n         * @param {Object} action - Action object.\r\n         * @returns {Massactions} Chainable.\r\n         */\r\n        addAction: function (action) {\r\n            var actions = this.actions(),\r\n                index = _.findIndex(actions, {\r\n                    type: action.type\r\n                });\r\n\r\n            ~index ?\r\n                actions[index] = action :\r\n                actions.push(action);\r\n\r\n            this.actions(actions);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Creates action callback based on its' data. If action doesn't spicify\r\n         * a callback function than the default one will be used.\r\n         *\r\n         * @private\r\n         * @param {Object} action - Actions' object.\r\n         * @param {Object} selections - Selections data.\r\n         * @returns {Function} Callback function.\r\n         */\r\n        _getCallback: function (action, selections) {\r\n            var callback = action.callback,\r\n                args     = [action, selections];\r\n\r\n            if (utils.isObject(callback)) {\r\n                args.unshift(callback.target);\r\n\r\n                callback = registry.async(callback.provider);\r\n            } else if (typeof callback != 'function') {\r\n                callback = this.defaultCallback.bind(this);\r\n            }\r\n\r\n            return function () {\r\n                callback.apply(null, args);\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Default action callback. Sends selections data\r\n         * via POST request.\r\n         *\r\n         * @param {Object} action - Action data.\r\n         * @param {Object} data - Selections data.\r\n         */\r\n        defaultCallback: function (action, data) {\r\n            var itemsType = data.excludeMode ? 'excluded' : 'selected',\r\n                selections = {};\r\n\r\n            selections[itemsType] = data[itemsType];\r\n\r\n            if (!selections[itemsType].length) {\r\n                selections[itemsType] = false;\r\n            }\r\n\r\n            _.extend(selections, data.params || {});\r\n\r\n            utils.submit({\r\n                url: action.url,\r\n                data: selections\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Shows actions' confirmation window.\r\n         *\r\n         * @param {Object} action - Actions' data.\r\n         * @param {Function} callback - Callback that will be\r\n         *      invoked if action is confirmed.\r\n         */\r\n        _confirm: function (action, callback) {\r\n            var confirmData = action.confirm,\r\n                data = this.getSelections(),\r\n                total = data.total ? data.total : 0,\r\n                confirmMessage = confirmData.message + (data.showTotalRecords || data.showTotalRecords === undefined ?\r\n                    ' (' + total + ' record' + (total > 1 ? 's' : '') + ')'\r\n                    : '');\r\n\r\n            confirm({\r\n                title: confirmData.title,\r\n                content: confirmMessage,\r\n                actions: {\r\n                    confirm: callback\r\n                }\r\n            });\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/provider.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mageUtils',\r\n    'rjsResolver',\r\n    'uiLayout',\r\n    'Magento_Ui/js/modal/alert',\r\n    'mage/translate',\r\n    'uiElement',\r\n    'uiRegistry',\r\n    'Magento_Ui/js/grid/data-storage'\r\n], function ($, _, utils, resolver, layout, alert, $t, Element, registry) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            firstLoad: true,\r\n            lastError: false,\r\n            storageConfig: {\r\n                component: 'Magento_Ui/js/grid/data-storage',\r\n                provider: '${ $.storageConfig.name }',\r\n                name: '${ $.name }_storage',\r\n                updateUrl: '${ $.update_url }'\r\n            },\r\n            listens: {\r\n                params: 'onParamsChange',\r\n                requestConfig: 'updateRequestConfig'\r\n            },\r\n            ignoreTmpls: {\r\n                data: true\r\n            },\r\n            triggerDataReload: false\r\n        },\r\n\r\n        /**\r\n         * Initializes provider component.\r\n         *\r\n         * @returns {Provider} Chainable.\r\n         */\r\n        initialize: function () {\r\n            utils.limit(this, 'onParamsChange', 5);\r\n            _.bindAll(this, 'onReload');\r\n\r\n            this._super()\r\n                .initStorage()\r\n                .clearData();\r\n\r\n            // Load data when there will\r\n            // be no more pending assets.\r\n            resolver(this.reload, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes storage component.\r\n         *\r\n         * @returns {Provider} Chainable.\r\n         */\r\n        initStorage: function () {\r\n            layout([this.storageConfig]);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Clears provider's data properties.\r\n         *\r\n         * @returns {Provider} Chainable.\r\n         */\r\n        clearData: function () {\r\n            this.setData({\r\n                items: [],\r\n                totalRecords: 0,\r\n                showTotalRecords: true\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Overrides current data with a provided one.\r\n         *\r\n         * @param {Object} data - New data object.\r\n         * @returns {Provider} Chainable.\r\n         */\r\n        setData: function (data) {\r\n            data = this.processData(data);\r\n\r\n            this.set('data', data);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Processes data before applying it.\r\n         *\r\n         * @param {Object} data - Data to be processed.\r\n         * @returns {Object}\r\n         */\r\n        processData: function (data) {\r\n            var items = data.items;\r\n\r\n            _.each(items, function (record, index) {\r\n                record._rowIndex = index;\r\n            });\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Reloads data with current parameters.\r\n         *\r\n         * @returns {Promise} Reload promise object.\r\n         */\r\n        reload: function (options) {\r\n            var request = this.storage().getData(this.params, options);\r\n\r\n            this.trigger('reload');\r\n\r\n            request\r\n                .done(this.onReload)\r\n                .fail(this.onError.bind(this));\r\n\r\n            return request;\r\n        },\r\n\r\n        /**\r\n         * Handles changes of 'params' object.\r\n         */\r\n        onParamsChange: function () {\r\n            // It's necessary to make a reload only\r\n            // after the initial loading has been made.\r\n            if (!this.firstLoad) {\r\n                this.reload();\r\n            } else {\r\n                this.triggerDataReload = true;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handles reload error.\r\n         */\r\n        onError: function (xhr) {\r\n            if (xhr.statusText === 'abort') {\r\n                return;\r\n            }\r\n\r\n            this.set('lastError', true);\r\n\r\n            this.firstLoad = false;\r\n            this.triggerDataReload = false;\r\n\r\n            alert({\r\n                content: $t('Something went wrong.')\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Handles successful data reload.\r\n         *\r\n         * @param {Object} data - Retrieved data object.\r\n         */\r\n        onReload: function (data) {\r\n            this.firstLoad = false;\r\n            this.set('lastError', false);\r\n            this.setData(data)\r\n                .trigger('reloaded');\r\n\r\n            if (this.triggerDataReload) {\r\n                this.triggerDataReload = false;\r\n                this.reload();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Updates storage's request configuration\r\n         *\r\n         * @param {Object} requestConfig\r\n         */\r\n        updateRequestConfig: function (requestConfig) {\r\n            registry.get(this.storageConfig.provider, function (storage) {\r\n                _.extend(storage.requestConfig, requestConfig);\r\n            });\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/resize.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'Magento_Ui/js/lib/view/utils/async',\r\n    'ko',\r\n    'underscore',\r\n    'mageUtils',\r\n    'uiRegistry',\r\n    'Magento_Ui/js/lib/knockout/extender/bound-nodes',\r\n    'uiElement'\r\n], function ($, ko, _, utils, registry, boundedNodes, Element) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            rootSelector: '${ $.columnsProvider }:.admin__data-grid-wrap',\r\n            tableSelector: '${ $.rootSelector } -> table.data-grid',\r\n            mainTableSelector: '[data-role=\"grid\"]',\r\n            columnSelector: '${ $.tableSelector } thead tr th',\r\n            fieldSelector: '${ $.tableSelector } tbody tr td',\r\n\r\n            imports: {\r\n                storageColumnsData: '${ $.storageConfig.path }.storageColumnsData'\r\n            },\r\n            storageColumnsData: {},\r\n            columnsElements: {},\r\n            tableWidth: 0,\r\n            sumColumnsWidth: 0,\r\n            showLines: 4,\r\n            resizableElementClass: 'shadow-div',\r\n            resizingColumnClass: '_resizing',\r\n            fixedLayoutClass: '_layout-fixed',\r\n            inResizeClass: '_in-resize',\r\n            visibleClass: '_resize-visible',\r\n            cellContentElement: 'div.data-grid-cell-content',\r\n            minColumnWidth: 40,\r\n            layoutFixedPolyfillIterator: 0,\r\n            windowResize: false,\r\n            resizable: false,\r\n            resizeConfig: {\r\n                maxRowsHeight: [],\r\n                curResizeElem: {},\r\n                depResizeElem: {},\r\n                previousWidth: null\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initialize application -\r\n         * binding functions context,\r\n         * set handlers for table elements\r\n         *\r\n         * @returns {Object} Chainable\r\n         */\r\n        initialize: function () {\r\n            _.bindAll(\r\n                this,\r\n                'initTable',\r\n                'initColumn',\r\n                'mousedownHandler',\r\n                'mousemoveHandler',\r\n                'mouseupHandler',\r\n                'refreshLastColumn',\r\n                'refreshMaxRowHeight',\r\n                'preprocessingWidth',\r\n                '_eventProxy',\r\n                'checkAfterResize'\r\n            );\r\n\r\n            this._super();\r\n            this.observe(['maxRowsHeight']);\r\n            this.maxRowsHeight([]);\r\n\r\n            $.async(this.tableSelector, this.initTable);\r\n            $.async(this.columnSelector, this.initColumn);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Set table element and adds handler to mousedown on headers\r\n         *\r\n         * @returns {Object} Chainable\r\n         */\r\n        initTable: function (table) {\r\n            if ($(table).is(this.mainTableSelector)) {\r\n                this.table = table;\r\n                this.tableWidth = $(table).outerWidth();\r\n                $(window).on('resize', this.checkAfterResize);\r\n            }\r\n\r\n            //TODO - Must be deleted when Firefox fixed problem with table-layout: fixed\r\n            //ticket to Firefox: https://bugs.webkit.org/show_bug.cgi?id=90068\r\n            if (navigator.userAgent.search(/Firefox/) > -1) {\r\n                this._layoutFixedPolyfill();\r\n            }\r\n\r\n            $(table).addClass(this.fixedLayoutClass);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Window resize handler,\r\n         * check changes on table width and\r\n         * set new width to variable\r\n         * after window resize start preprocessingWidth method\r\n         */\r\n        checkAfterResize: function () {\r\n            var tableWidth,\r\n                self = this;\r\n\r\n            setTimeout(function () {\r\n                tableWidth = $(self.table).outerWidth();\r\n\r\n                if (self.tableWidth !== tableWidth) {\r\n                    self.tableWidth = tableWidth;\r\n                } else {\r\n                    self.preprocessingWidth();\r\n                }\r\n            }, 300);\r\n        },\r\n\r\n        /**\r\n         * Check conditions to set minimal width\r\n         */\r\n        checkSumColumnsWidth: function () {\r\n            var table = $(this.table),\r\n                elems = table.find('th:not([style*=\"width: auto\"]):visible'),\r\n                elemsWidthMin = table.find('th[style*=\"width: ' + (this.minColumnWidth - 1) + 'px\"]:visible'),\r\n                elemsWidthAuto = table.find('th[style*=\"width: auto\"]:visible'),\r\n                model;\r\n\r\n            this.sumColumnsWidth = 0;\r\n            _.each(elems, function (elem) {\r\n                model = ko.dataFor(elem);\r\n                model.width && model.width !== 'auto' ? this.sumColumnsWidth += model.width : false;\r\n            }, this);\r\n\r\n            if (\r\n                    this.sumColumnsWidth + elemsWidthAuto.length *\r\n                    this.minColumnWidth + elemsWidthMin.length *\r\n                    this.minColumnWidth > this.tableWidth\r\n            ) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Set minimal width to element with \"auto\" width\r\n         */\r\n        setWidthToColumnsWidthAuto: function () {\r\n            var elemsWidthAuto = $(this.table).find('th[style*=\"width: auto\"]:visible');\r\n\r\n            _.each(elemsWidthAuto, function (elem) {\r\n                $(elem).outerWidth(this.minColumnWidth - 1);\r\n            }, this);\r\n        },\r\n\r\n        /**\r\n         * Check conditions to set auto width\r\n         */\r\n        hasMinimal: function () {\r\n            var table = $(this.table),\r\n                elemsWidthMin = table.find('th[style*=\"width: ' + (this.minColumnWidth - 1) + 'px\"]:visible'),\r\n                elemsWidthAuto = table.find('th[style*=\"width: auto\"]:visible');\r\n\r\n            if (\r\n                    elemsWidthAuto && this.sumColumnsWidth + elemsWidthAuto.length *\r\n                    this.minColumnWidth + elemsWidthMin.length * this.minColumnWidth + 5 < this.tableWidth\r\n            ) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Set \"auto\" width to element with minimal width\r\n         */\r\n        setAuto: function () {\r\n            var elemsWidthAuto = $(this.table).find('th[style*=\"width: ' + (this.minColumnWidth - 1) + 'px\"]:visible');\r\n\r\n            _.each(elemsWidthAuto, function (elem) {\r\n                $(elem).outerWidth('auto');\r\n            }, this);\r\n        },\r\n\r\n        /**\r\n         * Check columns width and preprocessing\r\n         */\r\n        preprocessingWidth: function () {\r\n            if (this.checkSumColumnsWidth()) {\r\n                this.setWidthToColumnsWidthAuto();\r\n            } else if (this.hasMinimal()) {\r\n                this.setAuto();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Init columns elements,\r\n         * set width to current column element,\r\n         * add resizable element to columns header,\r\n         * check and add no-resize class to last column,\r\n         * stop parents events,\r\n         * add handler to visibility column\r\n         *\r\n         * @param {Object} column - columns header element (th)\r\n         */\r\n        initColumn: function (column) {\r\n            var model = ko.dataFor(column),\r\n                ctxIndex = this.getCtxIndex(ko.contextFor(column));\r\n\r\n            model.width = this.getDefaultWidth(column);\r\n\r\n            if (!this.hasColumn(model, ctxIndex, false)) {\r\n                this.columnsElements[model.index] = this.columnsElements[model.index] || {};\r\n                this.columnsElements[model.index][ctxIndex] = column;\r\n                this.initResizableElement(column);\r\n                this.setStopPropagationHandler(column);\r\n                $(column).outerWidth(model.width);\r\n            }\r\n\r\n            this.refreshLastColumn(column);\r\n            this.preprocessingWidth();\r\n\r\n            model.on('visible', this.refreshLastColumn.bind(this, column));\r\n            model.on('visible', this.preprocessingWidth.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Hack for mozilla firefox\r\n         */\r\n        _layoutFixedPolyfill: function () {\r\n            var self = this;\r\n\r\n            setTimeout(function () {\r\n                if (self.layoutFixedPolyfillIterator < 20) {\r\n                    $(window).trigger('resize');\r\n                    self.layoutFixedPolyfillIterator++;\r\n                    self._layoutFixedPolyfill();\r\n                } else {\r\n                    return false;\r\n                }\r\n            }, 500);\r\n        },\r\n\r\n        /**\r\n         * Check element is resizable or not\r\n         * and append resizable element to DOM\r\n         *\r\n         * @param {Object} column - columns header element (th)\r\n         * @returns {Boolean}\r\n         */\r\n        initResizableElement: function (column) {\r\n            var model = ko.dataFor(column),\r\n                templateDragElement = '<div class=\"' + this.resizableElementClass + '\"></div>';\r\n\r\n            if (_.isUndefined(model.resizeEnabled) || model.resizeEnabled) {\r\n                $(column).append(templateDragElement);\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Check event target and if need stop parents event,\r\n         *\r\n         * @param {Object} column - columns header element (th)\r\n         * @returns {Boolean}\r\n         */\r\n        setStopPropagationHandler: function (column) {\r\n            var events,\r\n                click,\r\n                mousedown;\r\n\r\n            $(column).on('click', this._eventProxy);\r\n            $(column).on('mousedown', this._eventProxy);\r\n\r\n            events = $._data(column, 'events');\r\n\r\n            click = events.click;\r\n            mousedown = events.mousedown;\r\n            click.unshift(click.pop());\r\n            mousedown.unshift(mousedown.pop());\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Check event target and stop event if need\r\n         *\r\n         * @param {Object} event\r\n         */\r\n        _eventProxy: function (event) {\r\n            if ($(event.target).is('.' + this.resizableElementClass)) {\r\n\r\n                if (event.type === 'click') {\r\n                    event.stopImmediatePropagation();\r\n                } else if (event.type === 'mousedown') {\r\n                    this.mousedownHandler(event);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check visible columns and set disable class to resizable elements,\r\n         *\r\n         * @param {Object} column - columns header element (th)\r\n         */\r\n        refreshLastColumn: function (column) {\r\n            var i = 0,\r\n                columns = $(column).parent().children().not(':hidden'),\r\n                length = columns.length;\r\n\r\n            $('.' + this.visibleClass).removeClass(this.visibleClass);\r\n\r\n            $(column).parent().children().not(':hidden').last().addClass(this.visibleClass);\r\n\r\n            for (i; i < length; i++) {\r\n\r\n                if (!columns.eq(i).find('.' + this.resizableElementClass).length && i) {\r\n                    columns.eq(i - 1).addClass(this.visibleClass);\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * Refresh max height to row elements,\r\n         *\r\n         * @param {Object} elem - (td)\r\n         */\r\n        refreshMaxRowHeight: function (elem) {\r\n            var rowsH = this.maxRowsHeight(),\r\n                curEL = $(elem).find('div'),\r\n                height,\r\n                obj = this.hasRow($(elem).parent()[0], true);\r\n\r\n            curEL.css('white-space', 'nowrap');\r\n            height = curEL.height() * this.showLines;\r\n            curEL.css('white-space', 'normal');\r\n\r\n            if (obj) {\r\n                if (obj.maxHeight < height) {\r\n                    rowsH[_.indexOf(rowsH, obj)].maxHeight = height;\r\n                } else {\r\n                    return false;\r\n                }\r\n            } else {\r\n                rowsH.push({\r\n                    elem: $(elem).parent()[0],\r\n                    maxHeight: height\r\n                });\r\n            }\r\n\r\n            $(elem).parent().children().find(this.cellContentElement).css('max-height', height + 'px');\r\n            this.maxRowsHeight(rowsH);\r\n        },\r\n\r\n        /**\r\n         * Set resize class to elements when resizable\r\n         */\r\n        _setResizeClass: function () {\r\n            var rowElements = $(this.table).find('tr');\r\n\r\n            rowElements\r\n                .find('td:eq(' + this.resizeConfig.curResizeElem.ctx.$index() + ')')\r\n                .addClass(this.resizingColumnClass);\r\n            rowElements\r\n                .find('td:eq(' + this.resizeConfig.depResizeElem.ctx.$index() + ')')\r\n                .addClass(this.resizingColumnClass);\r\n        },\r\n\r\n        /**\r\n         * Remove resize class to elements when resizable\r\n         */\r\n        _removeResizeClass: function () {\r\n            var rowElements = $(this.table).find('tr');\r\n\r\n            rowElements\r\n                .find('td:eq(' + this.resizeConfig.curResizeElem.ctx.$index() + ')')\r\n                .removeClass(this.resizingColumnClass);\r\n            rowElements\r\n                .find('td:eq(' + this.resizeConfig.depResizeElem.ctx.$index() + ')')\r\n                .removeClass(this.resizingColumnClass);\r\n        },\r\n\r\n        /**\r\n         * Check conditions to resize\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        _canResize: function (column) {\r\n            if (\r\n                $(column).hasClass(this.visibleClass) ||\r\n                !$(this.resizeConfig.depResizeElem.elems[0]).find('.' + this.resizableElementClass).length\r\n            ) {\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Mouse down event handler,\r\n         * find current and dep column to resize\r\n         *\r\n         * @param {Object} event\r\n         */\r\n        mousedownHandler: function (event) {\r\n            var target = event.target,\r\n                column = $(target).parent()[0],\r\n                cfg = this.resizeConfig,\r\n                body = $('body');\r\n\r\n            event.stopImmediatePropagation();\r\n            cfg.curResizeElem.model = ko.dataFor(column);\r\n            cfg.curResizeElem.ctx = ko.contextFor(column);\r\n            cfg.curResizeElem.elems = this.hasColumn(cfg.curResizeElem.model, false, true);\r\n            cfg.curResizeElem.position = event.pageX;\r\n            cfg.depResizeElem.elems = this.getNextElements(cfg.curResizeElem.elems[0]);\r\n            cfg.depResizeElem.model = ko.dataFor(cfg.depResizeElem.elems[0]);\r\n            cfg.depResizeElem.ctx = ko.contextFor(cfg.depResizeElem.elems[0]);\r\n\r\n            this._setResizeClass();\r\n\r\n            if (!this._canResize(column)) {\r\n                return false;\r\n            }\r\n\r\n            event.stopPropagation();\r\n            this.resizable = true;\r\n            cfg.curResizeElem.model.width = $(cfg.curResizeElem.elems[0]).outerWidth();\r\n            cfg.depResizeElem.model.width = $(cfg.depResizeElem.elems[0]).outerWidth();\r\n            body.addClass(this.inResizeClass);\r\n            body.on('mousemove', this.mousemoveHandler);\r\n            $(window).on('mouseup', this.mouseupHandler);\r\n        },\r\n\r\n        /**\r\n         * Mouse move event handler,\r\n         * change columns width\r\n         *\r\n         * @param {Object} event\r\n         */\r\n        mousemoveHandler: function (event) {\r\n            var cfg = this.resizeConfig,\r\n                width = event.pageX - cfg.curResizeElem.position,\r\n                self = this;\r\n\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n\r\n            if (\r\n                this.resizable &&\r\n                this.minColumnWidth < cfg.curResizeElem.model.width + width &&\r\n                this.minColumnWidth < cfg.depResizeElem.model.width - width &&\r\n                cfg.previousWidth !== width\r\n            ) {\r\n                cfg.curResizeElem.model.width += width;\r\n                cfg.depResizeElem.model.width -= width;\r\n\r\n                cfg.curResizeElem.elems.forEach(function (el) {\r\n                    $(el).outerWidth(cfg.curResizeElem.model.width);\r\n                });\r\n                cfg.depResizeElem.elems.forEach(function (el) {\r\n                    $(el).outerWidth(cfg.depResizeElem.model.width);\r\n                });\r\n\r\n                cfg.previousWidth = width;\r\n                cfg.curResizeElem.position = event.pageX;\r\n            } else if (width <= -(cfg.curResizeElem.model.width - this.minColumnWidth)) {\r\n\r\n                cfg.curResizeElem.elems.forEach(function (el) {\r\n                    $(el).outerWidth(self.minColumnWidth);\r\n                });\r\n                cfg.depResizeElem.elems.forEach(function (el) {\r\n                    $(el).outerWidth(\r\n                    cfg.depResizeElem.model.width +\r\n                    cfg.curResizeElem.model.width -\r\n                    self.minColumnWidth);\r\n                });\r\n\r\n            } else if (width >= cfg.depResizeElem.model.width - this.minColumnWidth) {\r\n\r\n                cfg.depResizeElem.elems.forEach(function (el) {\r\n                    $(el).outerWidth(self.minColumnWidth);\r\n                });\r\n                cfg.curResizeElem.elems.forEach(function (el) {\r\n                    $(el).outerWidth(\r\n                        cfg.curResizeElem.model.width +\r\n                        cfg.depResizeElem.model.width -\r\n                        self.minColumnWidth\r\n                    );\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Mouse up event handler,\r\n         * change columns width\r\n         *\r\n         * @param {Object} event\r\n         */\r\n        mouseupHandler: function (event) {\r\n            var cfg = this.resizeConfig,\r\n                body = $('body');\r\n\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n\r\n            this._removeResizeClass();\r\n            this.storageColumnsData[cfg.curResizeElem.model.index] = cfg.curResizeElem.model.width;\r\n            this.storageColumnsData[cfg.depResizeElem.model.index] = cfg.depResizeElem.model.width;\r\n            this.resizable = false;\r\n\r\n            this.store('storageColumnsData');\r\n\r\n            body.removeClass(this.inResizeClass);\r\n            body.off('mousemove', this.mousemoveHandler);\r\n            $(window).off('mouseup', this.mouseupHandler);\r\n        },\r\n\r\n        /**\r\n         * Find dependency element\r\n         *\r\n         * @param {Object} element - current element\r\n         * @returns {Object} next element data\r\n         */\r\n        getNextElements: function (element) {\r\n            var nextElem = $(element).next()[0],\r\n                nextElemModel = ko.dataFor(nextElem),\r\n                nextElemData = this.hasColumn(nextElemModel, false, true);\r\n\r\n            if (nextElemData) {\r\n                if (nextElemModel.visible) {\r\n                    return nextElemData;\r\n                }\r\n\r\n                return this.getNextElements(nextElem);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get default width\r\n         *\r\n         * @param {Object} column - (th) element\r\n         * @return {String} width for current column\r\n         */\r\n        getDefaultWidth: function (column) {\r\n            var model = ko.dataFor(column);\r\n\r\n            if (this.storageColumnsData[model.index]) {\r\n                return this.storageColumnsData[model.index];\r\n            }\r\n\r\n            if (model.resizeDefaultWidth) {\r\n                return parseInt(model.resizeDefaultWidth, 10);\r\n            }\r\n\r\n            return 'auto';\r\n        },\r\n\r\n        /**\r\n         * Check column is render or not\r\n         *\r\n         * @param {Object} model - cur column model\r\n         * @param {String|Boolean} ctxIndex - index of context, or false, if want to get cols from all ctx\r\n         * @param {Boolean} returned - need return column object or not\r\n         * @return {Boolean} if returned param is false, returned boolean value, else return current object data\r\n         */\r\n        hasColumn: function (model, ctxIndex, returned) {\r\n            var colElem = this.columnsElements[model.index] || {},\r\n                getFromAllCtx = ctxIndex === false;\r\n\r\n            if (colElem && (getFromAllCtx || colElem.hasOwnProperty(ctxIndex))) {\r\n\r\n                if (returned) {\r\n                    return getFromAllCtx ?\r\n                        _.values(colElem) :\r\n                        colElem[ctxIndex];\r\n                }\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Check row is render or not\r\n         *\r\n         * @param {Object} elem - cur column element\r\n         * @param {Boolean} returned - need return column object or not\r\n         * @return {Boolean|Object} if returned param is false, returned boolean value, else return current object data\r\n         */\r\n        hasRow: function (elem, returned) {\r\n            var i = 0,\r\n                el = this.maxRowsHeight(),\r\n                length = el.length;\r\n\r\n            for (i; i < length; i++) {\r\n                if (this.maxRowsHeight()[i].elem === elem) {\r\n                    if (returned) {//eslint-disable-line max-depth\r\n                        return this.maxRowsHeight()[i];\r\n                    }\r\n\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Generate index that will identify context\r\n         *\r\n         * @param {Object} ctx\r\n         * @return {String}\r\n         */\r\n        getCtxIndex: function (ctx) {\r\n            return ctx ? ctx.$parents.reduce(function (pv, cv) {\r\n                return (pv.index || pv) + (cv || {}).index;\r\n            }) : ctx;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/sortBy.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'uiElement'\r\n], function (Element) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            template: 'ui/grid/sortBy',\r\n            options: [],\r\n            applied: {},\r\n            sorting: 'asc',\r\n            columnsProvider: 'ns = ${ $.ns }, componentType = columns',\r\n            selectedOption: '',\r\n            isVisible: true,\r\n            listens: {\r\n                'selectedOption': 'applyChanges'\r\n            },\r\n            statefull: {\r\n                selectedOption: true,\r\n                applied: true\r\n            },\r\n            exports: {\r\n                applied: '${ $.provider }:params.sorting'\r\n            },\r\n            imports: {\r\n                preparedOptions: '${ $.columnsProvider }:elems'\r\n            },\r\n            modules: {\r\n                columns: '${ $.columnsProvider }'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @inheritdoc\r\n         */\r\n        initObservable: function () {\r\n            return this._super()\r\n                .observe([\r\n                    'applied',\r\n                    'selectedOption',\r\n                    'isVisible'\r\n                ]);\r\n        },\r\n\r\n        /**\r\n         * Prepared sort order options\r\n         */\r\n        preparedOptions: function (columns) {\r\n            if (columns && columns.length > 0) {\r\n                columns.map(function (column) {\r\n                    if (column.sortable === true) {\r\n                        this.options.push({\r\n                            value: column.index,\r\n                            label: column.label\r\n                        });\r\n                        this.isVisible(true);\r\n                    } else {\r\n                        this.isVisible(false);\r\n                    }\r\n                }.bind(this));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Apply changes\r\n         */\r\n        applyChanges: function () {\r\n            this.applied({\r\n                field: this.selectedOption(),\r\n                direction: this.sorting\r\n            });\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/toolbar.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'Magento_Ui/js/lib/view/utils/async',\r\n    'Magento_Ui/js/lib/view/utils/raf',\r\n    'rjsResolver',\r\n    'uiCollection'\r\n], function (_, $, raf, resolver, Collection) {\r\n    'use strict';\r\n\r\n    var transformProp;\r\n\r\n    /**\r\n     * Defines supported css 'transform' property.\r\n     *\r\n     * @returns {String|Undefined}\r\n     */\r\n    transformProp = (function () {\r\n        var style = document.documentElement.style,\r\n            base = 'Transform',\r\n            vendors = ['webkit', 'moz', 'ms', 'o'],\r\n            vi = vendors.length,\r\n            property;\r\n\r\n        if (typeof style.transform != 'undefined') {\r\n            return 'transform';\r\n        }\r\n\r\n        while (vi--) {\r\n            property = vendors[vi] + base;\r\n\r\n            if (typeof style[property] != 'undefined') {\r\n                return property;\r\n            }\r\n        }\r\n    })();\r\n\r\n    /**\r\n     * Moves specified DOM element to the x and y coordinates.\r\n     *\r\n     * @param {HTMLElement} elem - Element to be relocated.\r\n     * @param {Number} x - X coordinate.\r\n     * @param {Number} y - Y coordinate.\r\n     */\r\n    function locate(elem, x, y) {\r\n        var value = 'translate(' + x + 'px,' + y + 'px)';\r\n\r\n        elem.style[transformProp] = value;\r\n    }\r\n\r\n    return Collection.extend({\r\n        defaults: {\r\n            template: 'ui/grid/toolbar',\r\n            stickyTmpl: 'ui/grid/sticky/sticky',\r\n            tableSelector: 'table',\r\n            columnsProvider: 'ns = ${ $.ns }, componentType = columns',\r\n            refreshFPS: 15,\r\n            sticky: false,\r\n            visible: false,\r\n            _resized: true,\r\n            _scrolled: true,\r\n            _tableScrolled: true,\r\n            _requiredNodes: {\r\n                '$stickyToolbar': true,\r\n                '$stickyTable': true,\r\n                '$table': true,\r\n                '$sticky': true\r\n            },\r\n            stickyClass: {\r\n                'sticky-header': true\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes sticky toolbar component.\r\n         *\r\n         * @returns {Sticky} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            if (this.sticky) {\r\n                this.waitDOMElements()\r\n                    .then(this.run.bind(this));\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Establishes DOM elements wait process.\r\n         *\r\n         * @returns {jQueryPromise} Promise which will be resolved\r\n         *      when all of the required DOM elements are defined.\r\n         */\r\n        waitDOMElements: function () {\r\n            var _domPromise = $.Deferred();\r\n\r\n            _.bindAll(this, 'setStickyTable', 'setTableNode');\r\n\r\n            $.async({\r\n                ctx: ':not([data-role=\"sticky-el-root\"])',\r\n                component: this.columnsProvider,\r\n                selector: this.tableSelector\r\n            }, this.setTableNode);\r\n\r\n            $.async({\r\n                ctx: '[data-role=\"sticky-el-root\"]',\r\n                component: this.columnsProvider,\r\n                selector: this.tableSelector\r\n            }, this.setStickyTable);\r\n\r\n            this._domPromise = _domPromise;\r\n\r\n            return _domPromise.promise();\r\n        },\r\n\r\n        /**\r\n         * Defines left caption element.\r\n         *\r\n         * @param {HTMLElement} node\r\n         */\r\n        setLeftCap: function (node) {\r\n            this.$leftCap = node;\r\n        },\r\n\r\n        /**\r\n         * Defines right caption element.\r\n         *\r\n         * @param {HTMLElement} node\r\n         */\r\n        setRightCap: function (node) {\r\n            this.$rightCap = node;\r\n        },\r\n\r\n        /**\r\n         * Defines original table element.\r\n         *\r\n         * @param {HTMLTableElement} node\r\n         */\r\n        setTableNode: function (node) {\r\n            this.$cols = node.tHead.children[0].cells;\r\n            this.$tableContainer = node.parentNode;\r\n\r\n            this.setNode('$table', node);\r\n        },\r\n\r\n        /**\r\n         * Defines sticky table element.\r\n         *\r\n         * @param {HTMLTableElement} node\r\n         */\r\n        setStickyTable: function (node) {\r\n            this.$stickyCols = node.tHead.children[0].cells;\r\n\r\n            this.setNode('$stickyTable', node);\r\n        },\r\n\r\n        /**\r\n         * Defines sticky toolbar node.\r\n         *\r\n         * @param {HTMLElement} node\r\n         */\r\n        setStickyToolbarNode: function (node) {\r\n            this.setNode('$stickyToolbar', node);\r\n        },\r\n\r\n        /**\r\n         * Defines sticky element container.\r\n         *\r\n         * @param {HTMLElement} node\r\n         */\r\n        setStickyNode: function (node) {\r\n            this.setNode('$sticky', node);\r\n        },\r\n\r\n        /**\r\n         * Defines toolbar element container.\r\n         *\r\n         * @param {HTMLElement} node\r\n         */\r\n        setToolbarNode: function (node) {\r\n            this.$toolbar = node;\r\n        },\r\n\r\n        /**\r\n         * Sets provided node as a value of 'key' property and\r\n         * performs check for required DOM elements.\r\n         *\r\n         * @param {String} key - Properties key.\r\n         * @param {HTMLElement} node - DOM element.\r\n         */\r\n        setNode: function (key, node) {\r\n            var nodes = this._requiredNodes,\r\n                promise = this._domPromise,\r\n                defined;\r\n\r\n            this[key] = node;\r\n\r\n            defined = _.every(nodes, function (enabled, name) {\r\n                return enabled ? this[name] : true;\r\n            }, this);\r\n\r\n            if (defined) {\r\n                resolver(promise.resolve, promise);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Starts refresh process of the sticky element\r\n         * and assigns DOM elements events handlers.\r\n         */\r\n        run: function () {\r\n            _.bindAll(\r\n                this,\r\n                'refresh',\r\n                '_onWindowResize',\r\n                '_onWindowScroll',\r\n                '_onTableScroll'\r\n            );\r\n\r\n            $(window).on({\r\n                scroll: this._onWindowScroll,\r\n                resize: this._onWindowResize\r\n            });\r\n\r\n            $(this.$tableContainer).on('scroll', this._onTableScroll);\r\n\r\n            this.refresh();\r\n            this.checkTableWidth();\r\n        },\r\n\r\n        /**\r\n         * Refreshes state of the sticky element and\r\n         * invokes DOM elements events handlers\r\n         * if corresponding event has been triggered.\r\n         */\r\n        refresh: function () {\r\n            if (!raf(this.refresh, this.refreshFPS)) {\r\n                return;\r\n            }\r\n\r\n            if (this._scrolled) {\r\n                this.onWindowScroll();\r\n            }\r\n\r\n            if (this._tableScrolled) {\r\n                this.onTableScroll();\r\n            }\r\n\r\n            if (this._resized) {\r\n                this.onWindowResize();\r\n            }\r\n\r\n            if (this.visible) {\r\n                this.checkTableWidth();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Shows sticky toolbar.\r\n         *\r\n         * @returns {Sticky} Chainable.\r\n         */\r\n        show: function () {\r\n            this.visible = true;\r\n            //Check admin grid button has addedr not\r\n            if ($('.page-main-actions').length === 0) {\r\n                this.$sticky.style.top = 0;\r\n            }\r\n            this.$sticky.style.display = '';\r\n            this.$toolbar.style.visibility = 'hidden';\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Hides sticky toolbar.\r\n         *\r\n         * @returns {Sticky} Chainable.\r\n         */\r\n        hide: function () {\r\n            this.visible = false;\r\n\r\n            this.$sticky.style.display = 'none';\r\n            this.$toolbar.style.visibility = '';\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if sticky toolbar covers original elements.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        isCovered: function () {\r\n            var stickyTop = this._stickyTableTop + this._wScrollTop;\r\n\r\n            return stickyTop > this._tableTop;\r\n        },\r\n\r\n        /**\r\n         * Updates offset of the sticky table element.\r\n         *\r\n         * @returns {Sticky} Chainable.\r\n         */\r\n        updateStickyTableOffset: function () {\r\n            var style,\r\n                top;\r\n\r\n            if (this.visible) {\r\n                top = this.$stickyTable.getBoundingClientRect().top;\r\n            } else {\r\n                style = this.$sticky.style;\r\n\r\n                style.visibility = 'hidden';\r\n                style.display = '';\r\n\r\n                top = this.$stickyTable.getBoundingClientRect().top;\r\n\r\n                style.display = 'none';\r\n                style.visibility = '';\r\n            }\r\n\r\n            this._stickyTableTop = top;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Updates offset of the original table element.\r\n         *\r\n         * @returns {Sticky} Chainable.\r\n         */\r\n        updateTableOffset: function () {\r\n            var box = this.$table.getBoundingClientRect(),\r\n                top = box.top + this._wScrollTop;\r\n\r\n            if (this._tableTop !== top) {\r\n                this._tableTop = top;\r\n\r\n                this.onTableTopChange(top);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if width of the table or it's columns has changed.\r\n         *\r\n         * @returns {Sticky} Chainable.\r\n         */\r\n        checkTableWidth: function () {\r\n            var cols        = this.$cols,\r\n                total       = cols.length,\r\n                rightBorder = cols[total - 2].offsetLeft,\r\n                tableWidth  = this.$table.offsetWidth;\r\n\r\n            if (this._tableWidth !== tableWidth) {\r\n                this._tableWidth = tableWidth;\r\n\r\n                this.onTableWidthChange(tableWidth);\r\n            }\r\n\r\n            if (this._rightBorder !== rightBorder) {\r\n                this._rightBorder = rightBorder;\r\n\r\n                this.onColumnsWidthChange();\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Updates width of the sticky table.\r\n         *\r\n         * @returns {Sticky} Chainable.\r\n         */\r\n        updateTableWidth: function () {\r\n            this.$stickyTable.style.width = this._tableWidth + 'px';\r\n\r\n            if (this._tableWidth < this._toolbarWidth) {\r\n                this.checkToolbarSize();\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Updates width of the sticky columns.\r\n         *\r\n         * @returns {Sticky} Chainable.\r\n         */\r\n        updateColumnsWidth: function () {\r\n            var cols        = this.$cols,\r\n                index       = cols.length,\r\n                stickyCols  = this.$stickyCols;\r\n\r\n            while (index--) {\r\n                stickyCols[index].width = cols[index].offsetWidth;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Upadates size of the sticky toolbar element\r\n         * and invokes corresponding 'change' event handlers.\r\n         *\r\n         * @returns {Sticky} Chainable.\r\n         */\r\n        checkToolbarSize: function () {\r\n            var width = this.$tableContainer.offsetWidth;\r\n\r\n            if (this._toolbarWidth !== width) {\r\n                this._toolbarWidth = width;\r\n\r\n                this.onToolbarWidthChange(width);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Toggles sticky toolbar visibility if it's necessary.\r\n         *\r\n         * @returns {Sticky} Chainable.\r\n         */\r\n        updateVisibility: function () {\r\n            if (this.visible !== this.isCovered()) {\r\n                this.visible ? this.hide() : this.show();\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Updates position of the left cover area.\r\n         *\r\n         * @returns {Sticky} Chainable.\r\n         */\r\n        updateLeftCap: function () {\r\n            locate(this.$leftCap, -this._wScrollLeft, 0);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Updates position of the right cover area.\r\n         *\r\n         * @returns {Sticky} Chainable.\r\n         */\r\n        updateRightCap: function () {\r\n            var left = this._toolbarWidth - this._wScrollLeft;\r\n\r\n            locate(this.$rightCap, left, 0);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Updates position of the sticky table.\r\n         *\r\n         * @returns {Sticky} Chainable.\r\n         */\r\n        updateTableScroll: function () {\r\n            var container = this.$tableContainer,\r\n                left = container.scrollLeft + this._wScrollLeft;\r\n\r\n            locate(this.$stickyTable, -left, 0);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Updates width of the toolbar element.\r\n         *\r\n         * @returns {Sticky} Chainable.\r\n         */\r\n        updateToolbarWidth: function () {\r\n            this.$stickyToolbar.style.width = this._toolbarWidth + 'px';\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Handles changes of the toolbar element's width.\r\n         */\r\n        onToolbarWidthChange: function () {\r\n            this.updateToolbarWidth()\r\n                .updateRightCap();\r\n        },\r\n\r\n        /**\r\n         * Handles changes of the table top position.\r\n         */\r\n        onTableTopChange: function () {\r\n            this.updateStickyTableOffset();\r\n        },\r\n\r\n        /**\r\n         * Handles change of the table width.\r\n         */\r\n        onTableWidthChange: function () {\r\n            this.updateTableWidth();\r\n        },\r\n\r\n        /**\r\n         * Handles change of the table columns width.\r\n         */\r\n        onColumnsWidthChange: function () {\r\n            this.updateColumnsWidth();\r\n        },\r\n\r\n        /**\r\n         * Handles changes of the window's size.\r\n         */\r\n        onWindowResize: function () {\r\n            this.checkToolbarSize();\r\n\r\n            this._resized = false;\r\n        },\r\n\r\n        /**\r\n         * Handles changes of the original table scroll position.\r\n         */\r\n        onTableScroll: function () {\r\n            this.updateTableScroll();\r\n\r\n            this._tableScrolled = false;\r\n        },\r\n\r\n        /**\r\n         * Handles changes of window's scroll position.\r\n         */\r\n        onWindowScroll: function () {\r\n            var scrollTop = window.pageYOffset,\r\n                scrollLeft = window.pageXOffset;\r\n\r\n            if (this._wScrollTop !== scrollTop) {\r\n                this._wScrollTop = scrollTop;\r\n\r\n                this.onWindowScrollTop(scrollTop);\r\n            }\r\n\r\n            if (this._wScrollLeft !== scrollLeft) {\r\n                this._wScrollLeft = scrollLeft;\r\n\r\n                this.onWindowScrollLeft(scrollLeft);\r\n            }\r\n\r\n            this._scrolled = false;\r\n        },\r\n\r\n        /**\r\n         * Handles changes of windows' top scroll position.\r\n         */\r\n        onWindowScrollTop: function () {\r\n            this.updateTableOffset()\r\n                .updateVisibility();\r\n        },\r\n\r\n        /**\r\n         * Handles changes of windows' left scroll position.\r\n         */\r\n        onWindowScrollLeft: function () {\r\n            this.updateRightCap()\r\n                .updateLeftCap()\r\n                .updateTableScroll();\r\n        },\r\n\r\n        /**\r\n         * Original window 'scroll' event handler.\r\n         * Sets 'scrolled' flag to 'true'.\r\n         *\r\n         * @private\r\n         */\r\n        _onWindowScroll: function () {\r\n            this._scrolled = true;\r\n        },\r\n\r\n        /**\r\n         * Original window 'resize' event handler.\r\n         * Sets 'resized' flag to 'true'.\r\n         *\r\n         * @private\r\n         */\r\n        _onWindowResize: function () {\r\n            this._resized = true;\r\n        },\r\n\r\n        /**\r\n         * Original table 'scroll' event handler.\r\n         * Sets '_tableScrolled' flag to 'true'.\r\n         *\r\n         * @private\r\n         */\r\n        _onTableScroll: function () {\r\n            this._tableScrolled = true;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/tree-massactions.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'Magento_Ui/js/grid/massactions'\r\n], function (ko, _, Massactions) {\r\n    'use strict';\r\n\r\n    return Massactions.extend({\r\n        defaults: {\r\n            template: 'ui/grid/tree-massactions',\r\n            submenuTemplate: 'ui/grid/submenu',\r\n            listens: {\r\n                opened: 'hideSubmenus'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties.\r\n         *\r\n         * @returns {Massactions} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .recursiveObserveActions(this.actions());\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Recursive initializes observable actions.\r\n         *\r\n         * @param {Array} actions - Action objects.\r\n         * @param {String} [prefix] - An optional string that will be prepended\r\n         *      to the \"type\" field of all child actions.\r\n         * @returns {Massactions} Chainable.\r\n         */\r\n        recursiveObserveActions: function (actions, prefix) {\r\n            _.each(actions, function (action) {\r\n                if (prefix) {\r\n                    action.type = prefix + '.' + action.type;\r\n                }\r\n\r\n                if (action.actions) {\r\n                    action.visible = ko.observable(false);\r\n                    action.parent = actions;\r\n                    this.recursiveObserveActions(action.actions, action.type);\r\n                }\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Applies specified action.\r\n         *\r\n         * @param {String} actionIndex - Actions' identifier.\r\n         * @returns {Massactions} Chainable.\r\n         */\r\n        applyAction: function (actionIndex) {\r\n            var action = this.getAction(actionIndex),\r\n                visibility;\r\n\r\n            if (action.visible) {\r\n                visibility = action.visible();\r\n\r\n                this.hideSubmenus(action.parent);\r\n                action.visible(!visibility);\r\n\r\n                return this;\r\n            }\r\n\r\n            return this._super(actionIndex);\r\n        },\r\n\r\n        /**\r\n         * Retrieves action object associated with a specified index.\r\n         *\r\n         * @param {String} actionIndex - Actions' identifier.\r\n         * @param {Array} actions - Action objects.\r\n         * @returns {Object} Action object.\r\n         */\r\n        getAction: function (actionIndex, actions) {\r\n            var currentActions = actions || this.actions(),\r\n                result = false;\r\n\r\n            _.find(currentActions, function (action) {\r\n                if (action.type === actionIndex) {\r\n                    result = action;\r\n\r\n                    return true;\r\n                }\r\n\r\n                if (action.actions) {\r\n                    result = this.getAction(actionIndex, action.actions);\r\n\r\n                    return result;\r\n                }\r\n            }, this);\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Recursive hide all sub folders in given array.\r\n         *\r\n         * @param {Array} actions - Action objects.\r\n         * @returns {Massactions} Chainable.\r\n         */\r\n        hideSubmenus: function (actions) {\r\n            var currentActions = actions || this.actions();\r\n\r\n            _.each(currentActions, function (action) {\r\n                if (action.visible && action.visible()) {\r\n                    action.visible(false);\r\n                }\r\n\r\n                if (action.actions) {\r\n                    this.hideSubmenus(action.actions);\r\n                }\r\n            }, this);\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/url-filter-applier.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'underscore',\r\n    'jquery'\r\n], function (Component, _, $) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            listingNamespace: null,\r\n            bookmarkProvider: 'componentType = bookmark, ns = ${ $.listingNamespace }',\r\n            filterProvider: 'componentType = filters, ns = ${ $.listingNamespace }',\r\n            filterKey: 'filters',\r\n            searchString: location.search,\r\n            modules: {\r\n                bookmarks: '${ $.bookmarkProvider }',\r\n                filterComponent: '${ $.filterProvider }'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Init component\r\n         *\r\n         * @return {exports}\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n            this.apply();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Apply filter\r\n         */\r\n        apply: function () {\r\n            var urlFilter = this.getFilterParam(this.searchString),\r\n                applied,\r\n                filters;\r\n\r\n            if (_.isUndefined(this.filterComponent())) {\r\n                setTimeout(function () {\r\n                    this.apply();\r\n                }.bind(this), 100);\r\n\r\n                return;\r\n            }\r\n\r\n            if (!_.isUndefined(this.bookmarks())) {\r\n                if (!_.size(this.bookmarks().getViewData(this.bookmarks().defaultIndex))) {\r\n                    setTimeout(function () {\r\n                        this.apply();\r\n                    }.bind(this), 500);\r\n\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (Object.keys(urlFilter).length) {\r\n                applied = this.filterComponent().get('applied');\r\n                filters = $.extend({}, applied, urlFilter);\r\n                this.filterComponent().set('applied', filters);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get filter param from url\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        getFilterParam: function (url) {\r\n            var searchString = decodeURI(url),\r\n                itemArray;\r\n\r\n            return _.chain(searchString.slice(1).split('&'))\r\n                .map(function (item) {\r\n\r\n                    if (item && item.search(this.filterKey) !== -1) {\r\n                        itemArray = item.split('=');\r\n\r\n                        if (itemArray[1].search('\\\\[') === 0) {\r\n                            itemArray[1] = itemArray[1].replace(/[\\[\\]]/g, '').split(',');\r\n                        }\r\n\r\n                        itemArray[0] = itemArray[0].replace(this.filterKey, '')\r\n                                .replace(/[\\[\\]]/g, '');\r\n\r\n                        return itemArray;\r\n                    }\r\n                }.bind(this))\r\n                .compact()\r\n                .object()\r\n                .value();\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/cells/sanitizedHtml.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/grid/columns/column',\r\n    'escaper'\r\n], function (Column, escaper) {\r\n    'use strict';\r\n\r\n    return Column.extend({\r\n        defaults: {\r\n            allowedTags: ['div', 'span', 'b', 'strong', 'i', 'em', 'u', 'a']\r\n        },\r\n\r\n        /**\r\n         * Name column.\r\n         *\r\n         * @param {String} label\r\n         * @returns {String}\r\n         */\r\n        getSafeHtml: function (label) {\r\n            return escaper.escapeHtml(label, this.allowedTags);\r\n        },\r\n\r\n        /**\r\n         * UnsanitizedHtml version of getSafeHtml.\r\n         *\r\n         * @param {String} label\r\n         * @returns {String}\r\n         */\r\n        getSafeUnsanitizedHtml: function (label) {\r\n            return this.getSafeHtml(label);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/columns/actions.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    'uiRegistry',\r\n    './column',\r\n    'Magento_Ui/js/modal/confirm',\r\n    'mage/dataPost'\r\n], function (_, utils, registry, Column, confirm, dataPost) {\r\n    'use strict';\r\n\r\n    return Column.extend({\r\n        defaults: {\r\n            bodyTmpl: 'ui/grid/cells/actions',\r\n            sortable: false,\r\n            draggable: false,\r\n            actions: [],\r\n            rows: [],\r\n            rowsProvider: '${ $.parentName }',\r\n            fieldClass: {\r\n                'data-grid-actions-cell': true\r\n            },\r\n            templates: {\r\n                actions: {}\r\n            },\r\n            imports: {\r\n                rows: '${ $.rowsProvider }:rows'\r\n            },\r\n            listens: {\r\n                rows: 'updateActions'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties.\r\n         *\r\n         * @returns {ActionsColumn} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .track('actions');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Returns specific action of a specified row\r\n         * or all action objects associated with it.\r\n         *\r\n         * @param {Number} rowIndex - Index of a row.\r\n         * @param {String} [actionIndex] - Action identifier.\r\n         * @returns {Array|Object}\r\n         */\r\n        getAction: function (rowIndex, actionIndex) {\r\n            var rowActions = this.actions[rowIndex];\r\n\r\n            return rowActions && actionIndex ?\r\n                rowActions[actionIndex] :\r\n                rowActions;\r\n        },\r\n\r\n        /**\r\n         * Returns visible actions for a specified row.\r\n         *\r\n         * @param {Number} rowIndex - Index of a row.\r\n         * @returns {Array} Visible actions.\r\n         */\r\n        getVisibleActions: function (rowIndex) {\r\n            var rowActions = this.getAction(rowIndex);\r\n\r\n            return _.filter(rowActions, this.isActionVisible, this);\r\n        },\r\n\r\n        /**\r\n         * Adds new action. If an action with the specified identifier\r\n         * already exists, then the original will be overridden.\r\n         *\r\n         * @param {String} index - Actions' identifier.\r\n         * @param {Object} action - Actions' data.\r\n         * @returns {ActionsColumn} Chainable.\r\n         */\r\n        addAction: function (index, action) {\r\n            var actionTmpls = this.templates.actions;\r\n\r\n            actionTmpls[index] = action;\r\n\r\n            this.updateActions();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Recreates actions for each row.\r\n         *\r\n         * @returns {ActionsColumn} Chainable.\r\n         */\r\n        updateActions: function () {\r\n            this.actions = this.rows.map(this._formatActions, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Processes actions, setting additional information to them and\r\n         * evaluating their properties as string templates.\r\n         *\r\n         * @private\r\n         * @param {Object} row - Row object.\r\n         * @param {Number} rowIndex - Index of a row.\r\n         * @returns {Array}\r\n         */\r\n        _formatActions: function (row, rowIndex) {\r\n            var rowActions      = row[this.index] || {},\r\n                recordId        = row[this.indexField],\r\n                customActions   = this.templates.actions;\r\n\r\n            /**\r\n             * Actions iterator.\r\n             */\r\n            function iterate(action, index) {\r\n                action = utils.extend({\r\n                    index: index,\r\n                    rowIndex: rowIndex,\r\n                    recordId: recordId\r\n                }, action);\r\n\r\n                return utils.template(action, row, true);\r\n            }\r\n\r\n            rowActions      = _.mapObject(rowActions, iterate);\r\n            customActions   = _.map(customActions, iterate);\r\n\r\n            customActions.forEach(function (action) {\r\n                rowActions[action.index] = action;\r\n            });\r\n\r\n            return rowActions;\r\n        },\r\n\r\n        /**\r\n         * Applies specified action.\r\n         *\r\n         * @param {String} actionIndex - Actions' identifier.\r\n         * @param {Number} rowIndex - Index of a row.\r\n         * @returns {ActionsColumn} Chainable.\r\n         */\r\n        applyAction: function (actionIndex, rowIndex) {\r\n            var action = this.getAction(rowIndex, actionIndex),\r\n                callback = this._getCallback(action);\r\n\r\n            action.confirm ?\r\n                this._confirm(action, callback) :\r\n                callback();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Creates handler for the provided action if it's required.\r\n         *\r\n         * @param {Object} action - Action object.\r\n         * @returns {Function|Undefined}\r\n         */\r\n        getActionHandler: function (action) {\r\n            var index = action.index,\r\n                rowIndex = action.rowIndex;\r\n\r\n            if (this.isHandlerRequired(index, rowIndex)) {\r\n                return this.applyAction.bind(this, index, rowIndex);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns target of action if it's been set.\r\n         *\r\n         * @param {Object} action - Action object.\r\n         * @returns {String}\r\n         */\r\n        getTarget: function (action) {\r\n            if (action.target) {\r\n                return action.target;\r\n            }\r\n\r\n            return '_self';\r\n        },\r\n\r\n        /**\r\n         * Checks if specified action requires a handler function.\r\n         *\r\n         * @param {String} actionIndex - Actions' identifier.\r\n         * @param {Number} rowIndex - Index of a row.\r\n         * @returns {Boolean}\r\n         */\r\n        isHandlerRequired: function (actionIndex, rowIndex) {\r\n            var action = this.getAction(rowIndex, actionIndex);\r\n\r\n            return _.isObject(action.callback) || action.confirm || !action.href;\r\n        },\r\n\r\n        /**\r\n         * Creates action callback based on it's data. If the action doesn't specify\r\n         * a callback function than the default one will be used.\r\n         *\r\n         * @private\r\n         * @param {Object} action - Action's object.\r\n         * @returns {Function} Callback function.\r\n         */\r\n        _getCallback: function (action) {\r\n            var args = [action.index, action.recordId, action],\r\n                callback = action.callback;\r\n\r\n            if (utils.isObject(callback)) {\r\n                args.unshift(callback.target);\r\n\r\n                callback = registry.async(callback.provider);\r\n            } else if (_.isArray(callback)) {\r\n                return this._getCallbacks(action);\r\n            } else if (!_.isFunction(callback)) {\r\n                callback = this.defaultCallback.bind(this);\r\n            }\r\n\r\n            return function () {\r\n                callback.apply(callback, args);\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Creates action callback for multiple actions.\r\n         *\r\n         * @private\r\n         * @param {Object} action - Action's object.\r\n         * @returns {Function} Callback function.\r\n         */\r\n        _getCallbacks: function (action) {\r\n            var callback = action.callback,\r\n                callbacks = [],\r\n                tmpCallback;\r\n\r\n            _.each(callback, function (cb) {\r\n                tmpCallback = {\r\n                    action: registry.async(cb.provider),\r\n                    args: _.compact([cb.target, cb.params])\r\n                };\r\n                callbacks.push(tmpCallback);\r\n            });\r\n\r\n            return function () {\r\n                _.each(callbacks, function (cb) {\r\n                    cb.action.apply(cb.action, cb.args);\r\n                });\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Default action callback. Redirects to\r\n         * the specified in action's data url.\r\n         *\r\n         * @param {String} actionIndex - Action's identifier.\r\n         * @param {(Number|String)} recordId - Id of the record associated\r\n         *      with a specified action.\r\n         * @param {Object} action - Action's data.\r\n         */\r\n        defaultCallback: function (actionIndex, recordId, action) {\r\n            if (action.post) {\r\n                dataPost().postData({\r\n                    action: action.href,\r\n                    data: {}\r\n                });\r\n            } else {\r\n                window.location.href = action.href;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Shows actions' confirmation window.\r\n         *\r\n         * @param {Object} action - Action's data.\r\n         * @param {Function} callback - Callback that will be\r\n         *      invoked if action is confirmed.\r\n         */\r\n        _confirm: function (action, callback) {\r\n            var confirmData = action.confirm;\r\n\r\n            confirm({\r\n                title: confirmData.title,\r\n                content: confirmData.message,\r\n                actions: {\r\n                    confirm: callback\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Checks if row has only one visible action.\r\n         *\r\n         * @param {Number} rowIndex - Row index.\r\n         * @returns {Boolean}\r\n         */\r\n        isSingle: function (rowIndex) {\r\n            return this.getVisibleActions(rowIndex).length === 1;\r\n        },\r\n\r\n        /**\r\n         * Checks if row has more than one visible action.\r\n         *\r\n         * @param {Number} rowIndex - Row index.\r\n         * @returns {Boolean}\r\n         */\r\n        isMultiple: function (rowIndex) {\r\n            return this.getVisibleActions(rowIndex).length > 1;\r\n        },\r\n\r\n        /**\r\n         * Checks if action should be displayed.\r\n         *\r\n         * @param {Object} action - Action object.\r\n         * @returns {Boolean}\r\n         */\r\n        isActionVisible: function (action) {\r\n            return action.hidden !== true;\r\n        },\r\n\r\n        /**\r\n         * Overrides base method, because this component\r\n         * can't have global field action.\r\n         *\r\n         * @returns {Boolean} False.\r\n         */\r\n        hasFieldAction: function () {\r\n            return false;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/columns/column.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiRegistry',\r\n    'mageUtils',\r\n    'uiElement'\r\n], function (_, registry, utils, Element) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            headerTmpl: 'ui/grid/columns/text',\r\n            bodyTmpl: 'ui/grid/cells/text',\r\n            disableAction: false,\r\n            controlVisibility: true,\r\n            sortable: true,\r\n            sorting: false,\r\n            visible: true,\r\n            draggable: true,\r\n            fieldClass: {},\r\n            ignoreTmpls: {\r\n                fieldAction: true\r\n            },\r\n            statefull: {\r\n                visible: true,\r\n                sorting: true\r\n            },\r\n            imports: {\r\n                exportSorting: 'sorting'\r\n            },\r\n            listens: {\r\n                '${ $.provider }:params.sorting.field': 'onSortChange'\r\n            },\r\n            modules: {\r\n                source: '${ $.provider }'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes column component.\r\n         *\r\n         * @returns {Column} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .initFieldClass();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties.\r\n         *\r\n         * @returns {Column} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .track([\r\n                    'visible',\r\n                    'sorting',\r\n                    'disableAction'\r\n                ])\r\n                .observe([\r\n                    'dragging'\r\n                ]);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Extends list of field classes.\r\n         *\r\n         * @returns {Column} Chainable.\r\n         */\r\n        initFieldClass: function () {\r\n            _.extend(this.fieldClass, {\r\n                _dragging: this.dragging\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Applies specified stored state of a column or one of its' properties.\r\n         *\r\n         * @param {String} state - Defines what state should be used: saved or default.\r\n         * @param {String} [property] - Defines what columns' property should be applied.\r\n         *      If not specified, then all columns stored properties will be used.\r\n         * @returns {Column} Chainable.\r\n         */\r\n        applyState: function (state, property) {\r\n            var namespace = this.storageConfig.root;\r\n\r\n            if (property) {\r\n                namespace += '.' + property;\r\n            }\r\n\r\n            this.storage('applyStateOf', state, namespace);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Sets columns' sorting. If column is currently sorted,\r\n         * than its' direction will be toggled.\r\n         *\r\n         * @param {*} [enable=true] - If false, than sorting will\r\n         *      be removed from a column.\r\n         * @returns {Column} Chainable.\r\n         */\r\n        sort: function (enable) {\r\n            if (!this.sortable) {\r\n                return this;\r\n            }\r\n\r\n            enable !== false ?\r\n                this.toggleSorting() :\r\n                this.sorting = false;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Sets descending columns' sorting.\r\n         *\r\n         * @returns {Column} Chainable.\r\n         */\r\n        sortDescending: function () {\r\n            if (this.sortable) {\r\n                this.sorting = 'desc';\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Sets ascending columns' sorting.\r\n         *\r\n         * @returns {Column} Chainable.\r\n         */\r\n        sortAscending: function () {\r\n            if (this.sortable) {\r\n                this.sorting = 'asc';\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Toggles sorting direction.\r\n         *\r\n         * @returns {Column} Chainable.\r\n         */\r\n        toggleSorting: function () {\r\n            this.sorting === 'asc' ?\r\n                this.sortDescending() :\r\n                this.sortAscending();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if column is sorted.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        isSorted: function () {\r\n            return !!this.sorting;\r\n        },\r\n\r\n        /**\r\n         * Exports sorting data to the dataProvider if\r\n         * sorting of a column is enabled.\r\n         */\r\n        exportSorting: function () {\r\n            if (!this.sorting) {\r\n                return;\r\n            }\r\n\r\n            this.source('set', 'params.sorting', {\r\n                field: this.index,\r\n                direction: this.sorting\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Checks if column has an assigned action that will\r\n         * be performed when clicking on one of its' fields.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        hasFieldAction: function () {\r\n            return !!this.fieldAction || !!this.fieldActions;\r\n        },\r\n\r\n        /**\r\n         * Applies action described in a 'fieldAction' property\r\n         * or actions described in 'fieldActions' property.\r\n         *\r\n         * @param {Number} rowIndex - Index of a row which initiates action.\r\n         * @returns {Column} Chainable.\r\n         *\r\n         * @example Example of fieldAction definition, which is equivalent to\r\n         *      referencing to external component named 'listing.multiselect'\r\n         *      and calling its' method 'toggleSelect' with params [rowIndex, true] =>\r\n         *\r\n         *      {\r\n         *          provider: 'listing.multiselect',\r\n         *          target: 'toggleSelect',\r\n         *          params: ['${ $.$data.rowIndex }', true]\r\n         *      }\r\n         */\r\n        applyFieldAction: function (rowIndex) {\r\n            if (!this.hasFieldAction() || this.disableAction) {\r\n                return this;\r\n            }\r\n\r\n            if (this.fieldActions) {\r\n                this.fieldActions.forEach(this.applySingleAction.bind(this, rowIndex), this);\r\n            } else {\r\n                this.applySingleAction(rowIndex);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Applies single action\r\n         *\r\n         * @param {Number} rowIndex - Index of a row which initiates action.\r\n         * @param {Object} action - Action (fieldAction) to be applied\r\n         *\r\n         */\r\n        applySingleAction: function (rowIndex, action) {\r\n            var callback;\r\n\r\n            action = action || this.fieldAction;\r\n            action = utils.template(action, {\r\n                column: this,\r\n                rowIndex: rowIndex\r\n            }, true);\r\n\r\n            callback = this._getFieldCallback(action);\r\n\r\n            if (_.isFunction(callback)) {\r\n                callback();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns field action handler if it was specified.\r\n         *\r\n         * @param {Object} record - Record object with which action is associated.\r\n         * @returns {Function|Undefined}\r\n         */\r\n        getFieldHandler: function (record) {\r\n            if (this.hasFieldAction()) {\r\n                return this.applyFieldAction.bind(this, record._rowIndex);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Creates action callback based on its' data.\r\n         *\r\n         * @param {Object} action - Actions' object.\r\n         * @returns {Function|Boolean} Callback function or false\r\n         *      value if it was impossible create a callback.\r\n         */\r\n        _getFieldCallback: function (action) {\r\n            var args     = action.params || [],\r\n                callback = action.target;\r\n\r\n            if (action.provider && action.target) {\r\n                args.unshift(action.target);\r\n\r\n                callback = registry.async(action.provider);\r\n            }\r\n\r\n            if (!_.isFunction(callback)) {\r\n                return false;\r\n            }\r\n\r\n            return function () {\r\n                callback.apply(callback, args);\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Ment to preprocess data associated with a current columns' field.\r\n         *\r\n         * @param {Object} record - Data to be preprocessed.\r\n         * @returns {String}\r\n         */\r\n        getLabel: function (record) {\r\n            return record[this.index];\r\n        },\r\n\r\n        /**\r\n         * UnsanitizedHtml version of getLabel.\r\n         *\r\n         * @param {Object} record - Data to be preprocessed.\r\n         * @returns {String}\r\n         */\r\n        getLabelUnsanitizedHtml: function (record) {\r\n            return this.getLabel(record);\r\n        },\r\n\r\n        /**\r\n         * Returns list of classes that should be applied to a field.\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        getFieldClass: function () {\r\n            return this.fieldClass;\r\n        },\r\n\r\n        /**\r\n         * Returns path to the columns' header template.\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getHeader: function () {\r\n            return this.headerTmpl;\r\n        },\r\n\r\n        /**\r\n         * Returns path to the columns' body template.\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getBody: function () {\r\n            return this.bodyTmpl;\r\n        },\r\n\r\n        /**\r\n         * Listener of the providers' sorting state changes.\r\n         *\r\n         * @param {Srting} field - Field by which current sorting is performed.\r\n         */\r\n        onSortChange: function (field) {\r\n            if (field !== this.index) {\r\n                this.sort(false);\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/columns/date.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'mageUtils',\r\n    'moment',\r\n    './column',\r\n    'underscore',\r\n    'moment-timezone-with-data'\r\n], function (utils, moment, Column, _) {\r\n    'use strict';\r\n\r\n    return Column.extend({\r\n        defaults: {\r\n            dateFormat: 'MMM d, YYYY h:mm:ss A',\r\n            calendarConfig: []\r\n        },\r\n\r\n        /**\r\n         * Overrides base method to normalize date format\r\n         *\r\n         * @returns {DateColumn} Chainable\r\n         */\r\n        initConfig: function () {\r\n            this._super();\r\n\r\n            this.dateFormat = utils.normalizeDate(this.dateFormat ? this.dateFormat : this.options.dateFormat);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Formats incoming date based on the 'dateFormat' property.\r\n         *\r\n         * @returns {String} Formatted date.\r\n         */\r\n        getLabel: function (value, format) {\r\n            var date;\r\n\r\n            if (this.storeLocale !== undefined) {\r\n                moment.locale(this.storeLocale, utils.extend({}, this.calendarConfig));\r\n            }\r\n\r\n            date = moment.utc(this._super());\r\n\r\n            if (!_.isUndefined(this.timezone) && moment.tz.zone(this.timezone) !== null) {\r\n                date = date.tz(this.timezone);\r\n            }\r\n\r\n            date = date.isValid() && value[this.index] ?\r\n                date.format(format || this.dateFormat) :\r\n                '';\r\n\r\n            return date;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/columns/expandable.js":"/**\r\n * Copyright \u00a9 2016 Magento. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    './column',\r\n    'underscore'\r\n], function (Column, _) {\r\n    'use strict';\r\n\r\n    return Column.extend({\r\n        defaults: {\r\n            bodyTmpl: 'ui/grid/cells/expandable',\r\n            tooltipTmpl: 'ui/grid/cells/expandable/content',\r\n            visibeItemsLimit: 5,\r\n            tooltipTitle: ''\r\n        },\r\n\r\n        /**\r\n         * Gets label from full options array.\r\n         *\r\n         * @param {Object} record - Record object.\r\n         * @returns {String}\r\n         */\r\n        getFullLabel: function (record) {\r\n            return this.getLabelsArray(record).join(', ');\r\n        },\r\n\r\n        /**\r\n         * Gets label from options array limited by 'visibeItemsLimit'.\r\n         *\r\n         * @param {Object} record - Record object.\r\n         * @returns {String}\r\n         */\r\n        getShortLabel: function (record) {\r\n            return this.getLabelsArray(record).slice(0, this.visibeItemsLimit).join(', ');\r\n        },\r\n\r\n        /**\r\n         * Extracts array of labels associated with provided values and sort it alphabetically.\r\n         *\r\n         * @param {Object} record - Record object.\r\n         * @returns {Array}\r\n         */\r\n        getLabelsArray: function (record) {\r\n            var values = this.getLabel(record),\r\n                options = this.options || [],\r\n                labels = [];\r\n\r\n            if (_.isString(values)) {\r\n                values = values.split(',');\r\n            }\r\n\r\n            if (!Array.isArray(values)) {\r\n                values = [values];\r\n            }\r\n\r\n            values = values.map(function (value) {\r\n                return value + '';\r\n            });\r\n\r\n            options = this.flatOptions(options);\r\n\r\n            options.forEach(function (item) {\r\n                if (_.contains(values, item.value + '')) {\r\n                    labels.push(item.label);\r\n                }\r\n            });\r\n\r\n            return labels.sort(\r\n                function (labelFirst, labelSecond) {\r\n                    return labelFirst.toLowerCase().localeCompare(labelSecond.toLowerCase());\r\n                }\r\n            );\r\n        },\r\n\r\n        /**\r\n         * Transformation tree options structure to liner array.\r\n         *\r\n         * @param {Array} options\r\n         * @returns {Array}\r\n         */\r\n        flatOptions: function (options) {\r\n            var self = this;\r\n\r\n            return options.reduce(function (opts, option) {\r\n                if (_.isArray(option.value)) {\r\n                    opts = opts.concat(self.flatOptions(option.value));\r\n                } else {\r\n                    opts.push(option);\r\n                }\r\n\r\n                return opts;\r\n            }, []);\r\n        },\r\n\r\n        /**\r\n         * Checks if amount of options is more than limit value.\r\n         *\r\n         * @param {Object} record - Data to be preprocessed.\r\n         * @returns {Boolean}\r\n         */\r\n        isExpandable: function (record) {\r\n            return this.getLabel(record).length > this.visibeItemsLimit;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/columns/image-preview.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/* eslint-disable no-undef */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'Magento_Ui/js/grid/columns/column',\r\n    'Magento_Ui/js/lib/key-codes'\r\n], function ($, _, Column, keyCodes) {\r\n    'use strict';\r\n\r\n    return Column.extend({\r\n        defaults: {\r\n            bodyTmpl: 'ui/grid/columns/image-preview',\r\n            previewImageSelector: '[data-image-preview]',\r\n            visibleRecord: null,\r\n            height: 0,\r\n            displayedRecord: {},\r\n            lastOpenedImage: false,\r\n            fields: {\r\n                previewUrl: 'preview_url',\r\n                title: 'title'\r\n            },\r\n            modules: {\r\n                masonry: '${ $.parentName }',\r\n                thumbnailComponent: '${ $.parentName }.thumbnail_url'\r\n            },\r\n            statefull: {\r\n                sorting: true,\r\n                lastOpenedImage: true\r\n            },\r\n            listens: {\r\n                '${ $.provider }:params.filters': 'hide',\r\n                '${ $.provider }:params.search': 'hide',\r\n                '${ $.provider }:params.paging': 'hide',\r\n                '${ $.provider }:data.items': 'updateDisplayedRecord'\r\n            },\r\n            exports: {\r\n                height: '${ $.parentName }.thumbnail_url:previewHeight'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initialize image preview component\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n            $(document).on('keydown', this.handleKeyDown.bind(this));\r\n\r\n            this.lastOpenedImage.subscribe(function (newValue) {\r\n\r\n                if (newValue === false && _.isNull(this.visibleRecord())) {\r\n                    return;\r\n                }\r\n\r\n                if (newValue === this.visibleRecord()) {\r\n                    return;\r\n                }\r\n\r\n                if (newValue === false) {\r\n                    this.hide();\r\n\r\n                    return;\r\n                }\r\n\r\n                this.show(this.masonry().rows()[newValue]);\r\n            }.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Init observable variables\r\n         * @return {Object}\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe([\r\n                    'visibleRecord',\r\n                    'height',\r\n                    'displayedRecord',\r\n                    'lastOpenedImage'\r\n                ]);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Next image preview\r\n         *\r\n         * @param {Object} record\r\n         */\r\n        next: function (record) {\r\n            var recordToShow;\r\n\r\n            if (record._rowIndex + 1 === this.masonry().rows().length) {\r\n                return;\r\n            }\r\n\r\n            recordToShow = this.getRecord(record._rowIndex + 1);\r\n            recordToShow.rowNumber = record.lastInRow ? record.rowNumber + 1 : record.rowNumber;\r\n            this.show(recordToShow);\r\n        },\r\n\r\n        /**\r\n         * Previous image preview\r\n         *\r\n         * @param {Object} record\r\n         */\r\n        prev: function (record) {\r\n            var recordToShow;\r\n\r\n            if (record._rowIndex === 0) {\r\n                return;\r\n            }\r\n            recordToShow = this.getRecord(record._rowIndex - 1);\r\n\r\n            recordToShow.rowNumber = record.firstInRow ? record.rowNumber - 1 : record.rowNumber;\r\n            this.show(recordToShow);\r\n        },\r\n\r\n        /**\r\n         * Get record\r\n         *\r\n         * @param {Integer} recordIndex\r\n         *\r\n         * @return {Object}\r\n         */\r\n        getRecord: function (recordIndex) {\r\n            return this.masonry().rows()[recordIndex];\r\n        },\r\n\r\n        /**\r\n         * Set selected row id\r\n         *\r\n         * @param {Number} rowId\r\n         * @private\r\n         */\r\n        _selectRow: function (rowId) {\r\n            this.thumbnailComponent().previewRowId(rowId);\r\n        },\r\n\r\n        /**\r\n         * Show image preview\r\n         *\r\n         * @param {Object} record\r\n         */\r\n        show: function (record) {\r\n            if (record._rowIndex === this.visibleRecord()) {\r\n                this.hide();\r\n\r\n                return;\r\n            }\r\n\r\n            this.hide();\r\n            this.displayedRecord(record);\r\n            this._selectRow(record.rowNumber || null);\r\n            this.visibleRecord(record._rowIndex);\r\n\r\n            this.lastOpenedImage(record._rowIndex);\r\n            this.updateImageData();\r\n        },\r\n\r\n        /**\r\n         * Update image data when image preview is opened\r\n         */\r\n        updateImageData: function () {\r\n            var img = $(this.previewImageSelector + ' img'), self;\r\n\r\n            if (!img.get(0)) {\r\n                setTimeout(function () {\r\n                    this.updateImageData();\r\n                }.bind(this), 100);\r\n            } else if (img.get(0).complete) {\r\n                this.updateHeight();\r\n                this.scrollToPreview();\r\n            } else {\r\n                self = this;\r\n\r\n                img.on('load', function () {\r\n                    self.updateHeight();\r\n                    self.scrollToPreview();\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update preview displayed record data from the new items data if the preview is expanded\r\n         *\r\n         * @param {Array} items\r\n         */\r\n        updateDisplayedRecord: function (items) {\r\n            if (!_.isNull(this.visibleRecord())) {\r\n                this.displayedRecord(items[this.visibleRecord()]);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update image preview section height\r\n         */\r\n        updateHeight: function () {\r\n            this.height($(this.previewImageSelector).height() + 'px');\r\n        },\r\n\r\n        /**\r\n         * Close image preview\r\n         */\r\n        hide: function () {\r\n            this.lastOpenedImage(false);\r\n            this.visibleRecord(null);\r\n            this.height(0);\r\n            this._selectRow(null);\r\n        },\r\n\r\n        /**\r\n         * Returns visibility for given record.\r\n         *\r\n         * @param {Object} record\r\n         * @return {*|bool}\r\n         */\r\n        isVisible: function (record) {\r\n            if (this.lastOpenedImage() === record._rowIndex &&\r\n                this.visibleRecord() === null\r\n            ) {\r\n                this.show(record);\r\n            }\r\n\r\n            return this.visibleRecord() === record._rowIndex || false;\r\n        },\r\n\r\n        /**\r\n         * Returns preview image url for a given record.\r\n         *\r\n         * @param {Object} record\r\n         * @return {String}\r\n         */\r\n        getUrl: function (record) {\r\n            return record[this.fields.previewUrl];\r\n        },\r\n\r\n        /**\r\n         * Returns image title for a given record.\r\n         *\r\n         * @param {Object} record\r\n         * @return {String}\r\n         */\r\n        getTitle: function (record) {\r\n            return record[this.fields.title];\r\n        },\r\n\r\n        /**\r\n         * Get styles for preview\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        getStyles: function () {\r\n            return {\r\n                'margin-top': '-' + this.height()\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Scroll to preview window\r\n         */\r\n        scrollToPreview: function () {\r\n            $(this.previewImageSelector).get(0).scrollIntoView({\r\n                behavior: 'smooth',\r\n                block: 'center',\r\n                inline: 'nearest'\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Handle keyboard navigation for image preview\r\n         *\r\n         * @param {Object} e\r\n         */\r\n        handleKeyDown: function (e) {\r\n            var key = keyCodes[e.keyCode];\r\n\r\n            if (this.visibleRecord() !== null && document.activeElement.tagName !== 'INPUT') {\r\n                if (key === 'pageLeftKey') {\r\n                    this.prev(this.displayedRecord());\r\n                } else if (key === 'pageRightKey') {\r\n                    this.next(this.displayedRecord());\r\n                }\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/columns/image.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/grid/columns/column'\r\n], function (Column) {\r\n    'use strict';\r\n\r\n    return Column.extend({\r\n        defaults: {\r\n            bodyTmpl: 'ui/grid/columns/image',\r\n            modules: {\r\n                masonry: '${ $.parentName }',\r\n                previewComponent: '${ $.parentName }.preview'\r\n            },\r\n            previewRowId: null,\r\n            previewHeight: 0,\r\n            fields: {\r\n                id: 'id',\r\n                url: 'url'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Init observable variables\r\n         * @return {Object}\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe([\r\n                    'previewRowId',\r\n                    'previewHeight'\r\n                ]);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Updates styles when image loaded.\r\n         *\r\n         * @param {Object} record\r\n         */\r\n        updateStyles: function (record) {\r\n            !record.lastInRow || this.masonry().updateStyles();\r\n        },\r\n\r\n        /**\r\n         * Returns url to given record.\r\n         *\r\n         * @param {Object} record - Data to be preprocessed.\r\n         * @returns {String}\r\n         */\r\n        getUrl: function (record) {\r\n            return record[this.fields.url];\r\n        },\r\n\r\n        /**\r\n         * Returns id to given record.\r\n         *\r\n         * @param {Object} record - Data to be preprocessed.\r\n         * @returns {Number}\r\n         */\r\n        getId: function (record) {\r\n            return record[this.fields.id];\r\n        },\r\n\r\n        /**\r\n         * Returns container styles to given record.\r\n         *\r\n         * @param {Object} record - Data to be preprocessed.\r\n         * @returns {Object}\r\n         */\r\n        getStyles: function (record) {\r\n            var styles = record.styles();\r\n\r\n            styles['margin-bottom'] = this.previewRowId() === record.rowNumber ? this.previewHeight : 0;\r\n            record.styles(styles);\r\n\r\n            return record.styles;\r\n        },\r\n\r\n        /**\r\n         * Returns class list to given record.\r\n         *\r\n         * @param {Object} record - Data to be preprocessed.\r\n         * @returns {Object}\r\n         */\r\n        getClasses: function (record) {\r\n            return record.css || {};\r\n        },\r\n\r\n        /**\r\n         * Get is active record\r\n         *\r\n         * @param {Object} record - Data to be preprocessed.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        getIsActive: function (record) {\r\n            return this.previewComponent().visibleRecord() === record._rowIndex || false;\r\n        },\r\n\r\n        /**\r\n         * Expand image preview\r\n         */\r\n        expandPreview: function (record) {\r\n            this.previewComponent().show(record);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/columns/link.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    './column',\r\n    'mageUtils'\r\n], function (Column, utils) {\r\n    'use strict';\r\n\r\n    return Column.extend({\r\n        defaults: {\r\n            link: 'link',\r\n            bodyTmpl: 'ui/grid/cells/link'\r\n        },\r\n\r\n        /**\r\n         * Returns link to given record.\r\n         *\r\n         * @param {Object} record - Data to be preprocessed.\r\n         * @returns {String}\r\n         */\r\n        getLink: function (record) {\r\n            return utils.nested(record, this.link);\r\n        },\r\n\r\n        /**\r\n         * Check if link parameter exist in record.\r\n         * @param {Object} record - Data to be preprocessed.\r\n         * @returns {Boolean}\r\n         */\r\n        isLink: function (record) {\r\n            return !!utils.nested(record, this.link);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/columns/multiselect.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mage/translate',\r\n    './column'\r\n], function (_, $t, Column) {\r\n    'use strict';\r\n\r\n    return Column.extend({\r\n        defaults: {\r\n            headerTmpl: 'ui/grid/columns/multiselect',\r\n            bodyTmpl: 'ui/grid/cells/multiselect',\r\n            controlVisibility: false,\r\n            sortable: false,\r\n            draggable: false,\r\n            menuVisible: false,\r\n            excludeMode: false,\r\n            allSelected: false,\r\n            indetermine: false,\r\n            preserveSelectionsOnFilter: false,\r\n            disabled: [],\r\n            selected: [],\r\n            excluded: [],\r\n            fieldClass: {\r\n                'data-grid-checkbox-cell': true\r\n            },\r\n            actions: [{\r\n                value: 'selectAll',\r\n                label: $t('Select All')\r\n            }, {\r\n                value: 'deselectAll',\r\n                label: $t('Deselect All')\r\n            }, {\r\n                value: 'selectPage',\r\n                label: $t('Select All on This Page')\r\n            }, {\r\n                value: 'deselectPage',\r\n                label: $t('Deselect All on This Page')\r\n            }],\r\n\r\n            imports: {\r\n                totalRecords: '${ $.provider }:data.totalRecords',\r\n                showTotalRecords: '${ $.provider }:data.showTotalRecords',\r\n                rows: '${ $.provider }:data.items'\r\n            },\r\n\r\n            listens: {\r\n                '${ $.provider }:params.filters': 'onFilter',\r\n                '${ $.provider }:params.search': 'onSearch',\r\n                selected: 'onSelectedChange',\r\n                rows: 'onRowsChange'\r\n            },\r\n\r\n            modules: {\r\n                source: '${ $.provider }'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties.\r\n         *\r\n         * @returns {Multiselect} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe([\r\n                    'disabled',\r\n                    'selected',\r\n                    'excluded',\r\n                    'excludeMode',\r\n                    'totalSelected',\r\n                    'allSelected',\r\n                    'indetermine',\r\n                    'totalRecords',\r\n                    'showTotalRecords',\r\n                    'rows'\r\n                ]);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Selects specified record.\r\n         *\r\n         * @param {*} id - See definition of 'getId' method.\r\n         * @param {Boolean} [isIndex=false] - See definition of 'getId' method.\r\n         * @returns {Multiselect} Chainable.\r\n         */\r\n        select: function (id, isIndex) {\r\n            this._setSelection(id, isIndex, true);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Deselects specified record.\r\n         *\r\n         * @param {*} id - See definition of 'getId' method.\r\n         * @param {Boolean} [isIndex=false] - See definition of 'getId' method.\r\n         * @returns {Multiselect} Chainable.\r\n         */\r\n        deselect: function (id, isIndex) {\r\n            this._setSelection(id, isIndex, false);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Toggles selection of a specified record.\r\n         *\r\n         * @param {*} id - See definition of 'getId' method.\r\n         * @param {Boolean} [isIndex=false] - See definition of 'getId' method.\r\n         * @returns {Multiselect} Chainable.\r\n         */\r\n        toggleSelect: function (id, isIndex) {\r\n            this._setSelection(id, isIndex, !this.isSelected(id, isIndex));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if specified record is selected.\r\n         *\r\n         * @param {*} id - See definition of 'getId' method.\r\n         * @param {Boolean} [isIndex=false] - See definition of 'getId' method.\r\n         * @returns {Boolean}\r\n         */\r\n        isSelected: function (id, isIndex) {\r\n            id = this.getId(id, isIndex);\r\n\r\n            return this.selected.contains(id);\r\n        },\r\n\r\n        /**\r\n         * Selects/deselects specified record base on a 'select' parameter value.\r\n         *\r\n         * @param {*} id - See definition of 'getId' method.\r\n         * @param {Boolean} [isIndex=false] - See definition of 'getId' method.\r\n         * @param {Boolean} select - Whether to select/deselect record.\r\n         * @returns {Multiselect} Chainable.\r\n         */\r\n        _setSelection: function (id, isIndex, select) {\r\n            var selected = this.selected;\r\n\r\n            id = this.getId(id, isIndex);\r\n\r\n            if (!select && this.isSelected(id)) {\r\n                selected.remove(id);\r\n            } else if (select) {\r\n                selected.push(id);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Selects all records, even those that\r\n         * are not visible on the page.\r\n         *\r\n         * @returns {Multiselect} Chainable.\r\n         */\r\n        selectAll: function () {\r\n            this.excludeMode(true);\r\n\r\n            this.clearExcluded()\r\n                .selectPage();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Deselects all records.\r\n         *\r\n         * @returns {Multiselect} Chainable.\r\n         */\r\n        deselectAll: function () {\r\n            this.excludeMode(false);\r\n\r\n            this.clearExcluded();\r\n            this.selected.removeAll();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Selects or deselects all records.\r\n         *\r\n         * @returns {Multiselect} Chainable.\r\n         */\r\n        toggleSelectAll: function () {\r\n            this.allSelected() ?\r\n                this.deselectAll() :\r\n                this.selectAll();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Selects all records on the current page.\r\n         *\r\n         * @returns {Multiselect} Chainable.\r\n         */\r\n        selectPage: function () {\r\n            var selected = _.union(this.selected(), this.getIds());\r\n\r\n            selected = _.difference(selected, this.disabled());\r\n\r\n            this.selected(selected);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Deselects all records on the current page.\r\n         *\r\n         * @returns {Multiselect} Chainable.\r\n         */\r\n        deselectPage: function () {\r\n            var pageIds = this.getIds();\r\n\r\n            this.selected.remove(function (value) {\r\n                return !!~pageIds.indexOf(value);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n        * Selects or deselects all records on the current page.\r\n        *\r\n        * @returns {Multiselect} Chainable.\r\n        */\r\n        togglePage: function () {\r\n            return this.isPageSelected() && !this.excluded().length ? this.deselectPage() : this.selectPage();\r\n        },\r\n\r\n        /**\r\n         * Clears the array of not selected records.\r\n         *\r\n         * @returns {Multiselect} Chainable.\r\n         */\r\n        clearExcluded: function () {\r\n            this.excluded.removeAll();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Retrieve all id's from available records.\r\n         *\r\n         * @param {Boolean} [exclude] - Whether to exclude not selected ids' from result.\r\n         * @returns {Array} An array of ids'.\r\n         */\r\n        getIds: function (exclude) {\r\n            var items = this.rows(),\r\n                ids = _.pluck(items, this.indexField);\r\n\r\n            return exclude ?\r\n                _.difference(ids, this.excluded()) :\r\n                ids;\r\n        },\r\n\r\n        /**\r\n         * Returns identifier of a record.\r\n         *\r\n         * @param {*} id - Id of a record or its' index in a rows array.\r\n         * @param {Boolean} [isIndex=false] - Flag that specifies with what\r\n         *      kind of identifier we are dealing with.\r\n         * @returns {*}\r\n         */\r\n        getId: function (id, isIndex) {\r\n            var record = this.rows()[id];\r\n\r\n            if (isIndex && record) {\r\n                id = record[this.indexField];\r\n            }\r\n\r\n            return id;\r\n        },\r\n\r\n        /**\r\n         * Recalculates list of the excluded records.\r\n         * Changes value of `excluded`.\r\n         *\r\n         * @param {Array} selected - List of the currently selected records.\r\n         * @returns {Multiselect} Chainable.\r\n         */\r\n        updateExcluded: function (selected) {\r\n            var excluded = this.excluded(),\r\n                fromPage = _.difference(this.getIds(), selected);\r\n\r\n            excluded = _.union(excluded, fromPage);\r\n            excluded = _.difference(excluded, selected);\r\n\r\n            this.excluded(excluded);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Calculates number of selected records and\r\n         * updates 'totalSelected' property.\r\n         *\r\n         * @returns {Multiselect} Chainable.\r\n         */\r\n        countSelected: function () {\r\n            var total = this.totalRecords(),\r\n                excluded = this.excluded().length,\r\n                selected = this.selected().length;\r\n\r\n            if (this.excludeMode()) {\r\n                selected = total - excluded;\r\n            }\r\n\r\n            this.totalSelected(selected);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Returns selected items on a current page.\r\n         *\r\n         * @returns {Array}\r\n         */\r\n        getPageSelections: function () {\r\n            var ids = this.getIds();\r\n\r\n            return this.selected.filter(function (id) {\r\n                return _.contains(ids, id);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Returns selections data.\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        getSelections: function () {\r\n            return {\r\n                excluded: this.excluded(),\r\n                selected: this.selected(),\r\n                total: this.totalSelected(),\r\n                showTotalRecords: this.showTotalRecords(),\r\n                excludeMode: this.excludeMode(),\r\n                params: this.getFiltering()\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Extracts filtering data from data provider.\r\n         *\r\n         * @returns {Object} Current filters state.\r\n         */\r\n        getFiltering: function () {\r\n            var source = this.source(),\r\n                keys = ['filters', 'search', 'namespace'];\r\n\r\n            if (!source) {\r\n                return {};\r\n            }\r\n\r\n            return _.pick(source.get('params'), keys);\r\n        },\r\n\r\n        /**\r\n         * Defines if provided select/deselect actions is relevant.\r\n         * E.g. there is no need in a 'select page' action if only one\r\n         * page is available.\r\n         *\r\n         * @param {String} actionId - Id of the action to be checked.\r\n         * @returns {Boolean}\r\n         */\r\n        isActionRelevant: function (actionId) {\r\n            var pageIds         = this.getIds().length,\r\n                multiplePages   = pageIds < this.totalRecords(),\r\n                relevant        = true;\r\n\r\n            switch (actionId) {\r\n                case 'selectPage':\r\n                    relevant = multiplePages && !this.isPageSelected(true);\r\n                    break;\r\n\r\n                case 'deselectPage':\r\n                    relevant =  multiplePages && this.isPageSelected();\r\n                    break;\r\n\r\n                case 'selectAll':\r\n                    relevant = !this.allSelected();\r\n                    break;\r\n\r\n                case 'deselectAll':\r\n                    relevant = this.totalSelected() > 0;\r\n            }\r\n\r\n            return relevant;\r\n        },\r\n\r\n        /**\r\n         * Checks if current page has selected records.\r\n         *\r\n         * @param {Boolean} [all=false] - If set to 'true' checks that every\r\n         *      record on the page is selected. Otherwise checks that\r\n         *      page has some selected records.\r\n         * @returns {Boolean}\r\n         */\r\n        isPageSelected: function (all) {\r\n            var pageIds = this.getIds(),\r\n                selected = this.selected(),\r\n                excluded = this.excluded(),\r\n                iterator = all ? 'every' : 'some';\r\n\r\n            if (this.allSelected()) {\r\n                return true;\r\n            }\r\n\r\n            if (this.excludeMode()) {\r\n                return pageIds[iterator](function (id) {\r\n                    return !~excluded.indexOf(id);\r\n                });\r\n            }\r\n\r\n            return pageIds[iterator](function (id) {\r\n                return !!~selected.indexOf(id);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Updates values of the 'allSelected'\r\n         * and 'indetermine' properties.\r\n         *\r\n         * @returns {Multiselect} Chainable.\r\n         */\r\n        updateState: function () {\r\n            var selected        = this.selected().length,\r\n                excluded        = this.excluded().length,\r\n                totalSelected   = this.totalSelected(),\r\n                totalRecords    = this.totalRecords(),\r\n                allSelected     = totalRecords && totalSelected === totalRecords;\r\n\r\n            if (this.excludeMode()) {\r\n                if (excluded === totalRecords && !this.preserveSelectionsOnFilter) {\r\n                    this.deselectAll();\r\n                }\r\n            } else if (totalRecords && selected === totalRecords && !this.preserveSelectionsOnFilter) {\r\n                this.selectAll();\r\n            }\r\n\r\n            this.allSelected(allSelected);\r\n            this.indetermine(totalSelected && !allSelected);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Overrides base method, because this component\r\n         * can't have global field action.\r\n         *\r\n         * @returns {Boolean} False.\r\n         */\r\n        hasFieldAction: function () {\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Callback method to handle changes of selected items.\r\n         *\r\n         * @param {Array} selected - An array of currently selected items.\r\n         */\r\n        onSelectedChange: function (selected) {\r\n            this.updateExcluded(selected)\r\n                .countSelected()\r\n                .updateState();\r\n        },\r\n\r\n        /**\r\n         * Is invoked when rows has changed. Recalculates selected items\r\n         * based on \"selectMode\" property.\r\n         */\r\n        onRowsChange: function () {\r\n            var newSelections;\r\n\r\n            if (this.excludeMode()) {\r\n                newSelections = _.union(this.getIds(true), this.selected());\r\n\r\n                this.selected(newSelections);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Is invoked when filtration is applied or removed\r\n         */\r\n        onFilter: function () {\r\n            if (!this.preserveSelectionsOnFilter) {\r\n                this.deselectAll();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Is invoked when search is applied or removed\r\n         */\r\n        onSearch: function () {\r\n            this.onFilter();\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/columns/onoff.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mage/translate',\r\n    './multiselect',\r\n    'uiRegistry'\r\n], function (_, $t, Column, registry) {\r\n    'use strict';\r\n\r\n    return Column.extend({\r\n        defaults: {\r\n            headerTmpl: 'ui/grid/columns/onoff',\r\n            bodyTmpl: 'ui/grid/cells/onoff',\r\n            fieldClass: {\r\n                'admin__scope-old': true,\r\n                'data-grid-onoff-cell': true,\r\n                'data-grid-checkbox-cell': false\r\n            },\r\n            imports: {\r\n                selectedData: '${ $.provider }:data.selectedData'\r\n            },\r\n            listens: {\r\n                '${ $.provider }:reloaded': 'setDefaultSelections'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {Number} id\r\n         * @returns {*}\r\n         */\r\n        getLabel: function (id) {\r\n            return this.selected.indexOf(id) !== -1 ? $t('On') : $t('Off');\r\n        },\r\n\r\n        /**\r\n         * Sets the ids for preselected elements\r\n         * @returns void\r\n         */\r\n        setDefaultSelections: function () {\r\n            var positionCacheValid = registry.get('position_cache_valid'),\r\n                selectedFromCache = registry.get('selected_cache'),\r\n                key,\r\n                i;\r\n\r\n            if (positionCacheValid && this.selected().length === 0) {\r\n                // Check selected data\r\n                selectedFromCache = JSON.parse(selectedFromCache);\r\n\r\n                for (i = 0; i < selectedFromCache.length; i++) {\r\n                    this.selected.push(selectedFromCache[i]);\r\n                }\r\n\r\n                registry.set('position_cache_valid', true);\r\n                registry.set('selected_cache', JSON.stringify(this.selected()));\r\n\r\n                return;\r\n            }\r\n\r\n            if (positionCacheValid && this.selected().length > 0) {\r\n                registry.set('position_cache_valid', true);\r\n                registry.set('selected_cache', JSON.stringify(this.selected()));\r\n\r\n                return;\r\n            }\r\n\r\n            if (this.selectedData.length === 0) {\r\n                registry.set('position_cache_valid', true);\r\n                registry.set('selected_cache', JSON.stringify([]));\r\n\r\n                return;\r\n            }\r\n\r\n            // Check selected data\r\n            for (key in this.selectedData) {\r\n                if (this.selectedData.hasOwnProperty(key) && this.selected().indexOf(key) === -1) {\r\n                    this.selected.push(key);\r\n                }\r\n            }\r\n            // Uncheck unselected data\r\n            for (i = 0; i < this.selected().length; i++) {\r\n                key = this.selected()[i];\r\n                this.selectedData.hasOwnProperty(key) || this.selected.splice(this.selected().indexOf(key), 1);\r\n                this.selectedData.hasOwnProperty(key) || i--;\r\n            }\r\n            registry.set('position_cache_valid', true);\r\n            registry.set('selected_cache', JSON.stringify(this.selected()));\r\n        },\r\n\r\n        /**\r\n         * Show/hide action in the massaction menu\r\n         * @param {Number} actionId\r\n         * @returns {Boolean}\r\n         */\r\n        isActionRelevant: function (actionId) {\r\n            var relevant = true;\r\n\r\n            switch (actionId) {\r\n                case 'selectPage':\r\n                    relevant = !this.isPageSelected(true);\r\n                    break;\r\n\r\n                case 'deselectPage':\r\n                    relevant =  this.isPageSelected();\r\n                    break;\r\n            }\r\n\r\n            return relevant;\r\n        },\r\n\r\n        /**\r\n         * Updates values of the 'allSelected'\r\n         * and 'indetermine' properties.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        updateState: function () {\r\n            var positionCacheValid = registry.get('position_cache_valid'),\r\n                totalRecords    = this.totalRecords(),\r\n                selected        = this.selected().length,\r\n                excluded        = this.excluded().length,\r\n                totalSelected   = this.totalSelected(),\r\n                allSelected;\r\n\r\n            if (positionCacheValid && this.selected().length > 0) {\r\n                registry.set('position_cache_valid', true);\r\n                registry.set('selected_cache', JSON.stringify(this.selected()));\r\n            }\r\n\r\n            // When filters are enabled then totalRecords is unknown\r\n            if (this.getFiltering()) {\r\n                if (this.getFiltering().search !== '') {\r\n                    totalRecords = -1;\r\n                }\r\n            }\r\n\r\n            allSelected = totalRecords && totalSelected === totalRecords;\r\n\r\n            if (this.excludeMode()) {\r\n                if (excluded === totalRecords) {\r\n                    this.deselectAll();\r\n                }\r\n            } else if (totalRecords && selected === totalRecords) {\r\n                this.selectAll();\r\n            }\r\n\r\n            this.allSelected(allSelected);\r\n            this.indetermine(totalSelected && !allSelected);\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/columns/overlay.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/grid/columns/column'\r\n], function (Column) {\r\n    'use strict';\r\n\r\n    return Column.extend({\r\n        defaults: {\r\n            bodyTmpl: 'ui/grid/columns/overlay'\r\n        },\r\n\r\n        /**\r\n         * If overlay should be visible\r\n         *\r\n         * @param {Object} row\r\n         * @returns {Boolean}\r\n         */\r\n        isVisible: function (row) {\r\n            return !!row[this.index];\r\n        },\r\n\r\n        /**\r\n         * Get overlay label\r\n         *\r\n         * @param {Object} row\r\n         * @returns {String}\r\n         */\r\n        getLabel: function (row) {\r\n            return row[this.index];\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/columns/select.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    './column'\r\n], function (_, Column) {\r\n    'use strict';\r\n\r\n    return Column.extend({\r\n        /**\r\n         * Retrieves label associated with a provided value.\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getLabel: function () {\r\n            var options = this.options || [],\r\n                values = this._super(),\r\n                label = [];\r\n\r\n            if (_.isString(values)) {\r\n                values = values.split(',');\r\n            }\r\n\r\n            if (!_.isArray(values)) {\r\n                values = [values];\r\n            }\r\n\r\n            values = values.map(function (value) {\r\n                return value + '';\r\n            });\r\n\r\n            options = this.flatOptions(options);\r\n\r\n            options.forEach(function (item) {\r\n                if (_.contains(values, item.value + '')) {\r\n                    label.push(item.label);\r\n                }\r\n            });\r\n\r\n            return label.join(', ');\r\n        },\r\n\r\n        /**\r\n         * Transformation tree options structure to liner array.\r\n         *\r\n         * @param {Array} options\r\n         * @returns {Array}\r\n         */\r\n        flatOptions: function (options) {\r\n            var self = this;\r\n\r\n            if (!_.isArray(options)) {\r\n                options = _.values(options);\r\n            }\r\n\r\n            return options.reduce(function (opts, option) {\r\n                if (_.isArray(option.value)) {\r\n                    opts = opts.concat(self.flatOptions(option.value));\r\n                } else {\r\n                    opts.push(option);\r\n                }\r\n\r\n                return opts;\r\n            }, []);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/columns/thumbnail.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    './column',\r\n    'jquery',\r\n    'mage/template',\r\n    'text!Magento_Ui/templates/grid/cells/thumbnail/preview.html',\r\n    'underscore',\r\n    'Magento_Ui/js/modal/modal',\r\n    'mage/translate'\r\n], function (Column, $, mageTemplate, thumbnailPreviewTemplate, _) {\r\n    'use strict';\r\n\r\n    return Column.extend({\r\n        defaults: {\r\n            bodyTmpl: 'ui/grid/cells/thumbnail',\r\n            fieldClass: {\r\n                'data-grid-thumbnail-cell': true\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get image source data per row.\r\n         *\r\n         * @param {Object} row\r\n         * @returns {String}\r\n         */\r\n        getSrc: function (row) {\r\n            return row[this.index + '_src'];\r\n        },\r\n\r\n        /**\r\n         * Get original image source data per row.\r\n         *\r\n         * @param {Object} row\r\n         * @returns {String}\r\n         */\r\n        getOrigSrc: function (row) {\r\n            return row[this.index + '_orig_src'];\r\n        },\r\n\r\n        /**\r\n         * Get link data per row.\r\n         *\r\n         * @param {Object} row\r\n         * @returns {String}\r\n         */\r\n        getLink: function (row) {\r\n            return row[this.index + '_link'];\r\n        },\r\n\r\n        /**\r\n         * Get alternative text data per row.\r\n         *\r\n         * @param {Object} row\r\n         * @returns {String}\r\n         */\r\n        getAlt: function (row) {\r\n            return _.escape(row[this.index + '_alt']);\r\n        },\r\n\r\n        /**\r\n         * Check if preview available.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        isPreviewAvailable: function () {\r\n            return this['has_preview'] || false;\r\n        },\r\n\r\n        /**\r\n         * Build preview.\r\n         *\r\n         * @param {Object} row\r\n         */\r\n        preview: function (row) {\r\n            var modalHtml = mageTemplate(\r\n                    thumbnailPreviewTemplate,\r\n                    {\r\n                        src: this.getOrigSrc(row), alt: this.getAlt(row), link: this.getLink(row),\r\n                        linkText: $.mage.__('Go to Details Page')\r\n                    }\r\n                ),\r\n                previewPopup = $('<div></div>').html(modalHtml);\r\n\r\n            previewPopup.modal({\r\n                title: this.getAlt(row),\r\n                innerScroll: true,\r\n                modalClass: '_image-box',\r\n                buttons: []\r\n            }).trigger('openModal');\r\n        },\r\n\r\n        /**\r\n         * Get field handler per row.\r\n         *\r\n         * @param {Object} row\r\n         * @returns {Function}\r\n         */\r\n        getFieldHandler: function (row) {\r\n            if (this.isPreviewAvailable()) {\r\n                return this.preview.bind(this, row);\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/controls/columns.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    'mage/translate',\r\n    'uiCollection'\r\n], function (_, utils, $t, Collection) {\r\n    'use strict';\r\n\r\n    return Collection.extend({\r\n        defaults: {\r\n            template: 'ui/grid/controls/columns',\r\n            minVisible: 1,\r\n            maxVisible: 30,\r\n            viewportSize: 18,\r\n            displayArea: 'dataGridActions',\r\n            columnsProvider: 'ns = ${ $.ns }, componentType = columns',\r\n            imports: {\r\n                addColumns: '${ $.columnsProvider }:elems'\r\n            },\r\n            templates: {\r\n                headerMsg: $t('${ $.visible } out of ${ $.total } visible')\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Resets columns visibility to theirs default state.\r\n         *\r\n         * @returns {Columns} Chainable.\r\n         */\r\n        reset: function () {\r\n            this.elems.each('applyState', 'default', 'visible');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Applies last saved state of columns visibility.\r\n         *\r\n         * @returns {Columns} Chainable.\r\n         */\r\n        cancel: function () {\r\n            this.elems.each('applyState', '', 'visible');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Adds columns whose visibility can be controlled to the component.\r\n         *\r\n         * @param {Array} columns - Elements array that will be added to component.\r\n         * @returns {Columns} Chainable.\r\n         */\r\n        addColumns: function (columns) {\r\n            columns = _.where(columns, {\r\n                controlVisibility: true\r\n            });\r\n\r\n            this.insertChild(columns);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Defines whether child elements array length\r\n         * is greater than the 'viewportSize' property.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        hasOverflow: function () {\r\n            return this.elems().length > this.viewportSize;\r\n        },\r\n\r\n        /**\r\n         * Helper, checks\r\n         *  - if less than one item choosen\r\n         *  - if more then viewportMaxSize choosen\r\n         *\r\n         * @param {Object} elem\r\n         * @returns {Boolean}\r\n         */\r\n        isDisabled: function (elem) {\r\n            var visible = this.countVisible();\r\n\r\n            return elem.visible ?\r\n                    visible === this.minVisible :\r\n                    visible === this.maxVisible;\r\n        },\r\n\r\n        /**\r\n         * Counts number of visible columns.\r\n         *\r\n         * @returns {Number}\r\n         */\r\n        countVisible: function () {\r\n            return this.elems.filter('visible').length;\r\n        },\r\n\r\n        /**\r\n         * Compile header message from headerMessage setting.\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getHeaderMessage: function () {\r\n            return utils.template(this.templates.headerMsg, {\r\n                visible: this.countVisible(),\r\n                total: this.elems().length\r\n            });\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/controls/bookmarks/bookmarks.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    'mage/translate',\r\n    'rjsResolver',\r\n    'uiLayout',\r\n    'uiCollection'\r\n], function (_, utils, $t, resolver, layout, Collection) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Removes 'current' namespace from a 'path' string.\r\n     *\r\n     * @param {String} path\r\n     * @returns {String} Path without namespace.\r\n     */\r\n    function removeStateNs(path) {\r\n        path = typeof path == 'string' ? path.split('.') : [];\r\n\r\n        if (path[0] === 'current') {\r\n            path.shift();\r\n        }\r\n\r\n        return path.join('.');\r\n    }\r\n\r\n    return Collection.extend({\r\n        defaults: {\r\n            template: 'ui/grid/controls/bookmarks/bookmarks',\r\n            viewTmpl: 'ui/grid/controls/bookmarks/view',\r\n            newViewLabel: $t('New View'),\r\n            defaultIndex: 'default',\r\n            activeIndex: 'default',\r\n            viewsArray: [],\r\n            storageConfig: {\r\n                provider: '${ $.storageConfig.name }',\r\n                name: '${ $.name }_storage',\r\n                component: 'Magento_Ui/js/grid/controls/bookmarks/storage'\r\n            },\r\n            views: {\r\n                default: {\r\n                    label: $t('Default View'),\r\n                    index: 'default',\r\n                    editable: false\r\n                }\r\n            },\r\n            tracks: {\r\n                editing: true,\r\n                viewsArray: true,\r\n                activeView: true,\r\n                hasChanges: true,\r\n                customLabel: true,\r\n                customVisible: true\r\n            },\r\n            listens: {\r\n                activeIndex: 'onActiveIndexChange',\r\n                activeView: 'checkState',\r\n                current: 'onStateChange'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes bookmarks component.\r\n         *\r\n         * @returns {Bookmarks} Chainable.\r\n         */\r\n        initialize: function () {\r\n            utils.limit(this, 'checkState', 5);\r\n            utils.limit(this, 'saveState', 2000);\r\n\r\n            this._super()\r\n                .restore()\r\n                .initStorage()\r\n                .initViews();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Creates custom storage instance.\r\n         *\r\n         * @returns {Bookmarks} Chainable.\r\n         */\r\n        initStorage: function () {\r\n            layout([this.storageConfig]);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Defines default data if it wasn't gathered previously.\r\n         *\r\n         * @private\r\n         * @returns {Bookmarks} Chainbale.\r\n         */\r\n        initDefaultView: function () {\r\n            var data = this.getViewData(this.defaultIndex);\r\n\r\n            if (!_.size(data) && (this.current.columns && this.current.positions)) {\r\n                    this.setViewData(this.defaultIndex, this.current)\r\n                        .saveView(this.defaultIndex);\r\n                    this.defaultDefined = true;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Creates instances of a previously saved views.\r\n         *\r\n         * @returns {Bookmarks} Chainable.\r\n         */\r\n        initViews: function () {\r\n            _.each(this.views, function (config) {\r\n                this.addView(config);\r\n            }, this);\r\n\r\n            this.activeView = this.getActiveView();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Creates complete configuration for a view.\r\n         *\r\n         * @param {Object} [config] - Additional configuration object.\r\n         * @returns {Object}\r\n         */\r\n        buildView: function (config) {\r\n            var view = {\r\n                label: this.newViewLabel,\r\n                index: '_' + Date.now(),\r\n                editable: true\r\n            };\r\n\r\n            utils.extend(view, config || {});\r\n\r\n            view.data   = view.data || utils.copy(this.current);\r\n            view.value  = view.label;\r\n\r\n            this.observe.call(view, true, 'label value');\r\n\r\n            return view;\r\n        },\r\n\r\n        /**\r\n         * Creates instance of a view with a provided configuration.\r\n         *\r\n         * @param {Object} [config] - View configuration.\r\n         * @param {Boolean} [saveView=false] - Whether to save created view automatically or not.\r\n         * @param {Boolean} [applyView=false] - Whether to apply created view automatically or not.\r\n         * @returns {View} Created view.\r\n         */\r\n        addView: function (config, saveView, applyView) {\r\n            var view    = this.buildView(config),\r\n                index   = view.index;\r\n\r\n            this.views[index] = view;\r\n\r\n            if (saveView) {\r\n                this.saveView(index);\r\n            }\r\n\r\n            if (applyView) {\r\n                this.applyView(index);\r\n            }\r\n\r\n            this.updateArray();\r\n\r\n            return view;\r\n        },\r\n\r\n        /**\r\n         * Removes specified view.\r\n         *\r\n         * @param {String} index - Index of a view to be removed.\r\n         * @returns {Bookmarks} Chainable.\r\n         */\r\n        removeView: function (index) {\r\n            var viewPath = this.getViewPath(index);\r\n\r\n            if (this.isViewActive(index)) {\r\n                this.applyView(this.defaultIndex);\r\n            }\r\n\r\n            this.endEdit(index)\r\n                .remove(viewPath)\r\n                .removeStored(viewPath)\r\n                .updateArray();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Saves data of a specified view.\r\n         *\r\n         * @param {String} index - Index of a view to be saved.\r\n         * @returns {Bookmarks} Chainable.\r\n         */\r\n        saveView: function (index) {\r\n            var viewPath = this.getViewPath(index);\r\n\r\n            this.updateViewLabel(index)\r\n                .endEdit(index)\r\n                .store(viewPath)\r\n                .checkState();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Sets specified view as active\r\n         * and applies its' state.\r\n         *\r\n         * @param {String} index - Index of a view to be applied.\r\n         * @returns {Bookmarks} Chainable.\r\n         */\r\n        applyView: function (index) {\r\n            this.applyStateOf(index)\r\n                .set('activeIndex', index);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Updates data of a specified view if it's\r\n         * currently active and saves its' data.\r\n         *\r\n         * @param {String} index - Index of a view.\r\n         * @returns {Bookmarks} Chainable.\r\n         */\r\n        updateAndSave: function (index) {\r\n            if (this.isViewActive(index)) {\r\n                this.updateActiveView(index);\r\n            }\r\n\r\n            this.saveView(index);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Returns instance of a specified view.\r\n         *\r\n         * @param {String} index - Index of a view to be retrieved.\r\n         * @returns {View}\r\n         */\r\n        getView: function (index) {\r\n            return this.views[index];\r\n        },\r\n\r\n        /**\r\n         * Returns instance of an active view.\r\n         *\r\n         * @returns {View}\r\n         */\r\n        getActiveView: function () {\r\n            return this.views[this.activeIndex];\r\n        },\r\n\r\n        /**\r\n         * Checks if specified view is active.\r\n         *\r\n         * @param {String} index - Index of a view to be checked.\r\n         * @returns {Boolean}\r\n         */\r\n        isViewActive: function (index) {\r\n            return this.activeView === this.getView(index);\r\n        },\r\n\r\n        /**\r\n         * Sets current state as a data of an active view.\r\n         *\r\n         * @returns {Bookmarks} Chainable.\r\n         */\r\n        updateActiveView: function () {\r\n            this.setViewData(this.activeIndex, this.current);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Replaces label a view with a provided one.\r\n         * If new label is not specified, then views'\r\n         * 'value' property will be taken.\r\n         *\r\n         * @param {String} index - Index of a view.\r\n         * @param {String} [label=view.value] - New labels' value.\r\n         * @returns {Bookmarks} Chainable.\r\n         */\r\n        updateViewLabel: function (index, label) {\r\n            var view    = this.getView(index),\r\n                current = view.label;\r\n\r\n            label = (label || view.value).trim() || current;\r\n            label = this.uniqueLabel(label, current);\r\n\r\n            view.label = view.value = label;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Retrieves data of a specified view.\r\n         *\r\n         * @param {String} index - Index of a view whose data should be retrieved.\r\n         * @param {String} [property] - If not specified then whole views' data will be retrieved.\r\n         * @returns {Object} Views' data.\r\n         */\r\n        getViewData: function (index, property) {\r\n            var view = this.getView(index),\r\n                data = view.data;\r\n\r\n            if (property) {\r\n                data = utils.nested(data, property);\r\n            }\r\n\r\n            return utils.copy(data);\r\n        },\r\n\r\n        /**\r\n         * Sets data to the specified view.\r\n         *\r\n         * @param {String} index - Index of a view whose data will be replaced.\r\n         * @param {Object} data - New view data.\r\n         * @returns {Bookmarks} Chainable.\r\n         */\r\n        setViewData: function (index, data) {\r\n            var path = this.getViewPath(index) + '.data';\r\n\r\n            this.set(path, utils.copy(data));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Starts editing of a specified view.\r\n         *\r\n         * @param {String} index - Index of a view.\r\n         * @returns {Bookmarks} Chainable.\r\n         */\r\n        editView: function (index) {\r\n            this.editing = index;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Ends editing of specified view\r\n         * and restores its' label.\r\n         *\r\n         * @param {String} index - Index of a view.\r\n         * @returns {Bookmarks} Chainable.\r\n         */\r\n        endEdit: function (index) {\r\n            var view;\r\n\r\n            if (!this.isEditing(index)) {\r\n                return this;\r\n            }\r\n\r\n            index   = index || this.editing;\r\n            view    = this.getView(index);\r\n\r\n            view.value = view.label;\r\n\r\n            this.editing = false;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if specified view is in editing state.\r\n         *\r\n         * @param {String} index - Index of a view to be checked.\r\n         * @returns {Boolean}\r\n         */\r\n        isEditing: function (index) {\r\n            return this.editing === index;\r\n        },\r\n\r\n        /**\r\n         * Generates label unique among present views, based\r\n         * on the incoming label pattern.\r\n         *\r\n         * @param {String} [label=this.newViewLabel] - Label pattern.\r\n         * @param {String} [exclude]\r\n         * @returns {String}\r\n         */\r\n        uniqueLabel: function (label, exclude) {\r\n            var labels      = _.pluck(this.views, 'label'),\r\n                hasParenth  = _.last(label) === ')',\r\n                index       = 2,\r\n                result,\r\n                suffix;\r\n\r\n            labels = _.without(labels, exclude);\r\n            result = label = label || this.newViewLabel;\r\n\r\n            for (index = 2; _.contains(labels, result); index++) {\r\n                suffix = '(' + index + ')';\r\n\r\n                if (!hasParenth) {\r\n                    suffix = ' ' + suffix;\r\n                }\r\n\r\n                result = label + suffix;\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Applies state of a specified view, without\r\n         * making it active.\r\n         *\r\n         * @param {String} [state=this.activeIndex]\r\n         * @param {String} [property]\r\n         * @returns {Bookmarks} Chainable.\r\n         */\r\n        applyStateOf: function (state, property) {\r\n            var index    = state || this.activeIndex,\r\n                dataPath = removeStateNs(property),\r\n                viewData = this.getViewData(index, dataPath);\r\n\r\n            dataPath = dataPath ?\r\n                'current.' + dataPath :\r\n                'current';\r\n\r\n            this.set(dataPath, viewData);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Saves current state.\r\n         *\r\n         * @returns {Bookmarks} Chainable.\r\n         */\r\n        saveState: function () {\r\n            this.store('current');\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Applies state of an active view.\r\n         *\r\n         * @returns {Bookmarks} Chainable.\r\n         */\r\n        resetState: function () {\r\n            this.applyStateOf(this.activeIndex);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if current state is different\r\n         * from the state of an active view.\r\n         *\r\n         * @returns {Bookmarks} Chainable.\r\n         */\r\n        checkState: function () {\r\n            var viewData = this.getViewData(this.activeIndex),\r\n                diff     = utils.compare(viewData, this.current);\r\n\r\n            this.hasChanges = !diff.equal;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Returns path to the view instance,\r\n         * based on a provided index.\r\n         *\r\n         * @param {String} index - Index of a view.\r\n         * @returns {String}\r\n         */\r\n        getViewPath: function (index) {\r\n            return 'views.' + index;\r\n        },\r\n\r\n        /**\r\n         * Updates the array of views.\r\n         *\r\n         * @returns {Bookmarks} Chainable\r\n         */\r\n        updateArray: function () {\r\n            this.viewsArray = _.values(this.views);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Shows custom view field and creates unique label for it.\r\n         *\r\n         * @returns {Bookmarks} Chainable.\r\n         */\r\n        showCustom: function () {\r\n            this.customLabel    = this.uniqueLabel();\r\n            this.customVisible  = true;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Hides custom view field.\r\n         *\r\n         * @returns {Bookmarks} Chainable.\r\n         */\r\n        hideCustom: function () {\r\n            this.customVisible = false;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if custom view field is visible.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        isCustomVisible: function () {\r\n            return this.customVisible;\r\n        },\r\n\r\n        /**\r\n         * Creates new view instance with a label specified\r\n         * in a custom view field.\r\n         *\r\n         * @returns {Bookmarks} Chainable.\r\n         */\r\n        applyCustom: function () {\r\n            var label = this.customLabel.trim();\r\n\r\n            this.hideCustom()\r\n                .addView({\r\n                    label: this.uniqueLabel(label)\r\n                }, true, true);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Listener of the activeIndex property.\r\n         */\r\n        onActiveIndexChange: function () {\r\n            this.activeView = this.getActiveView();\r\n            this.updateActiveView();\r\n            this.store('activeIndex');\r\n        },\r\n\r\n        /**\r\n         * Listener of the activeIndex property.\r\n         */\r\n        onStateChange: function () {\r\n            this.checkState();\r\n            this.saveState();\r\n\r\n            if (!this.defaultDefined) {\r\n                resolver(this.initDefaultView, this);\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/controls/bookmarks/storage.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'mageUtils',\r\n    'Magento_Ui/js/lib/core/storage/local',\r\n    'uiClass'\r\n], function ($, utils, storage, Class) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Removes ns prefix for path.\r\n     *\r\n     * @param {String} ns\r\n     * @param {String} path\r\n     * @returns {String}\r\n     */\r\n    function removeNs(ns, path) {\r\n        return path.replace(ns + '.', '');\r\n    }\r\n\r\n    return Class.extend({\r\n        defaults: {\r\n            ajaxSettings: {\r\n                method: 'POST',\r\n                data: {\r\n                    namespace: '${ $.namespace }'\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Delegates call to the localStorage adapter.\r\n         */\r\n        get: function () {\r\n            return {};\r\n        },\r\n\r\n        /**\r\n         * Sends request to store specified data.\r\n         *\r\n         * @param {String} path - Path by which data should be stored.\r\n         * @param {*} value - Value to be sent.\r\n         */\r\n        set: function (path, value) {\r\n            var property = removeNs(this.namespace, path),\r\n                data = {},\r\n                config;\r\n\r\n            utils.nested(data, property, value);\r\n\r\n            config = utils.extend({\r\n                url: this.saveUrl,\r\n                data: {\r\n                    data: JSON.stringify(data)\r\n                }\r\n            }, this.ajaxSettings);\r\n\r\n            $.ajax(config);\r\n        },\r\n\r\n        /**\r\n         * Sends request to remove specified data.\r\n         *\r\n         * @param {String} path - Path to the property to be removed.\r\n         */\r\n        remove: function (path) {\r\n            var property = removeNs(this.namespace, path),\r\n                config;\r\n\r\n            config = utils.extend({\r\n                url: this.deleteUrl,\r\n                data: {\r\n                    data: property\r\n                }\r\n            }, this.ajaxSettings);\r\n\r\n            $.ajax(config);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/controls/button/split.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    return function (data, element) {\r\n\r\n        $(element).on('click.splitDefault', '.action-default', function () {\r\n            $(this).siblings('.dropdown-menu').find('.item-default').trigger('click');\r\n        });\r\n    };\r\n});\r\n","Magento_Ui/js/grid/editing/bulk.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    './record'\r\n], function (_, utils, Record) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Removes empty properties from the provided object.\r\n     *\r\n     * @param {Object} data - Object to be processed.\r\n     * @returns {Object}\r\n     */\r\n    function removeEmpty(data) {\r\n        data = utils.flatten(data);\r\n        data = _.omit(data, utils.isEmpty);\r\n\r\n        return utils.unflatten(data);\r\n    }\r\n\r\n    return Record.extend({\r\n        defaults: {\r\n            template: 'ui/grid/editing/bulk',\r\n            active: false,\r\n            templates: {\r\n                fields: {\r\n                    select: {\r\n                        caption: ' '\r\n                    }\r\n                }\r\n            },\r\n            imports: {\r\n                active: '${ $.editorProvider }:isMultiEditing'\r\n            },\r\n            listens: {\r\n                data: 'updateState',\r\n                active: 'updateState'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties.\r\n         *\r\n         * @returns {Bulk} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .track({\r\n                    hasData: false\r\n                });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Extends original method to disable possible\r\n         * 'required-entry' validation rule.\r\n         *\r\n         * @returns {Object} Columns' field definition.\r\n         */\r\n        buildField: function () {\r\n            var field = this._super(),\r\n                rules = field.validation;\r\n\r\n            if (rules) {\r\n                delete rules['required-entry'];\r\n            }\r\n\r\n            return field;\r\n        },\r\n\r\n        /**\r\n         * Applies current data to all active records.\r\n         *\r\n         * @returns {Bulk} Chainable.\r\n         */\r\n        apply: function () {\r\n            if (this.isValid()) {\r\n                this.applyData()\r\n                    .clear();\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Sets available data to all active records.\r\n         *\r\n         * @param {Object} [data] -  If not specified, then current fields data will be used.\r\n         * @returns {Bulk} Chainable.\r\n         */\r\n        applyData: function (data) {\r\n            data = data || this.getData();\r\n\r\n            this.editor('setData', data, true);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Returns data of all non-empty fields.\r\n         *\r\n         * @returns {Object} Fields data without empty values.\r\n         */\r\n        getData: function () {\r\n            return removeEmpty(this._super());\r\n        },\r\n\r\n        /**\r\n         * Updates own 'hasData' property and defines\r\n         * whether regular rows editing can be resumed.\r\n         *\r\n         * @returns {Bulk} Chainable.\r\n         */\r\n        updateState: function () {\r\n            var fields  = _.keys(this.getData()),\r\n                hasData = !!fields.length;\r\n\r\n            this.hasData = hasData;\r\n\r\n            if (!this.active()) {\r\n                fields = [];\r\n            }\r\n\r\n            this.editor('disableFields', fields);\r\n            this.editor('canSave', !fields.length);\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/editing/client.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mageUtils',\r\n    'uiClass'\r\n], function ($, _, utils, Class) {\r\n    'use strict';\r\n\r\n    return Class.extend({\r\n        defaults: {\r\n            validateBeforeSave: true,\r\n            requestConfig: {\r\n                dataType: 'json',\r\n                type: 'POST'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes client instance.\r\n         *\r\n         * @returns {Client} Chainable.\r\n         */\r\n        initialize: function () {\r\n            _.bindAll(this, 'onSuccess', 'onError');\r\n\r\n            return this._super();\r\n        },\r\n\r\n        /**\r\n         * Sends XMLHttpRequest with a provided configuration.\r\n         *\r\n         * @param {Object} config - Configuration of request.\r\n         * @returns {jQueryPromise}\r\n         */\r\n        send: function (config) {\r\n            var deffer  = $.Deferred();\r\n\r\n            config = utils.extend({}, this.requestConfig, config);\r\n\r\n            $.ajax(config)\r\n                .done(_.partial(this.onSuccess, deffer))\r\n                .fail(_.partial(this.onError, deffer));\r\n\r\n            return deffer.promise();\r\n        },\r\n\r\n        /**\r\n         * Proxy save method which might invoke\r\n         * data validation prior to its' saving.\r\n         *\r\n         * @param {Object} data - Data to be processed.\r\n         * @returns {jQueryPromise}\r\n         */\r\n        save: function (data) {\r\n            var save = this._save.bind(this, data);\r\n\r\n            return this.validateBeforeSave ?\r\n                this.validate(data).pipe(save) :\r\n                save();\r\n        },\r\n\r\n        /**\r\n         * Sends request to validate provided data.\r\n         *\r\n         * @param {Object} data - Data to be validated.\r\n         * @returns {jQueryPromise}\r\n         */\r\n        validate: function (data) {\r\n            return this.send({\r\n                url: this.validateUrl,\r\n                data: data\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Sends request to save provided data.\r\n         *\r\n         * @private\r\n         * @param {Object} data - Data to be validated.\r\n         * @returns {jQueryPromise}\r\n         */\r\n        _save: function (data) {\r\n            return this.send({\r\n                url: this.saveUrl,\r\n                data: data\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Creates error object with a provided message.\r\n         *\r\n         * @param {String} msg - Errors' message.\r\n         * @returns {Object}\r\n         */\r\n        createError: function (msg) {\r\n            return {\r\n                type: 'error',\r\n                message: msg\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Handles ajax error callback.\r\n         *\r\n         * @param {jQueryPromise} promise - Promise to be rejected.\r\n         * @param {jQueryXHR} xhr - See 'jquery' ajax error callback.\r\n         * @param {String} status - See 'jquery' ajax error callback.\r\n         * @param {(String|Object)} err - See 'jquery' ajax error callback.\r\n         */\r\n        onError: function (promise, xhr, status, err) {\r\n            var msg;\r\n\r\n            msg = xhr.status !== 200 ?\r\n                xhr.status + ' (' + xhr.statusText + ')' :\r\n                err;\r\n\r\n            promise.reject(this.createError(msg));\r\n        },\r\n\r\n        /**\r\n         * Handles ajax success callback.\r\n         *\r\n         * @param {jQueryPromise} promise - Promise to be resolved.\r\n         * @param {*} data - See 'jquery' ajax success callback.\r\n         */\r\n        onSuccess: function (promise, data) {\r\n            var errors;\r\n\r\n            if (data.error) {\r\n                errors = _.map(data.messages, this.createError, this);\r\n\r\n                promise.reject(errors);\r\n            } else {\r\n                promise.resolve(data);\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/editing/editor-view.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'ko',\r\n    'Magento_Ui/js/lib/view/utils/async',\r\n    'underscore',\r\n    'uiRegistry',\r\n    'uiClass'\r\n], function (ko, $, _, registry, Class) {\r\n    'use strict';\r\n\r\n    return Class.extend({\r\n        defaults: {\r\n            rootSelector: '${ $.columnsProvider }:.admin__data-grid-wrap',\r\n            tableSelector: '${ $.rootSelector } -> table',\r\n            rowSelector: '${ $.tableSelector } tbody tr.data-row',\r\n            headerButtonsTmpl:\r\n                '<!-- ko template: headerButtonsTmpl --><!-- /ko -->',\r\n            bulkTmpl:\r\n                '<!-- ko scope: bulk -->' +\r\n                    '<!-- ko template: getTemplate() --><!-- /ko -->' +\r\n                '<!-- /ko -->',\r\n            rowTmpl:\r\n                '<!-- ko with: _editor -->' +\r\n                    '<!-- ko if: isActive($row()._rowIndex, true) -->' +\r\n                        '<!-- ko with: getRecord($row()._rowIndex, true) -->' +\r\n                            '<!-- ko template: rowTmpl --><!-- /ko -->' +\r\n                        '<!-- /ko -->' +\r\n                        '<!-- ko if: isSingleEditing && singleEditingButtons -->' +\r\n                            '<!-- ko template: rowButtonsTmpl --><!-- /ko -->' +\r\n                        '<!-- /ko -->' +\r\n                    '<!-- /ko -->' +\r\n               '<!-- /ko -->'\r\n        },\r\n\r\n        /**\r\n         * Initializes view component.\r\n         *\r\n         * @returns {View} Chainable.\r\n         */\r\n        initialize: function () {\r\n            _.bindAll(\r\n                this,\r\n                'initRoot',\r\n                'initTable',\r\n                'initRow',\r\n                'rowBindings',\r\n                'tableBindings'\r\n            );\r\n\r\n            this._super();\r\n\r\n            this.model = registry.get(this.model);\r\n\r\n            $.async(this.rootSelector, this.initRoot);\r\n            $.async(this.tableSelector, this.initTable);\r\n            $.async(this.rowSelector, this.initRow);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes columns root container.\r\n         *\r\n         * @param {HTMLElement} node\r\n         * @returns {View} Chainable.\r\n         */\r\n        initRoot: function (node) {\r\n            $(this.headerButtonsTmpl)\r\n                .insertBefore(node)\r\n                .applyBindings(this.model);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes table element.\r\n         *\r\n         * @param {HTMLTableElement} table\r\n         * @returns {View} Chainable.\r\n         */\r\n        initTable: function (table) {\r\n            $(table).bindings(this.tableBindings);\r\n\r\n            this.initBulk(table);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes bulk editor element\r\n         * for the provided table.\r\n         *\r\n         * @param {HTMLTableElement} table\r\n         * @returns {View} Chainable.\r\n         */\r\n        initBulk: function (table) {\r\n            var tableBody = $('tbody', table)[0];\r\n\r\n            $(this.bulkTmpl)\r\n                .prependTo(tableBody)\r\n                .applyBindings(this.model);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes table row.\r\n         *\r\n         * @param {HTMLTableRowElement} row\r\n         * @returns {View} Chainable.\r\n         */\r\n        initRow: function (row) {\r\n            var $editingRow;\r\n\r\n            $(row).extendCtx({\r\n                    _editor: this.model\r\n                }).bindings(this.rowBindings);\r\n\r\n            $editingRow = $(this.rowTmpl)\r\n                .insertBefore(row)\r\n                .applyBindings(row);\r\n\r\n            ko.utils.domNodeDisposal.addDisposeCallback(row, this.removeEditingRow.bind(this, $editingRow));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Returns row bindings.\r\n         *\r\n         * @param {Object} ctx - Current context of a row.\r\n         * @returns {Object}\r\n         */\r\n        rowBindings: function (ctx) {\r\n            var model = this.model;\r\n\r\n            return {\r\n                visible: ko.computed(function () {\r\n                    var record = ctx.$row(),\r\n                        index = record && record._rowIndex;\r\n\r\n                    return !model.isActive(index, true);\r\n                })\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Returns table bindings.\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        tableBindings: function () {\r\n            var model = this.model;\r\n\r\n            return {\r\n                css: {\r\n                    '_in-edit': ko.computed(function () {\r\n                        return model.hasActive() && !model.permanentlyActive;\r\n                    })\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Removes specified array of nodes.\r\n         *\r\n         * @param {ArrayLike} row\r\n         */\r\n        removeEditingRow: function (row) {\r\n            _.toArray(row).forEach(ko.removeNode);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/editing/editor.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    'uiLayout',\r\n    'mage/translate',\r\n    'uiCollection'\r\n], function (_, utils, layout, $t, Collection) {\r\n    'use strict';\r\n\r\n    return Collection.extend({\r\n        defaults: {\r\n            rowButtonsTmpl: 'ui/grid/editing/row-buttons',\r\n            headerButtonsTmpl: 'ui/grid/editing/header-buttons',\r\n            successMsg: $t('You have successfully saved your edits.'),\r\n            errorsCount: 0,\r\n            bulkEnabled: true,\r\n            multiEditingButtons: true,\r\n            singleEditingButtons: true,\r\n            isMultiEditing: false,\r\n            isSingleEditing: false,\r\n            permanentlyActive: false,\r\n            rowsData: [],\r\n            fields: {},\r\n\r\n            templates: {\r\n                record: {\r\n                    parent: '${ $.$data.editor.name }',\r\n                    name: '${ $.$data.recordId }',\r\n                    component: 'Magento_Ui/js/grid/editing/record',\r\n                    columnsProvider: '${ $.$data.editor.columnsProvider }',\r\n                    editorProvider: '${ $.$data.editor.name }',\r\n                    preserveFields: {\r\n                        '${ $.$data.editor.indexField }': true\r\n                    }\r\n                }\r\n            },\r\n            bulkConfig: {\r\n                component: 'Magento_Ui/js/grid/editing/bulk',\r\n                name: '${ $.name }_bulk',\r\n                editorProvider: '${ $.name }',\r\n                columnsProvider: '${ $.columnsProvider }'\r\n            },\r\n            clientConfig: {\r\n                component: 'Magento_Ui/js/grid/editing/client',\r\n                name: '${ $.name }_client'\r\n            },\r\n            viewConfig: {\r\n                component: 'Magento_Ui/js/grid/editing/editor-view',\r\n                name: '${ $.name }_view',\r\n                model: '${ $.name }',\r\n                columnsProvider: '${ $.columnsProvider }'\r\n            },\r\n            imports: {\r\n                rowsData: '${ $.dataProvider }:data.items'\r\n            },\r\n            listens: {\r\n                '${ $.dataProvider }:reloaded': 'cancel',\r\n                '${ $.selectProvider }:selected': 'onSelectionsChange'\r\n            },\r\n            modules: {\r\n                source: '${ $.dataProvider }',\r\n                client: '${ $.clientConfig.name }',\r\n                columns: '${ $.columnsProvider }',\r\n                bulk: '${ $.bulkConfig.name }',\r\n                selections: '${ $.selectProvider }'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes editor component.\r\n         *\r\n         * @returns {Editor} Chainable.\r\n         */\r\n        initialize: function () {\r\n            _.bindAll(this, 'updateState', 'countErrors', 'onDataSaved', 'onSaveError');\r\n\r\n            this._super()\r\n                .initBulk()\r\n                .initClient()\r\n                .initView();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties.\r\n         *\r\n         * @returns {Editor} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .track([\r\n                    'errorsCount',\r\n                    'isMultiEditing',\r\n                    'isSingleEditing',\r\n                    'isSingleColumnEditing',\r\n                    'changed'\r\n                ])\r\n                .observe({\r\n                    canSave: true,\r\n                    activeRecords: [],\r\n                    messages: []\r\n                });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes bulk editing component.\r\n         *\r\n         * @returns {Editor} Chainable.\r\n         */\r\n        initBulk: function () {\r\n            if (this.bulkEnabled) {\r\n                layout([this.bulkConfig]);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes editors' view component.\r\n         *\r\n         * @returns {Editor} Chainable.\r\n         */\r\n        initView: function () {\r\n            layout([this.viewConfig]);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes client component.\r\n         *\r\n         * @returns {Editor} Chainable.\r\n         */\r\n        initClient: function () {\r\n            layout([this.clientConfig]);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Creates instance of a new record.\r\n         *\r\n         * @param {(Number|String)} id - See 'getId' method.\r\n         * @param {Boolean} [isIndex=false] - See 'getId' method.\r\n         * @returns {Editor} Chainable.\r\n         */\r\n        initRecord: function (id, isIndex) {\r\n            var record = this.buildRecord(id, isIndex);\r\n\r\n            layout([record]);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Adds listeners on a new record.\r\n         *\r\n         * @param {Record} record\r\n         * @returns {Editor} Chainable.\r\n         */\r\n        initElement: function (record) {\r\n            record.on({\r\n                'active': this.updateState,\r\n                'errorsCount': this.countErrors\r\n            });\r\n\r\n            this.updateState();\r\n\r\n            return this._super();\r\n        },\r\n\r\n        /**\r\n         * Creates configuration for a new record associated with a row data.\r\n         *\r\n         * @param {(Number|String)} id - See 'getId' method.\r\n         * @param {Boolean} [isIndex=false] - See 'getId' method.\r\n         * @returns {Object} Record configuration.\r\n         */\r\n        buildRecord: function (id, isIndex) {\r\n            var recordId = this.getId(id, isIndex),\r\n                recordTmpl = this.templates.record,\r\n                record;\r\n\r\n            if (this.getRecord(recordId)) {\r\n                return this;\r\n            }\r\n\r\n            record = utils.template(recordTmpl, {\r\n                editor: this,\r\n                recordId: id\r\n            });\r\n\r\n            record.recordId = id;\r\n            record.data     = this.getRowData(id);\r\n\r\n            return record;\r\n        },\r\n\r\n        /**\r\n         * Starts editing of a specified record. If records'\r\n         * instance doesn't exist, than it will be created.\r\n         *\r\n         * @param {(Number|String)} id - See 'getId' method.\r\n         * @param {Boolean} [isIndex=false] - See 'getId' method.\r\n         * @returns {Editor} Chainable.\r\n         */\r\n        edit: function (id, isIndex) {\r\n            var recordId = this.getId(id, isIndex),\r\n                record   = this.getRecord(recordId);\r\n\r\n            record ?\r\n                record.active(true) :\r\n                this.initRecord(recordId);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Drops list of selections while activating only the specified record.\r\n         *\r\n         * @param {(Number|String)} id - See 'getId' method.\r\n         * @param {Boolean} [isIndex=false] - See 'getId' method.\r\n         * @returns {Editor} Chainable.\r\n         */\r\n        startEdit: function (id, isIndex) {\r\n            var recordId = this.getId(id, isIndex);\r\n\r\n            this.selections()\r\n                .deselectAll()\r\n                .select(recordId);\r\n\r\n            return this.edit(recordId);\r\n        },\r\n\r\n        /**\r\n         * Hides records and resets theirs data.\r\n         *\r\n         * @returns {Editor} Chainable.\r\n         */\r\n        cancel: function () {\r\n            this.reset()\r\n                .hide()\r\n                .clearMessages()\r\n                .bulk('clear');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Hides records.\r\n         *\r\n         * @returns {Editor} Chainable.\r\n         */\r\n        hide: function () {\r\n            this.activeRecords.each('active', false);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Resets active records.\r\n         *\r\n         * @returns {Editor} Chainable.\r\n         */\r\n        reset: function () {\r\n            this.elems.each(function (record) {\r\n                this.resetRecord(record.recordId);\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Validates and saves data of active records.\r\n         *\r\n         * @returns {Editor} Chainable.\r\n         */\r\n        save: function () {\r\n            var data;\r\n\r\n            if (!this.isValid()) {\r\n                return this;\r\n            }\r\n\r\n            data = {\r\n                items: this.getData()\r\n            };\r\n\r\n            this.clearMessages()\r\n                .columns('showLoader');\r\n\r\n            this.client()\r\n                .save(data)\r\n                .done(this.onDataSaved)\r\n                .fail(this.onSaveError);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Validates all active records.\r\n         *\r\n         * @returns {Array} An array of records and theirs validation results.\r\n         */\r\n        validate: function () {\r\n            return this.activeRecords.map(function (record) {\r\n                return {\r\n                    target: record,\r\n                    valid: record.isValid()\r\n                };\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Checks if all active records are valid.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        isValid: function () {\r\n            return _.every(this.validate(), 'valid');\r\n        },\r\n\r\n        /**\r\n         * Returns active records data, indexed by a theirs ids.\r\n         *\r\n         * @returns {Object} Collection of records data.\r\n         */\r\n        getData: function () {\r\n            var data = this.activeRecords.map(function (record) {\r\n                var elemKey,\r\n                    recordData = record.getData();\r\n\r\n                for (elemKey in recordData) {\r\n                    if (_.isUndefined(recordData[elemKey])) {\r\n                        recordData[elemKey] = null;\r\n                    }\r\n                }\r\n\r\n                return recordData;\r\n            });\r\n\r\n            return _.indexBy(data, this.indexField);\r\n        },\r\n\r\n        /**\r\n         * Sets provided data to all active records.\r\n         *\r\n         * @param {Object} data - See 'setData' method of a 'Record'.\r\n         * @param {Boolean} partial - See 'setData' method of a 'Record'.\r\n         * @returns {Editor} Chainable.\r\n         */\r\n        setData: function (data, partial) {\r\n            this.activeRecords.each('setData', data, partial);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Resets specific records' data\r\n         * to the data present in associated row.\r\n         *\r\n         * @param {(Number|String)} id - See 'getId' method.\r\n         * @param {Boolean} [isIndex=false] - See 'getId' method.\r\n         * @returns {Editor} Chainable.\r\n         */\r\n        resetRecord: function (id, isIndex) {\r\n            var record  = this.getRecord(id, isIndex),\r\n                data    = this.getRowData(id, isIndex);\r\n\r\n            if (record && data) {\r\n                record.setData(data);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Returns instance of a specified record.\r\n         *\r\n         * @param {(Number|String)} id - See 'getId' method.\r\n         * @param {Boolean} [isIndex=false] - See 'getId' method.\r\n         * @returns {Record}\r\n         */\r\n        getRecord: function (id, isIndex) {\r\n            return this.elems.findWhere({\r\n                recordId: this.getId(id, isIndex)\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Creates record name based on a provided id.\r\n         *\r\n         * @param {(Number|String)} id - See 'getId' method.\r\n         * @param {Boolean} [isIndex=false] - See 'getId' method.\r\n         * @returns {String}\r\n         */\r\n        formRecordName: function (id, isIndex) {\r\n            id = this.getId(id, isIndex);\r\n\r\n            return this.name + '.' + id;\r\n        },\r\n\r\n        /**\r\n         * Disables editing of specified fields.\r\n         *\r\n         * @param {Array} fields - An array of fields indexes to be disabled.\r\n         * @returns {Editor} Chainable.\r\n         */\r\n        disableFields: function (fields) {\r\n            var columns = this.columns().elems(),\r\n                data    = utils.copy(this.fields);\r\n\r\n            columns.forEach(function (column) {\r\n                var index = column.index,\r\n                    field = data[index] = data[index] || {};\r\n\r\n                field.disabled = _.contains(fields, index);\r\n            });\r\n\r\n            this.set('fields', data);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Converts index of a row into the record id.\r\n         *\r\n         * @param {(Number|String)} id - Records' identifier or its' index in the rows array.\r\n         * @param {Boolean} [isIndex=false] - Flag that indicates if first\r\n         *      parameter is an index or identifier.\r\n         * @returns {String} Records' id.\r\n         */\r\n        getId: function (id, isIndex) {\r\n            var rowsData = this.rowsData,\r\n                record;\r\n\r\n            if (isIndex === true) {\r\n                record  = rowsData[id];\r\n                id      = record ? record[this.indexField] : false;\r\n            }\r\n\r\n            return id;\r\n        },\r\n\r\n        /**\r\n         * Returns data of a specified row.\r\n         *\r\n         * @param {(Number|String)} id - See 'getId' method.\r\n         * @param {Boolean} [isIndex=false] - See 'getId' method.\r\n         * @returns {Object}\r\n         */\r\n        getRowData: function (id, isIndex) {\r\n            id = this.getId(id, isIndex);\r\n\r\n            return _.find(this.rowsData, function (row) {\r\n                return row[this.indexField] === id;\r\n            }, this);\r\n        },\r\n\r\n        /**\r\n         * Checks if specified record is active.\r\n         *\r\n         * @param {(Number|String)} id - See 'getId' method.\r\n         * @param {Boolean} [isIndex=false] - See'getId' method.\r\n         * @returns {Boolean}\r\n         */\r\n        isActive: function (id, isIndex) {\r\n            var record = this.getRecord(id, isIndex);\r\n\r\n            return _.contains(this.activeRecords(), record);\r\n        },\r\n\r\n        /**\r\n         * Checks if editor has active records.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        hasActive: function () {\r\n            return !!this.activeRecords().length || this.permanentlyActive;\r\n        },\r\n\r\n        /**\r\n         * Counts number of active records.\r\n         *\r\n         * @returns {Number}\r\n         */\r\n        countActive: function () {\r\n            return this.activeRecords().length;\r\n        },\r\n\r\n        /**\r\n         * Counts number of invalid fields across all active records.\r\n         *\r\n         * @returns {Number}\r\n         */\r\n        countErrors: function () {\r\n            var errorsCount = 0;\r\n\r\n            this.activeRecords.each(function (record) {\r\n                errorsCount += record.errorsCount;\r\n            });\r\n\r\n            this.errorsCount = errorsCount;\r\n\r\n            return errorsCount;\r\n        },\r\n\r\n        /**\r\n         * Translatable error message text.\r\n         *\r\n         * @returns {String}\r\n         */\r\n        countErrorsMessage: function () {\r\n            return $t('There are {placeholder} messages requires your attention.')\r\n                .replace('{placeholder}', this.countErrors());\r\n        },\r\n\r\n        /**\r\n         * Checks if editor has any errors.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        hasErrors: function () {\r\n            return !!this.countErrors();\r\n        },\r\n\r\n        /**\r\n         * Handles changes of the records 'active' property.\r\n         *\r\n         * @returns {Editor} Chainable.\r\n         */\r\n        updateState: function () {\r\n            var active      = this.elems.filter('active'),\r\n                activeCount = active.length,\r\n                columns     = this.columns().elems;\r\n\r\n            columns.each('disableAction', !!activeCount);\r\n\r\n            this.isMultiEditing = activeCount > 1;\r\n            this.isSingleEditing = activeCount === 1;\r\n\r\n            this.activeRecords(active);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Returns list of selections from a current page.\r\n         *\r\n         * @returns {Array}\r\n         */\r\n        getSelections: function () {\r\n            return this.selections().getPageSelections();\r\n        },\r\n\r\n        /**\r\n         * Starts editing of selected records. If record\r\n         * is not in the selections list, then it will get hidden.\r\n         *\r\n         * @returns {Editor} Chainable.\r\n         */\r\n        editSelected: function () {\r\n            var selections = this.getSelections();\r\n\r\n            this.elems.each(function (record) {\r\n                if (!_.contains(selections, record.recordId)) {\r\n                    record.active(false);\r\n                }\r\n            });\r\n\r\n            selections.forEach(function (id) {\r\n                this.edit(id);\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if there is any additional messages.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        hasMessages: function () {\r\n            return this.messages().length;\r\n        },\r\n\r\n        /**\r\n         * Adds new additional message or a set of messages.\r\n         *\r\n         * @param {(Object|Array)} message - Messages to be added.\r\n         * @returns {Editor} Chainable.\r\n         */\r\n        addMessage: function (message) {\r\n            var messages = this.messages();\r\n\r\n            Array.isArray(message) ?\r\n                messages.push.apply(messages, message) :\r\n                messages.push(message);\r\n\r\n            this.messages(messages);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes all additional messages.\r\n         *\r\n         * @returns {Editor} Chainable.\r\n         */\r\n        clearMessages: function () {\r\n            this.messages.removeAll();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Listener of the selections data changes.\r\n         */\r\n        onSelectionsChange: function () {\r\n            if (this.hasActive()) {\r\n                this.editSelected();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handles successful save request.\r\n         */\r\n        onDataSaved: function () {\r\n            var msg = {\r\n                type: 'success',\r\n                message: this.successMsg\r\n            };\r\n\r\n            this.addMessage(msg)\r\n                .source('reload', {\r\n                    refresh: true\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Handles failed save request.\r\n         *\r\n         * @param {(Array|Object)} errors - List of errors or a single error object.\r\n         */\r\n        onSaveError: function (errors) {\r\n            this.addMessage(errors)\r\n                .columns('hideLoader');\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/editing/record.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    'uiLayout',\r\n    'uiCollection'\r\n], function (_, utils, layout, Collection) {\r\n    'use strict';\r\n\r\n    return Collection.extend({\r\n        defaults: {\r\n            active: true,\r\n            hasChanges: false,\r\n            fields: [],\r\n            errorsCount: 0,\r\n            fieldTmpl: 'ui/grid/editing/field',\r\n            rowTmpl: 'ui/grid/editing/row',\r\n            templates: {\r\n                fields: {\r\n                    base: {\r\n                        parent: '${ $.$data.record.name }',\r\n                        name: '${ $.$data.column.index }',\r\n                        provider: '${ $.$data.record.name }',\r\n                        dataScope: 'data.${ $.$data.column.index }',\r\n                        imports: {\r\n                            disabled: '${ $.$data.record.parentName }:fields.${ $.$data.column.index }.disabled'\r\n                        },\r\n                        isEditor: true\r\n                    },\r\n                    text: {\r\n                        component: 'Magento_Ui/js/form/element/abstract',\r\n                        template: 'ui/form/element/input'\r\n                    },\r\n                    date: {\r\n                        component: 'Magento_Ui/js/form/element/date',\r\n                        template: 'ui/form/element/date',\r\n                        dateFormat: 'MMM d, y h:mm:ss a'\r\n                    },\r\n                    select: {\r\n                        component: 'Magento_Ui/js/form/element/select',\r\n                        template: 'ui/form/element/select',\r\n                        options: '${ JSON.stringify($.$data.column.options) }'\r\n                    }\r\n                }\r\n            },\r\n            ignoreTmpls: {\r\n                data: true\r\n            },\r\n            listens: {\r\n                elems: 'updateFields',\r\n                data: 'updateState'\r\n            },\r\n            imports: {\r\n                onColumnsUpdate: '${ $.columnsProvider }:elems'\r\n            },\r\n            modules: {\r\n                columns: '${ $.columnsProvider }',\r\n                editor: '${ $.editorProvider }'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes record component.\r\n         *\r\n         * @returns {Record} Chainable.\r\n         */\r\n        initialize: function () {\r\n            _.bindAll(this, 'countErrors');\r\n            utils.limit(this, 'updateState', 10);\r\n\r\n            return this._super();\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties.\r\n         *\r\n         * @returns {Record} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .track('errorsCount hasChanges')\r\n                .observe('active fields');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Adds listeners on a field.\r\n         *\r\n         * @returns {Record} Chainable.\r\n         */\r\n        initElement: function (field) {\r\n            field.on('error', this.countErrors);\r\n\r\n            return this._super();\r\n        },\r\n\r\n        /**\r\n         * Creates new instance of a field.\r\n         *\r\n         * @param {Column} column - Column instance which contains field definition.\r\n         * @returns {Record} Chainable.\r\n         */\r\n        initField: function (column) {\r\n            var field = this.buildField(column);\r\n\r\n            layout([field]);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Builds fields' configuration described in a provided column.\r\n         *\r\n         * @param {Column} column - Column instance which contains field definition.\r\n         * @returns {Object} Complete fields' configuration.\r\n         */\r\n        buildField: function (column) {\r\n            var fields = this.templates.fields,\r\n                field  = column.editor;\r\n\r\n            if (_.isObject(field) && field.editorType) {\r\n                field = utils.extend({}, fields[field.editorType], field);\r\n            } else if (_.isString(field)) {\r\n                field = fields[field];\r\n            }\r\n\r\n            field = utils.extend({}, fields.base, field);\r\n\r\n            return utils.template(field, {\r\n                record: this,\r\n                column: column\r\n            }, true, true);\r\n        },\r\n\r\n        /**\r\n         * Creates fields for the specified columns.\r\n         *\r\n         * @param {Array} columns - An array of column instances.\r\n         * @returns {Record} Chainable.\r\n         */\r\n        createFields: function (columns) {\r\n            columns.forEach(function (column) {\r\n                if (column.editor && !this.hasChild(column.index)) {\r\n                    this.initField(column);\r\n                }\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Returns instance of a column found by provided index.\r\n         *\r\n         * @param {String} index - Index of a column (e.g. 'title').\r\n         * @returns {Column}\r\n         */\r\n        getColumn: function (index) {\r\n            return this.columns().getChild(index);\r\n        },\r\n\r\n        /**\r\n         * Returns records' current data object.\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        getData: function () {\r\n            return this.filterData(this.data);\r\n        },\r\n\r\n        /**\r\n         * Returns saved records' data. Data will be processed\r\n         * with a 'filterData' and 'normalizeData' methods.\r\n         *\r\n         * @returns {Object} Saved records' data.\r\n         */\r\n        getSavedData: function () {\r\n            var editor      = this.editor(),\r\n                savedData   = editor.getRowData(this.index);\r\n\r\n            savedData = this.filterData(savedData);\r\n\r\n            return this.normalizeData(savedData);\r\n        },\r\n\r\n        /**\r\n         * Replaces current records' data with the provided one.\r\n         *\r\n         * @param {Object} data - New records data.\r\n         * @param {Boolean} [partial=false] - Flag that defines whether\r\n         *      to completely replace current data or to extend it.\r\n         * @returns {Record} Chainable.\r\n         */\r\n        setData: function (data, partial) {\r\n            var currentData = partial ? this.data : {};\r\n\r\n            data = this.normalizeData(data);\r\n            data = utils.extend({}, currentData, data);\r\n\r\n            this.set('data', data)\r\n                .updateState();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Filters provided object extracting from it values\r\n         * that can be matched with an existing fields.\r\n         *\r\n         * @param {Object} data - Object to be processed.\r\n         * @returns {Object}\r\n         */\r\n        filterData: function (data) {\r\n            var fields = _.pluck(this.elems(), 'index');\r\n\r\n            _.each(this.preserveFields, function (enabled, field) {\r\n                if (enabled && !_.contains(fields, field)) {\r\n                    fields.push(field);\r\n                }\r\n            });\r\n\r\n            return _.pick(data, fields);\r\n        },\r\n\r\n        /**\r\n         * Parses values of a provided object with\r\n         * a 'normalizeData' method of a corresponding field.\r\n         *\r\n         * @param {Object} data - Data to be processed.\r\n         * @returns {Object}\r\n         */\r\n        normalizeData: function (data) {\r\n            var index;\r\n\r\n            this.elems.each(function (elem) {\r\n                index = elem.index;\r\n\r\n                if (data.hasOwnProperty(index)) {\r\n                    data[index] = elem.normalizeData(data[index]);\r\n                }\r\n            });\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Clears values of all fields.\r\n         *\r\n         * @returns {Record} Chainable.\r\n         */\r\n        clear: function () {\r\n            this.elems.each('clear');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Validates all of the available fields.\r\n         *\r\n         * @returns {Array} An array with validation results.\r\n         */\r\n        validate: function () {\r\n            return this.elems.map('validate');\r\n        },\r\n\r\n        /**\r\n         * Checks if all fields are valid.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        isValid: function () {\r\n            return _.every(this.validate(), 'valid');\r\n        },\r\n\r\n        /**\r\n         * Counts total errors amount across all fields.\r\n         *\r\n         * @returns {Number}\r\n         */\r\n        countErrors: function () {\r\n            var errorsCount = this.elems.filter('error').length;\r\n\r\n            this.errorsCount = errorsCount;\r\n\r\n            return errorsCount;\r\n        },\r\n\r\n        /**\r\n         * Returns difference between current data and its'\r\n         * initial state, retrieved from the records collection.\r\n         *\r\n         * @returns {Object} Object with changes descriptions.\r\n         */\r\n        checkChanges: function () {\r\n            var savedData   = this.getSavedData(),\r\n                data        = this.normalizeData(this.getData());\r\n\r\n            return utils.compare(savedData, data);\r\n        },\r\n\r\n        /**\r\n         * Updates 'fields' array filling it with available editors\r\n         * or with column instances if associated field is not present.\r\n         *\r\n         * @returns {Record} Chainable.\r\n         */\r\n        updateFields: function () {\r\n            var fields;\r\n\r\n            fields = this.columns().elems.map(function (column) {\r\n                return this.getChild(column.index) || column;\r\n            }, this);\r\n\r\n            this.fields(fields);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Updates state of a 'hasChanges' property.\r\n         *\r\n         * @returns {Record} Chainable.\r\n         */\r\n        updateState: function () {\r\n            var diff = this.checkChanges(),\r\n                changed = {};\r\n\r\n            this.hasChanges = !diff.equal;\r\n            changed[this.index] = this.data;\r\n            this.editor().set('changed', [changed]);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if provided column is an actions column.\r\n         *\r\n         * @param {Column} column - Column to be checked.\r\n         * @returns {Boolean}\r\n         */\r\n        isActionsColumn: function (column) {\r\n            return column.dataType === 'actions';\r\n        },\r\n\r\n        /**\r\n         * Listener of columns provider child array changes.\r\n         *\r\n         * @param {Array} columns - Modified child elements array.\r\n         */\r\n        onColumnsUpdate: function (columns) {\r\n            this.createFields(columns)\r\n                .updateFields();\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/filters/chips.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiCollection'\r\n], function (_, Collection) {\r\n    'use strict';\r\n\r\n    return Collection.extend({\r\n        defaults: {\r\n            template: 'ui/grid/filters/chips',\r\n            componentType: 'filtersChips'\r\n        },\r\n\r\n        /**\r\n         * Defines if some of components' children has available previews.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        hasPreviews: function () {\r\n            return this.elems().some(function (elem) {\r\n                return !!elem.previews.length;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Calls clear method on all of its' children.\r\n         *\r\n         * @returns {Chips} Chainable.\r\n         */\r\n        clear: function () {\r\n            _.invoke(this.elems(), 'clear');\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/filters/filters.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    'uiLayout',\r\n    'uiCollection',\r\n    'mage/translate',\r\n    'jquery'\r\n], function (_, utils, layout, Collection, $t, $) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Extracts and formats preview of an element.\r\n     *\r\n     * @param {Object} elem - Element whose preview should be extracted.\r\n     * @returns {Object} Formatted data.\r\n     */\r\n    function extractPreview(elem) {\r\n        return {\r\n            label: elem.label,\r\n            preview: elem.getPreview(),\r\n            elem: elem\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Removes empty properties from the provided object.\r\n     *\r\n     * @param {Object} data - Object to be processed.\r\n     * @returns {Object}\r\n     */\r\n    function removeEmpty(data) {\r\n        var result = utils.mapRecursive(data, utils.removeEmptyValues.bind(utils));\r\n\r\n        return utils.mapRecursive(result, function (value) {\r\n            return _.isString(value) ? value.trim() : value;\r\n        });\r\n    }\r\n\r\n    return Collection.extend({\r\n        defaults: {\r\n            template: 'ui/grid/filters/filters',\r\n            stickyTmpl: 'ui/grid/sticky/filters',\r\n            _processed: [],\r\n            columnsProvider: 'ns = ${ $.ns }, componentType = columns',\r\n            bookmarksProvider: 'ns = ${ $.ns }, componentType = bookmark',\r\n            applied: {\r\n                placeholder: true\r\n            },\r\n            filters: {\r\n                placeholder: true\r\n            },\r\n            templates: {\r\n                filters: {\r\n                    base: {\r\n                        parent: '${ $.$data.filters.name }',\r\n                        name: '${ $.$data.column.index }',\r\n                        provider: '${ $.$data.filters.name }',\r\n                        dataScope: '${ $.$data.column.index }',\r\n                        label: '${ $.$data.column.label }',\r\n                        imports: {\r\n                            visible: '${ $.$data.column.name }:visible'\r\n                        }\r\n                    },\r\n                    text: {\r\n                        component: 'Magento_Ui/js/form/element/abstract',\r\n                        template: 'ui/grid/filters/field'\r\n                    },\r\n                    select: {\r\n                        component: 'Magento_Ui/js/form/element/select',\r\n                        template: 'ui/grid/filters/field',\r\n                        options: '${ JSON.stringify($.$data.column.options) }',\r\n                        caption: ' '\r\n                    },\r\n                    dateRange: {\r\n                        component: 'Magento_Ui/js/grid/filters/range',\r\n                        rangeType: 'date'\r\n                    },\r\n                    datetimeRange: {\r\n                        component: 'Magento_Ui/js/grid/filters/range',\r\n                        rangeType: 'datetime'\r\n                    },\r\n                    textRange: {\r\n                        component: 'Magento_Ui/js/grid/filters/range',\r\n                        rangeType: 'text'\r\n                    }\r\n                }\r\n            },\r\n            chipsConfig: {\r\n                name: '${ $.name }_chips',\r\n                provider: '${ $.chipsConfig.name }',\r\n                component: 'Magento_Ui/js/grid/filters/chips'\r\n            },\r\n            listens: {\r\n                active: 'updatePreviews',\r\n                applied: 'cancel updateActive'\r\n            },\r\n            statefull: {\r\n                applied: true\r\n            },\r\n            exports: {\r\n                applied: '${ $.provider }:params.filters'\r\n            },\r\n            imports: {\r\n                onColumnsUpdate: '${ $.columnsProvider }:elems',\r\n                onBackendError: '${ $.provider }:lastError',\r\n                bookmarksActiveIndex: '${ $.bookmarksProvider }:activeIndex'\r\n            },\r\n            modules: {\r\n                columns: '${ $.columnsProvider }',\r\n                chips: '${ $.chipsConfig.provider }'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes filters component.\r\n         *\r\n         * @returns {Filters} Chainable.\r\n         */\r\n        initialize: function (config) {\r\n            if (typeof config.options !== 'undefined' && config.options.dateFormat) {\r\n                this.constructor.defaults.templates.filters.dateRange.dateFormat = config.options.dateFormat;\r\n            }\r\n            _.bindAll(this, 'updateActive');\r\n\r\n            this._super()\r\n                .initChips()\r\n                .cancel();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties.\r\n         *\r\n         * @returns {Filters} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .track({\r\n                    active: [],\r\n                    previews: []\r\n                });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes chips component.\r\n         *\r\n         * @returns {Filters} Chainable.\r\n         */\r\n        initChips: function () {\r\n            layout([this.chipsConfig]);\r\n\r\n            this.chips('insertChild', this.name);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Called when another element was added to filters collection.\r\n         *\r\n         * @returns {Filters} Chainable.\r\n         */\r\n        initElement: function (elem) {\r\n            this._super();\r\n\r\n            elem.on('elems', this.updateActive);\r\n\r\n            this.updateActive();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Clears filters data.\r\n         *\r\n         * @param {Object} [filter] - If provided, then only specified\r\n         *      filter will be cleared. Otherwise, clears all data.\r\n         * @returns {Filters} Chainable.\r\n         */\r\n        clear: function (filter) {\r\n            filter ?\r\n                filter.clear() :\r\n                _.invoke(this.active, 'clear');\r\n\r\n            this.apply();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Sets filters data to the applied state.\r\n         *\r\n         * @returns {Filters} Chainable.\r\n         */\r\n        apply: function () {\r\n            if (typeof $('body').notification === 'function') {\r\n                $('body').notification('clear');\r\n            }\r\n            this.set('applied', removeEmpty(this.filters));\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Resets filters to the last applied state.\r\n         *\r\n         * @returns {Filters} Chainable.\r\n         */\r\n        cancel: function () {\r\n            this.set('filters', utils.copy(this.applied));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Sets provided data to filter components (without applying it).\r\n         *\r\n         * @param {Object} data - Filters data.\r\n         * @param {Boolean} [partial=false] - Flag that defines whether\r\n         *      to completely replace current filters data or to extend it.\r\n         * @returns {Filters} Chainable.\r\n         */\r\n        setData: function (data, partial) {\r\n            var filters = partial ? this.filters : {};\r\n\r\n            data = utils.extend({}, filters, data);\r\n\r\n            this.set('filters', data);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Creates instance of a filter associated with the provided column.\r\n         *\r\n         * @param {Column} column - Column component for which to create a filter.\r\n         * @returns {Filters} Chainable.\r\n         */\r\n        addFilter: function (column) {\r\n            var index       = column.index,\r\n                processed   = this._processed,\r\n                filter;\r\n\r\n            if (!column.filter || _.contains(processed, index)) {\r\n                return this;\r\n            }\r\n\r\n            filter = this.buildFilter(column);\r\n\r\n            processed.push(index);\r\n\r\n            layout([filter]);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Creates filter component configuration associated with the provided column.\r\n         *\r\n         * @param {Column} column - Column component with a basic filter declaration.\r\n         * @returns {Object} Filters' configuration.\r\n         */\r\n        buildFilter: function (column) {\r\n            var filters = this.templates.filters,\r\n                filter  = column.filter,\r\n                type    = filters[filter.filterType];\r\n\r\n            if (_.isObject(filter) && type) {\r\n                filter = utils.extend({}, type, filter);\r\n            } else if (_.isString(filter)) {\r\n                filter = filters[filter];\r\n            }\r\n\r\n            filter = utils.extend({}, filters.base, filter);\r\n            //Accepting labels as is.\r\n            filter.__disableTmpl = {\r\n                label: 1,\r\n                options: 1\r\n            };\r\n\r\n            filter = utils.template(filter, {\r\n                filters: this,\r\n                column: column\r\n            }, true, true);\r\n\r\n            filter.__disableTmpl = {\r\n                label: true\r\n            };\r\n\r\n            return filter;\r\n        },\r\n\r\n        /**\r\n         * Returns an array of range filters.\r\n         *\r\n         * @returns {Array}\r\n         */\r\n        getRanges: function () {\r\n            return this.elems.filter(function (filter) {\r\n                return filter.isRange;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Returns an array of non-range filters.\r\n         *\r\n         * @returns {Array}\r\n         */\r\n        getPlain: function () {\r\n            return this.elems.filter(function (filter) {\r\n                return !filter.isRange;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Tells wether specified filter should be visible.\r\n         *\r\n         * @param {Object} filter\r\n         * @returns {Boolean}\r\n         */\r\n        isFilterVisible: function (filter) {\r\n            return filter.visible() || this.isFilterActive(filter);\r\n        },\r\n\r\n        /**\r\n         * Checks if specified filter is active.\r\n         *\r\n         * @param {Object} filter\r\n         * @returns {Boolean}\r\n         */\r\n        isFilterActive: function (filter) {\r\n            return _.contains(this.active, filter);\r\n        },\r\n\r\n        /**\r\n         * Checks if collection has visible filters.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        hasVisible: function () {\r\n            return this.elems.some(this.isFilterVisible, this);\r\n        },\r\n\r\n        /**\r\n         * Finds filters with a not empty data\r\n         * and sets them to the 'active' filters array.\r\n         *\r\n         * @returns {Filters} Chainable.\r\n         */\r\n        updateActive: function () {\r\n            var applied = _.keys(this.applied);\r\n\r\n            this.active = this.elems.filter(function (elem) {\r\n                return _.contains(applied, elem.index);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Returns number of applied filters.\r\n         *\r\n         * @returns {Number}\r\n         */\r\n        countActive: function () {\r\n            return this.active.length;\r\n        },\r\n\r\n        /**\r\n         * Extract previews of a specified filters.\r\n         *\r\n         * @param {Array} filters - Filters to be processed.\r\n         * @returns {Filters} Chainable.\r\n         */\r\n        updatePreviews: function (filters) {\r\n            var previews = filters.map(extractPreview);\r\n\r\n            this.previews = _.compact(previews);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Listener of the columns provider children array changes.\r\n         *\r\n         * @param {Array} columns - Current columns list.\r\n         */\r\n        onColumnsUpdate: function (columns) {\r\n            columns.forEach(this.addFilter, this);\r\n        },\r\n\r\n        /**\r\n         * Provider ajax error listener.\r\n         *\r\n         * @param {bool} isError - Selected index of the filter.\r\n         */\r\n        onBackendError: function (isError) {\r\n            var defaultMessage = 'Something went wrong with processing the default view and we have restored the ' +\r\n                    'filter to its original state.',\r\n                customMessage  = 'Something went wrong with processing current custom view and filters have been ' +\r\n                    'reset to its original state. Please edit filters then click apply.';\r\n\r\n            if (isError) {\r\n                this.clear();\r\n\r\n                $('body').notification('clear')\r\n                    .notification('add', {\r\n                        error: true,\r\n                        message: $.mage.__(this.bookmarksActiveIndex !== 'default' ? customMessage : defaultMessage),\r\n\r\n                        /**\r\n                         * @param {String} message\r\n                         */\r\n                        insertMethod: function (message) {\r\n                            var $wrapper = $('<div></div>').html(message);\r\n\r\n                            $('.page-main-actions').after($wrapper);\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/filters/range.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiLayout',\r\n    'mageUtils',\r\n    'Magento_Ui/js/form/components/group',\r\n    'mage/translate'\r\n], function (_, layout, utils, Group, $t) {\r\n    'use strict';\r\n\r\n    return Group.extend({\r\n        defaults: {\r\n            template: 'ui/grid/filters/elements/group',\r\n            isRange: true,\r\n            templates: {\r\n                base: {\r\n                    parent: '${ $.$data.group.name }',\r\n                    provider: '${ $.$data.group.provider }',\r\n                    template: 'ui/grid/filters/field'\r\n                },\r\n                date: {\r\n                    component: 'Magento_Ui/js/form/element/date',\r\n                    dateFormat: 'MM/dd/YYYY',\r\n                    shiftedValue: 'filter'\r\n                },\r\n                datetime: {\r\n                    component: 'Magento_Ui/js/form/element/date',\r\n                    dateFormat: 'MM/dd/YYYY',\r\n                    shiftedValue: 'filter',\r\n                    options: {\r\n                        showsTime: true\r\n                    }\r\n                },\r\n                text: {\r\n                    component: 'Magento_Ui/js/form/element/abstract'\r\n                },\r\n                ranges: {\r\n                    from: {\r\n                        label: $t('from'),\r\n                        dataScope: 'from'\r\n                    },\r\n                    to: {\r\n                        label: $t('to'),\r\n                        dataScope: 'to'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes range component.\r\n         *\r\n         * @returns {Range} Chainable.\r\n         */\r\n        initialize: function (config) {\r\n            if (config.dateFormat) {\r\n                this.constructor.defaults.templates.date.pickerDefaultDateFormat = config.dateFormat;\r\n            }\r\n            this._super()\r\n                .initChildren();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Creates instances of child components.\r\n         *\r\n         * @returns {Range} Chainable.\r\n         */\r\n        initChildren: function () {\r\n            var children = this.buildChildren();\r\n\r\n            layout(children);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Creates configuration for the child components.\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        buildChildren: function () {\r\n            var templates   = this.templates,\r\n                typeTmpl    = templates[this.rangeType],\r\n                tmpl        = utils.extend({}, templates.base, typeTmpl),\r\n                children    = {};\r\n\r\n            _.each(templates.ranges, function (range, key) {\r\n                children[key] = utils.extend({}, tmpl, range);\r\n            });\r\n\r\n            return utils.template(children, {\r\n                group: this\r\n            }, true, true);\r\n        },\r\n\r\n        /**\r\n         * Clears childrens data.\r\n         *\r\n         * @returns {Range} Chainable.\r\n         */\r\n        clear: function () {\r\n            this.elems.each('clear');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if some children has data.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        hasData: function () {\r\n            return this.elems.some('hasData');\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/filters/elements/ui-select.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/form/element/ui-select',\r\n    'jquery',\r\n    'underscore'\r\n], function (Select, $, _) {\r\n    'use strict';\r\n\r\n    return Select.extend({\r\n        defaults: {\r\n            bookmarkProvider: 'ns = ${ $.ns }, index = bookmarks',\r\n            filterChipsProvider: 'componentType = filters, ns = ${ $.ns }',\r\n            validationUrl: false,\r\n            loadedOption: [],\r\n            validationLoading: true,\r\n            imports: {\r\n                applied: '${ $.filterChipsProvider }:applied',\r\n                activeIndex: '${ $.bookmarkProvider }:activeIndex'\r\n            },\r\n            modules: {\r\n                filterChips: '${ $.filterChipsProvider }'\r\n            },\r\n            listens: {\r\n                activeIndex: 'validateInitialValue',\r\n                applied: 'validateInitialValue'\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * Initializes UiSelect component.\r\n         *\r\n         * @returns {UiSelect} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            this.validateInitialValue();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Validate initial value actually exists\r\n         */\r\n        validateInitialValue: function () {\r\n            if (_.isEmpty(this.value())) {\r\n                this.validationLoading(false);\r\n\r\n                return;\r\n            }\r\n\r\n            $.ajax({\r\n                url: this.validationUrl,\r\n                type: 'GET',\r\n                dataType: 'json',\r\n                context: this,\r\n                data: {\r\n                    ids: this.value()\r\n                },\r\n\r\n                /** @param {Object} response */\r\n                success: function (response) {\r\n                    if (!_.isEmpty(response)) {\r\n                        this.options([]);\r\n                        this.success({\r\n                            options: response\r\n                        });\r\n                    }\r\n                    this.filterChips().updateActive();\r\n                },\r\n\r\n                /** set empty array if error occurs */\r\n                error: function () {\r\n                    this.options([]);\r\n                },\r\n\r\n                /** stop loader */\r\n                complete: function () {\r\n                    this.validationLoading(false);\r\n                    this.setCaption();\r\n                }\r\n            });\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/paging/paging.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'mageUtils',\r\n    'uiLayout',\r\n    'uiElement'\r\n], function (ko, _, utils, layout, Element) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            template: 'ui/grid/paging/paging',\r\n            totalTmpl: 'ui/grid/paging-total',\r\n            totalRecords: 0,\r\n            showTotalRecords: true,\r\n            pages: 1,\r\n            current: 1,\r\n            selectProvider: 'ns = ${ $.ns }, index = ids',\r\n\r\n            sizesConfig: {\r\n                component: 'Magento_Ui/js/grid/paging/sizes',\r\n                name: '${ $.name }_sizes',\r\n                storageConfig: {\r\n                    provider: '${ $.storageConfig.provider }',\r\n                    namespace: '${ $.storageConfig.namespace }'\r\n                }\r\n            },\r\n\r\n            imports: {\r\n                totalSelected: '${ $.selectProvider }:totalSelected',\r\n                totalRecords: '${ $.provider }:data.totalRecords',\r\n                showTotalRecords: '${ $.provider }:data.showTotalRecords',\r\n                filters: '${ $.provider }:params.filters',\r\n                keywordUpdated: '${ $.provider }:params.keywordUpdated'\r\n            },\r\n\r\n            exports: {\r\n                pageSize: '${ $.provider }:params.paging.pageSize',\r\n                current: '${ $.provider }:params.paging.current'\r\n            },\r\n\r\n            links: {\r\n                options: '${ $.sizesConfig.name }:options',\r\n                pageSize: '${ $.sizesConfig.name }:value'\r\n            },\r\n\r\n            statefull: {\r\n                pageSize: true,\r\n                current: true\r\n            },\r\n\r\n            listens: {\r\n                'pages': 'onPagesChange',\r\n                'pageSize': 'onPageSizeChange',\r\n                'totalRecords': 'updateCounter',\r\n                'showTotalRecords': 'updateShowTotalRecords',\r\n                '${ $.provider }:params.filters': 'goFirst',\r\n                '${ $.provider }:params.search': 'onSearchUpdate'\r\n            },\r\n\r\n            modules: {\r\n                sizes: '${ $.sizesConfig.name }'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes paging component.\r\n         *\r\n         * @returns {Paging} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .initSizes()\r\n                .updateCounter();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties.\r\n         *\r\n         * @returns {Paging} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .track([\r\n                    'totalSelected',\r\n                    'totalRecords',\r\n                    'showTotalRecords',\r\n                    'pageSize',\r\n                    'pages',\r\n                    'current'\r\n                ]);\r\n\r\n            this._current = ko.pureComputed({\r\n                read: ko.getObservable(this, 'current'),\r\n\r\n                /**\r\n                 * Validates page change according to user's input.\r\n                 * Sets current observable to result of validation.\r\n                 * Calls reload method then.\r\n                 */\r\n                write: function (value) {\r\n                    this.setPage(value)\r\n                        ._current.notifySubscribers(this.current);\r\n                },\r\n\r\n                owner: this\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes sizes component.\r\n         *\r\n         * @returns {Paging} Chainable.\r\n         */\r\n        initSizes: function () {\r\n            layout([this.sizesConfig]);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Gets first item index on current page.\r\n         *\r\n         * @returns {Number}\r\n         */\r\n        getFirstItemIndex: function () {\r\n            return this.pageSize * (this.current - 1) + 1;\r\n        },\r\n\r\n        /**\r\n         * Gets last item index on current page.\r\n         *\r\n         * @returns {Number}\r\n         */\r\n        getLastItemIndex: function () {\r\n            var lastItem = this.getFirstItemIndex() + this.pageSize - 1;\r\n\r\n            return this.totalRecords < lastItem ? this.totalRecords : lastItem;\r\n        },\r\n\r\n        /**\r\n         * Sets cursor to the provied value.\r\n         *\r\n         * @param {(Number|String)} value - New value of the cursor.\r\n         * @returns {Paging} Chainable.\r\n         */\r\n        setPage: function (value) {\r\n            this.current = this.normalize(value);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Increments current page value.\r\n         *\r\n         * @returns {Paging} Chainable.\r\n         */\r\n        next: function () {\r\n            this.setPage(this.current + 1);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Decrements current page value.\r\n         *\r\n         * @returns {Paging} Chainable.\r\n         */\r\n        prev: function () {\r\n            this.setPage(this.current - 1);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Goes to the first page.\r\n         *\r\n         * @returns {Paging} Chainable.\r\n         */\r\n        goFirst: function () {\r\n            if (!_.isUndefined(this.filters)) {\r\n                this.current = 1;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Goes to the last page.\r\n         *\r\n         * @returns {Paging} Chainable.\r\n         */\r\n        goLast: function () {\r\n            this.current = this.pages;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if current page is the first one.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        isFirst: function () {\r\n            return this.current === 1;\r\n        },\r\n\r\n        /**\r\n         * Checks if current page is the last one.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        isLast: function () {\r\n            return this.current === this.pages;\r\n        },\r\n\r\n        /**\r\n         * Updates number of pages.\r\n         */\r\n        updateCounter: function () {\r\n            this.pages = Math.ceil(this.totalRecords / this.pageSize) || 1;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Updates show total records flag.\r\n         */\r\n        updateShowTotalRecords: function () {\r\n            if (this.showTotalRecords === undefined) {\r\n                this.showTotalRecords = true;\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Calculates new page cursor based on the\r\n         * previous and current page size values.\r\n         */\r\n        updateCursor: function () {\r\n            var cursor = this.current - 1,\r\n                size = this.pageSize,\r\n                oldSize = _.isUndefined(this.previousSize) ? this.pageSize : this.previousSize,\r\n                delta = cursor * (oldSize - size) / size;\r\n\r\n            delta = size > oldSize ?\r\n                Math.ceil(delta) :\r\n                Math.floor(delta);\r\n\r\n            cursor += delta + 1;\r\n\r\n            this.previousSize = size;\r\n\r\n            this.setPage(cursor);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Converts provided value to a number and puts\r\n         * it in range between 1 and total amount of pages.\r\n         *\r\n         * @param {(Number|String)} value - Value to be normalized.\r\n         * @returns {Number}\r\n         */\r\n        normalize: function (value) {\r\n            value = +value;\r\n\r\n            if (isNaN(value)) {\r\n                return 1;\r\n            }\r\n\r\n            return utils.inRange(Math.round(value), 1, this.pages);\r\n        },\r\n\r\n        /**\r\n         * Handles changes of the page size.\r\n         */\r\n        onPageSizeChange: function () {\r\n            this.updateCounter()\r\n                .updateCursor();\r\n        },\r\n\r\n        /**\r\n         * Handles changes of the pages amount.\r\n         */\r\n        onPagesChange: function () {\r\n            this.updateCursor();\r\n        },\r\n\r\n        /**\r\n         * Resent the pagination to Page 1 on search keyword update\r\n         */\r\n        onSearchUpdate: function () {\r\n            if (!_.isUndefined(this.keywordUpdated) && this.keywordUpdated) {\r\n                this.goFirst();\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/paging/sizes.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'mageUtils',\r\n    'uiElement'\r\n], function (ko, _, utils, Element) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            template: 'ui/grid/paging/sizes',\r\n            minSize: 1,\r\n            maxSize: 999,\r\n            statefull: {\r\n                options: true,\r\n                value: true\r\n            },\r\n            listens: {\r\n                value: 'onValueChange',\r\n                options: 'onSizesChange'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes sizes component.\r\n         *\r\n         * @returns {Sizes} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .updateArray();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties.\r\n         *\r\n         * @returns {Sizes} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .track([\r\n                    'value',\r\n                    'editing',\r\n                    'customVisible',\r\n                    'customValue'\r\n                ])\r\n                .track({\r\n                    optionsArray: []\r\n                });\r\n\r\n            this._value = ko.pureComputed({\r\n                read: ko.getObservable(this, 'value'),\r\n\r\n                /**\r\n                 * Validates input field prior to updating 'value' property.\r\n                 */\r\n                write: function (value) {\r\n                    value = this.normalize(value);\r\n\r\n                    this.value = value;\r\n                    this._value.notifySubscribers(value);\r\n                },\r\n\r\n                owner: this\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Starts editing of the specified size.\r\n         *\r\n         * @param {Number} value - Value of the size.\r\n         * @returns {Sizes} Chainable.\r\n         */\r\n        edit: function (value) {\r\n            this.editing = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Discards changes made to the currently editable size.\r\n         *\r\n         * @returns {Sizes} Chainable.\r\n         */\r\n        discardEditing: function () {\r\n            var value = this.editing;\r\n\r\n            if (value) {\r\n                this.updateSize(value, value);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Invokes 'discardEditing' and 'discardCustom' actions.\r\n         *\r\n         * @returns {Sizes} Chainable.\r\n         */\r\n        discardAll: function () {\r\n            this.discardEditing()\r\n                .discardCustom();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Returns value of the first size.\r\n         *\r\n         * @returns {Number}\r\n         */\r\n        getFirst: function () {\r\n            return this.optionsArray[0].value;\r\n        },\r\n\r\n        /**\r\n         * Returns size which matches specified value.\r\n         *\r\n         * @param {Number} value - Value of the item.\r\n         * @returns {Object|Undefined}\r\n         */\r\n        getSize: function (value) {\r\n            return this.options[value];\r\n        },\r\n\r\n        /**\r\n         * Sets current size to the specified value.\r\n         *\r\n         * @param {Number} value - Value of the size.\r\n         * @returns {Sizes} Chainable.\r\n         */\r\n        setSize: function (value) {\r\n            this.value = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Adds a new value to sizes list.\r\n         *\r\n         * @param {Number} value - Value to be added.\r\n         * @returns {Sizes} Chainable.\r\n         */\r\n        addSize: function (value) {\r\n            var size;\r\n\r\n            if (!this.hasSize(value)) {\r\n                size = this.createSize(value);\r\n\r\n                this.set('options.' + value, size);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes provided value from the sizes list.\r\n         *\r\n         * @param {Number} value - Value to be removed.\r\n         * @returns {Sizes} Chainable.\r\n         */\r\n        removeSize: function (value) {\r\n            if (!this.hasSize(value)) {\r\n                return this;\r\n            }\r\n\r\n            this.remove('options.' + value);\r\n\r\n            if (this.isSelected(value)) {\r\n                this.setSize(this.getFirst());\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Updates existing value to the provided one. If new value\r\n         * is not specified, then sizes' '_value' property will be taken.\r\n         *\r\n         * @param {Number} value - Existing value that should be updated.\r\n         * @param {(Number|String)} [newValue=size._value] - New size value.\r\n         * @returns {Sizes} Chainable.\r\n         */\r\n        updateSize: function (value, newValue) {\r\n            var size = this.getSize(value);\r\n\r\n            if (!size) {\r\n                return this;\r\n            }\r\n\r\n            newValue = newValue || size._value;\r\n\r\n            if (isNaN(+newValue)) {\r\n                this.discardEditing();\r\n\r\n                return this;\r\n            }\r\n\r\n            newValue = this.normalize(newValue);\r\n\r\n            this.remove('options.' + value)\r\n                .addSize(newValue);\r\n\r\n            if (this.isSelected(value)) {\r\n                this.setSize(newValue);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Creates new editable size instance with the provided value.\r\n         *\r\n         * @param {Number} value - Value of the size.\r\n         * @returns {Object}\r\n         */\r\n        createSize: function (value) {\r\n            return {\r\n                value: value,\r\n                label: value,\r\n                _value: value,\r\n                editable: true\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Checks if provided value exists in the sizes list.\r\n         *\r\n         * @param {Number} value - Value to be checked.\r\n         * @returns {Boolean}\r\n         */\r\n        hasSize: function (value) {\r\n            return !!this.getSize(value);\r\n        },\r\n\r\n        /**\r\n         * Hides and clears custom field.\r\n         *\r\n         * @returns {Sizes} Chainable.\r\n         */\r\n        discardCustom: function () {\r\n            this.hideCustom()\r\n                .clearCustom();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Shows custom field.\r\n         *\r\n         * @returns {Sizes} Chainable.\r\n         */\r\n        showCustom: function () {\r\n            this.customVisible = true;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Hides custom field.\r\n         *\r\n         * @returns {Sizes} Chainable.\r\n         */\r\n        hideCustom: function () {\r\n            this.customVisible = false;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Empties value of the custom field.\r\n         *\r\n         * @returns {Sizes} Chainable.\r\n         */\r\n        clearCustom: function () {\r\n            this.customValue = '';\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Adds a new size specified in the custom field.\r\n         *\r\n         * @returns {Sizes} Chainable.\r\n         */\r\n        applyCustom: function () {\r\n            var value = this.customValue;\r\n\r\n            value = this.normalize(value);\r\n\r\n            this.addSize(value)\r\n                .setSize(value)\r\n                .discardCustom();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if custom field is visible.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        isCustomVisible: function () {\r\n            return this.customVisible;\r\n        },\r\n\r\n        /**\r\n         * Converts provided value to a number and puts\r\n         * it in range between 'minSize' and 'maxSize' properties.\r\n         *\r\n         * @param {(Number|String)} value - Value to be normalized.\r\n         * @returns {Number}\r\n         */\r\n        normalize: function (value) {\r\n            value = +value;\r\n\r\n            if (isNaN(value)) {\r\n                return this.getFirst();\r\n            }\r\n\r\n            return utils.inRange(Math.round(value), this.minSize, this.maxSize);\r\n        },\r\n\r\n        /**\r\n         * Updates the array of options.\r\n         *\r\n         * @returns {Sizes} Chainable.\r\n         */\r\n        updateArray: function () {\r\n            var array = _.values(this.options);\r\n\r\n            this.optionsArray = _.sortBy(array, 'value');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if provided value is in editing state.\r\n         *\r\n         * @param {Number} value - Value to be checked.\r\n         * @returns {Boolean}\r\n         */\r\n        isEditing: function (value) {\r\n            return this.editing === value;\r\n        },\r\n\r\n        /**\r\n         * Checks if provided value is selected.\r\n         *\r\n         * @param {Number} value - Value to be checked.\r\n         * @returns {Boolean}\r\n         */\r\n        isSelected: function (value) {\r\n            return this.value === value;\r\n        },\r\n\r\n        /**\r\n         * Listener of the 'value' property changes.\r\n         */\r\n        onValueChange: function () {\r\n            this.discardAll()\r\n                .trigger('close');\r\n        },\r\n\r\n        /**\r\n         * Listener of the 'options' object changes.\r\n         */\r\n        onSizesChange: function () {\r\n            this.editing = false;\r\n\r\n            this.updateArray();\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/search/search.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiLayout',\r\n    'mage/translate',\r\n    'mageUtils',\r\n    'uiElement',\r\n    'jquery'\r\n], function (_, layout, $t, utils, Element, $) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            template: 'ui/grid/search/search',\r\n            placeholder: $t('Search by keyword'),\r\n            label: $t('Keyword'),\r\n            value: '',\r\n            keywordUpdated: false,\r\n            previews: [],\r\n            chipsProvider: 'componentType = filtersChips, ns = ${ $.ns }',\r\n            statefull: {\r\n                value: true\r\n            },\r\n            tracks: {\r\n                value: true,\r\n                previews: true,\r\n                inputValue: true,\r\n                focused: true,\r\n                keywordUpdated: true\r\n            },\r\n            imports: {\r\n                inputValue: 'value',\r\n                updatePreview: 'value',\r\n                focused: false\r\n            },\r\n            exports: {\r\n                value: '${ $.provider }:params.search',\r\n                keywordUpdated: '${ $.provider }:params.keywordUpdated'\r\n            },\r\n            modules: {\r\n                chips: '${ $.chipsProvider }'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes search component.\r\n         *\r\n         * @returns {Search} Chainable.\r\n         */\r\n        initialize: function () {\r\n            var urlParams = window.location.href.slice(window.location.href.search('[\\&\\?](search=)')).split('&'),\r\n                searchTerm = [];\r\n\r\n            this._super()\r\n                .initChips();\r\n\r\n            if (urlParams[0]) {\r\n                searchTerm = urlParams[0].split('=');\r\n\r\n                if (searchTerm[1]) {\r\n                    this.apply(decodeURIComponent(searchTerm[1]));\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes chips component.\r\n         *\r\n         * @returns {Search} Chainbale.\r\n         */\r\n        initChips: function () {\r\n            this.chips('insertChild', this, 0);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Clears search.\r\n         *\r\n         * @returns {Search} Chainable.\r\n         */\r\n        clear: function () {\r\n            this.value = '';\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Click To ScrollTop.\r\n         */\r\n        scrollTo: function ($data) {\r\n            $('html, body').animate({\r\n                scrollTop: 0\r\n            }, 'slow', function () {\r\n                $data.focused = false;\r\n                $data.focused = true;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Resets input value to the last applied state.\r\n         *\r\n         * @returns {Search} Chainable.\r\n         */\r\n        cancel: function () {\r\n            this.inputValue = this.value;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Applies search query.\r\n         *\r\n         * @param {String} [value=inputValue] - If not specified, then\r\n         *      value of the input field will be used.\r\n         * @returns {Search} Chainable.\r\n         */\r\n        apply: function (value) {\r\n            value = value || this.inputValue;\r\n\r\n            this.keywordUpdated = this.value !== value;\r\n            this.value = this.inputValue = value.trim();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Updates preview data.\r\n         *\r\n         * @returns {Search} Chainable.\r\n         */\r\n        updatePreview: function () {\r\n            var preview = [];\r\n\r\n            if (this.value) {\r\n                preview.push({\r\n                    elem: this,\r\n                    label: this.label,\r\n                    preview: this.value\r\n                });\r\n            }\r\n\r\n            this.previews = preview;\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/sticky/sticky.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'Magento_Ui/js/lib/view/utils/async',\r\n    'underscore',\r\n    'uiComponent',\r\n    'Magento_Ui/js/lib/view/utils/raf'\r\n], function ($, _, Component, raf) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            listingSelector: '${ $.listingProvider }::not([data-role = \"sticky-el-root\"])',\r\n            toolbarSelector: '${ $.toolbarProvider }::not([data-role = \"sticky-el-root\"])',\r\n            bulkRowSelector: '[data-role = \"data-grid-bulk-row\"]',\r\n            bulkRowHeaderSelector: '.data-grid-info-panel:visible',\r\n            tableSelector: 'table',\r\n            columnSelector: 'thead tr th',\r\n            rowSelector: 'tbody tr',\r\n            toolbarCollapsiblesSelector: '[data-role=\"toolbar-menu-item\"]',\r\n            toolbarCollapsiblesActiveClass: '_active',\r\n            template: 'ui/grid/sticky/sticky',\r\n            stickyContainerSelector: '.sticky-header',\r\n            stickyElementSelector: '[data-role = \"sticky-el-root\"]',\r\n            leftDataGridCapSelector: '.data-grid-cap-left',\r\n            rightDataGridCapSelector: '.data-grid-cap-right',\r\n            visible: false,\r\n            enableToolbar: true,\r\n            enableHeader: true,\r\n            modules: {\r\n                toolbar: '${ $.toolbarProvider }',\r\n                listing: '${ $.listingProvider }'\r\n            },\r\n            otherStickyElsSize: 77,\r\n            containerNode: null,\r\n            listingNode: null,\r\n            toolbarNode: null,\r\n            stickyListingNode: null,\r\n            stickyToolbarNode: null,\r\n            storedOriginalToolbarElements: [],\r\n            cache: {},\r\n            flags: {},\r\n            dirtyFlag: 'dirty'\r\n        },\r\n\r\n        /**\r\n         * Initializes Sticky component.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n            _.bindAll(this,\r\n                'adjustStickyElems',\r\n                'initListingNode',\r\n                'initToolbarNode',\r\n                'initContainerNode',\r\n                'initColumns',\r\n                'initStickyListingNode',\r\n                'initStickyToolbarNode',\r\n                'initLeftDataGridCap',\r\n                'initRightDataGridCap'\r\n            );\r\n\r\n            $.async(this.listingSelector,\r\n                this.initListingNode);\r\n            $.async(this.toolbarSelector,\r\n                this.initToolbarNode);\r\n\r\n            $.async(this.stickyContainerSelector,\r\n                this,\r\n                this.initContainerNode);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Init observables\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .track('visible');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Init original listing node\r\n         *\r\n         * @param {HTMLElement} node\r\n         */\r\n        initListingNode: function (node) {\r\n            if ($(node).is(this.stickyElementSelector)) {\r\n                return;\r\n            }\r\n            this.listingNode = $(node);\r\n            $.async(this.columnSelector, node, this.initColumns);\r\n        },\r\n\r\n        /**\r\n         * Init original toolbar node\r\n         *\r\n         * @param {HTMLElement} node\r\n         */\r\n        initToolbarNode: function (node) {\r\n            if ($(node).is(this.stickyElementSelector)) {\r\n                return;\r\n            }\r\n            this.toolbarNode = $(node);\r\n        },\r\n\r\n        /**\r\n         * Init sticky listing node\r\n         *\r\n         * @param {HTMLElement} node\r\n         */\r\n        initStickyListingNode: function (node) {\r\n            this.stickyListingNode = $(node);\r\n            this.checkPos();\r\n            this.initListeners();\r\n        },\r\n\r\n        /**\r\n         * Init sticky toolbar node\r\n         *\r\n         * @param {HTMLElement} node\r\n         */\r\n        initStickyToolbarNode: function (node) {\r\n            this.stickyToolbarNode = $(node);\r\n        },\r\n\r\n        /**\r\n         * Init sticky header container node\r\n         *\r\n         * @param {HTMLElement} node\r\n         */\r\n        initContainerNode: function (node) {\r\n            this.containerNode = $(node);\r\n\r\n            $.async(this.leftDataGridCapSelector,\r\n                node,\r\n                this.initLeftDataGridCap);\r\n            $.async(this.rightDataGridCapSelector,\r\n                node,\r\n                this.initRightDataGridCap);\r\n\r\n            $.async(this.stickyElementSelector,\r\n                this.listing(),\r\n                this.initStickyListingNode);\r\n            $.async(this.stickyElementSelector,\r\n                this.toolbar(),\r\n                this.initStickyToolbarNode);\r\n        },\r\n\r\n        /**\r\n         * Init columns (each time when amount of columns is changed)\r\n         *\r\n         */\r\n        initColumns: function () {\r\n            this.columns = this.listingNode.find(this.columnSelector);\r\n        },\r\n\r\n        /**\r\n         * Init left DataGridCap\r\n         *\r\n         * @param {HTMLElement} node\r\n         */\r\n        initLeftDataGridCap: function (node) {\r\n            this.leftDataGridCap = $(node);\r\n        },\r\n\r\n        /**\r\n         * Init right DataGridCap\r\n         *\r\n         * @param {HTMLElement} node\r\n         */\r\n        initRightDataGridCap: function (node) {\r\n            this.rightDataGridCap = $(node);\r\n        },\r\n\r\n        /**\r\n         * Init listeners\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initListeners: function () {\r\n            this.adjustStickyElems();\r\n            this.initOnResize()\r\n                .initOnScroll()\r\n                .initOnListingScroll();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Start to listen to window scroll event\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initOnScroll: function () {\r\n            this.lastHorizontalScrollPos = $(window).scrollLeft();\r\n            document.addEventListener('scroll', function () {\r\n                this.flags.scrolled = true;\r\n            }.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Start to listen to original listing scroll event\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initOnListingScroll: function () {\r\n            $(this.listingNode).on('scroll', function (e) {\r\n                this.flags.listingScrolled = true;\r\n                this.flags.listingScrolledValue = $(e.target).scrollLeft();\r\n            }.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Start to listen to window resize event\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initOnResize: function () {\r\n            $(window).on('resize', function () {\r\n                this.flags.resized = true;\r\n            }.bind(this));\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Adjust sticky header elements according to flags of the events that have happened in the endless RAF loop\r\n         */\r\n        adjustStickyElems: function () {\r\n            if (this.flags.resized ||\r\n                this.flags.scrolled) {\r\n                this.checkPos();\r\n            }\r\n\r\n            if (this.visible) {\r\n                this.checkTableElemsWidth();\r\n\r\n                if (this.flags.originalWidthChanged) {\r\n                    this.adjustContainerElemsWidth();\r\n                }\r\n\r\n                if (this.flags.resized) {\r\n                    this.onResize();\r\n                }\r\n\r\n                if (this.flags.scrolled) {\r\n                    this.onWindowScroll();\r\n                }\r\n\r\n                if (this.flags.listingScrolled) {\r\n                    this.onListingScroll(this.flags.listingScrolledValue);\r\n                }\r\n            }\r\n            _.each(this.flags, function (val, key) {\r\n                if (val === this.dirtyFlag) {\r\n                    this.flags[key] = false;\r\n                } else if (val) {\r\n                    this.flags[key] = this.dirtyFlag;\r\n                }\r\n            }, this);\r\n\r\n            raf(this.adjustStickyElems);\r\n        },\r\n\r\n        /**\r\n         * Handles window scroll\r\n         */\r\n        onWindowScroll: function () {\r\n            var scrolled = $(window).scrollLeft(),\r\n                horizontal = this.lastHorizontalScrollPos !== scrolled;\r\n\r\n            if (horizontal) {\r\n                this.adjustOffset()\r\n                    .adjustDataGridCapPositions();\r\n                this.lastHorizontalScrollPos = scrolled;\r\n            } else {\r\n                this.checkPos();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handles original listing scroll\r\n         *\r\n         * @param {Number} scrolled\r\n         */\r\n        onListingScroll: function (scrolled) {\r\n            this.adjustOffset(scrolled);\r\n        },\r\n\r\n        /**\r\n         * Handles window resize\r\n         */\r\n        onResize: function () {\r\n            this.checkPos();\r\n            this.adjustContainerElemsWidth()\r\n                .adjustDataGridCapPositions();\r\n        },\r\n\r\n        /**\r\n         * Check if original table or columns change it dimensions and sets appropriate flag\r\n         */\r\n        checkTableElemsWidth: function () {\r\n            var newWidth = this.getTableWidth();\r\n\r\n            if (this.cache.tableWidth !== newWidth) {\r\n                this.cache.tableWidth = newWidth;\r\n                this.flags.originalWidthChanged = true;\r\n            } else if (this.cache.colChecksum !== this.getColsChecksum()) {\r\n                this.cache.colChecksum = this.getColsChecksum();\r\n                this.flags.originalWidthChanged = true;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get the checksum of original columns width\r\n         *\r\n         * @returns {Number}.\r\n         */\r\n        getColsChecksum: function () {\r\n            return _.reduce(this.columns,\r\n            function (pv, cv) {\r\n                return ($(pv).width() || pv) + '' + $(cv).width();\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Get the width of the sticky table wrapper\r\n         *\r\n         * @returns {Number}.\r\n         */\r\n        getListingWidth: function () {\r\n            return this.listingNode.width();\r\n        },\r\n\r\n        /**\r\n         * Get the width of the original table\r\n         *\r\n         * @returns {Number}.\r\n         */\r\n        getTableWidth: function () {\r\n            return this.listingNode.find(this.tableSelector).width();\r\n        },\r\n\r\n        /**\r\n         * Get the top elem: header or toolbar\r\n         *\r\n         * @returns {HTMLElement}.\r\n         */\r\n        getTopElement: function () {\r\n            return this.toolbarNode || this.listingNode;\r\n        },\r\n\r\n        /**\r\n         * Get the height of the other sticky elem (Page header)\r\n         *\r\n         * @returns {Number}.\r\n         */\r\n        getOtherStickyElementsSize: function () {\r\n            return this.otherStickyElsSize;\r\n        },\r\n\r\n        /**\r\n         * Get original bulk row height, if is visible\r\n         *\r\n         * @returns {Number}.\r\n         */\r\n        getBulkRowHeight: function () {\r\n            return this.listingNode.find(this.bulkRowSelector).filter(':visible').height();\r\n        },\r\n\r\n        /**\r\n         * Get top Y coord of the sticky header\r\n         *\r\n         * @returns {Number}.\r\n         */\r\n        getListingTopYCoord: function () {\r\n            var bulkRowHeight = this.getBulkRowHeight();\r\n\r\n            return this.listingNode.find('tbody').offset().top -\r\n                this.containerNode.height() -\r\n                $(window).scrollTop() +\r\n                bulkRowHeight;\r\n        },\r\n\r\n        /**\r\n         * Check if sticky header must be visible\r\n         *\r\n         * @returns {Boolean}.\r\n         */\r\n        getMustBeSticky: function () {\r\n            var stickyTopCondition = this.getListingTopYCoord() - this.getOtherStickyElementsSize(),\r\n                stickyBottomCondition = this.listingNode.offset().top +\r\n                    this.listingNode.height() -\r\n                    $(window).scrollTop() +\r\n                    this.getBulkRowHeight() -\r\n                    this.getOtherStickyElementsSize();\r\n\r\n            return stickyTopCondition < 0 && stickyBottomCondition > 0;\r\n        },\r\n\r\n        /**\r\n         * Resize sticky header and cols\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        adjustContainerElemsWidth: function () {\r\n            this.resizeContainer()\r\n                .resizeCols()\r\n                .resizeBulk();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Resize sticky header\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        resizeContainer: function () {\r\n            var listingWidth = this.getListingWidth();\r\n\r\n            this.stickyListingNode.innerWidth(listingWidth);\r\n            this.stickyListingNode.find(this.tableSelector).innerWidth(this.getTableWidth());\r\n\r\n            if (this.stickyToolbarNode) {\r\n                this.stickyToolbarNode.innerWidth(listingWidth);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Resize sticky cols\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        resizeCols: function () {\r\n            var cols = this.listingNode.find(this.columnSelector);\r\n\r\n            this.stickyListingNode.find(this.columnSelector).each(function (ind) {\r\n                var originalColWidth =  $(cols[ind]).width();\r\n\r\n                $(this).width(originalColWidth);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Resize bulk row header\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        resizeBulk: function () {\r\n            var bulk = this.containerNode.find(this.bulkRowHeaderSelector)[0];\r\n\r\n            if (bulk) {\r\n                $(bulk).innerWidth(this.getListingWidth());\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Reset viewport to the top of listing\r\n         */\r\n        resetToTop: function () {\r\n            var posOfTopEl = this.getTopElement().offset().top - this.getOtherStickyElementsSize() || 0;\r\n\r\n            $(window).scrollTop(posOfTopEl);\r\n        },\r\n\r\n        /**\r\n         * Adjust sticky header offset\r\n         *\r\n         * @param {Number} val\r\n         * @returns {Object} Chainable.\r\n         */\r\n        adjustOffset: function (val) {\r\n            val = val || this.listingNode.scrollLeft();\r\n            this.stickyListingNode.offset({\r\n                left: this.listingNode.offset().left - val\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Adjust both DataGridCap position\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        adjustDataGridCapPositions: function () {\r\n            this.adjustLeftDataGridCapPos()\r\n                .adjustRightDataGridCapPos();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Adjust left DataGridCap position\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        adjustLeftDataGridCapPos: function () {\r\n            this.leftDataGridCap.offset({\r\n                left: this.listingNode.offset().left - this.leftDataGridCap.width()\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Adjust right DataGridCap position\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        adjustRightDataGridCapPos: function () {\r\n            this.rightDataGridCap.offset({\r\n                left: this.listingNode.offset().left + this.listingNode.width()\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Hides the oiginal toolbar opened dropdowns/collapsibles etc\r\n         */\r\n        collapseOriginalElements: function () {\r\n            this.toolbarNode\r\n                .find(this.toolbarCollapsiblesSelector)\r\n                .css('visibility', 'hidden');\r\n            $(this.listingNode.find(this.bulkRowSelector)[0]).css('visibility', 'hidden');\r\n        },\r\n\r\n        /**\r\n         * Restores the oiginal toolbar opened dropdowns/collapsibles etc\r\n         */\r\n        restoreOriginalElements: function () {\r\n            this.toolbarNode\r\n                .find(this.toolbarCollapsiblesSelector)\r\n                .css('visibility', 'visible');\r\n            $(this.listingNode.find(this.bulkRowSelector)[0]).css('visibility', 'visible');\r\n        },\r\n\r\n        /**\r\n         * Toggle the visibility of sticky header\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        toggleContainerVisibility: function () {\r\n            this.visible = !this.visible;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks position of the listing to know if need to show/hide sticky header\r\n         *\r\n         * @returns {Boolean} whether the visibility of the sticky header was toggled.\r\n         */\r\n        checkPos: function () {\r\n            var isSticky = this.visible,\r\n                mustBeSticky = this.getMustBeSticky(),\r\n                needChange = isSticky !== mustBeSticky;\r\n\r\n            if (needChange) {\r\n                if (mustBeSticky) {\r\n                    this.collapseOriginalElements();\r\n                    this.toggleContainerVisibility();\r\n                    this.adjustContainerElemsWidth()\r\n                        .adjustOffset()\r\n                        .adjustDataGridCapPositions();\r\n\r\n                } else {\r\n                    this.toggleContainerVisibility();\r\n                    this.restoreOriginalElements();\r\n                }\r\n            }\r\n\r\n            return needChange;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/lib/collapsible.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'uiComponent'\r\n], function (Component) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            opened: false,\r\n            collapsible: true\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties.\r\n         *\r\n         * @returns {Collapsible} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('opened');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Toggles value of the 'opened' property.\r\n         *\r\n         * @returns {Collapsible} Chainable.\r\n         */\r\n        toggleOpened: function () {\r\n            this.opened() ?\r\n                this.close() :\r\n                this.open();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Sets 'opened' flag to false.\r\n         *\r\n         * @returns {Collapsible} Chainable.\r\n         */\r\n        close: function () {\r\n            if (this.collapsible) {\r\n                this.opened(false);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Sets 'opened' flag to true.\r\n         *\r\n         * @returns {Collapsible} Chainable.\r\n         */\r\n        open: function () {\r\n            if (this.collapsible) {\r\n                this.opened(true);\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/lib/key-codes.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return {\r\n        13: 'enterKey',\r\n        27: 'escapeKey',\r\n        40: 'pageDownKey',\r\n        38: 'pageUpKey',\r\n        32: 'spaceKey',\r\n        9:  'tabKey',\r\n        37: 'pageLeftKey',\r\n        39: 'pageRightKey',\r\n        17: 'ctrlKey',\r\n        18: 'altKey',\r\n        16: 'shiftKey',\r\n        191: 'forwardSlashKey',\r\n        66: 'bKey',\r\n        73: 'iKey',\r\n        85: 'uKey'\r\n    };\r\n});\r\n","Magento_Ui/js/lib/spinner.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    var selector = '[data-role=\"spinner\"]',\r\n        spinner = $(selector);\r\n\r\n    return {\r\n        /**\r\n         * Show spinner.\r\n         */\r\n        show: function () {\r\n            spinner.show();\r\n        },\r\n\r\n        /**\r\n         * Hide spinner.\r\n         */\r\n        hide: function () {\r\n            spinner.hide();\r\n        },\r\n\r\n        /**\r\n         * Get spinner by selector.\r\n         *\r\n         * @param {String} id\r\n         * @return {jQuery}\r\n         */\r\n        get: function (id) {\r\n            return $(selector + '[data-component=\"' + id + '\"]');\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/core/class.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    'mage/utils/wrapper'\r\n], function (_, utils, wrapper) {\r\n    'use strict';\r\n\r\n    var Class;\r\n\r\n    /**\r\n     * Returns property of an object if\r\n     * it's his own property.\r\n     *\r\n     * @param {Object} obj - Object whose property should be retrieved.\r\n     * @param {String} prop - Name of the property.\r\n     * @returns {*} Value of the property or false.\r\n     */\r\n    function getOwn(obj, prop) {\r\n        return _.isObject(obj) && obj.hasOwnProperty(prop) && obj[prop];\r\n    }\r\n\r\n    /**\r\n     * Creates constructor function which allows\r\n     * initialization without usage of a 'new' operator.\r\n     *\r\n     * @param {Object} protoProps - Prototypal properties of a new constructor.\r\n     * @param {Function} constructor\r\n     * @returns {Function} Created constructor.\r\n     */\r\n    function createConstructor(protoProps, constructor) {\r\n        var UiClass = constructor;\r\n\r\n        if (!UiClass) {\r\n\r\n            /**\r\n             * Default constructor function.\r\n             */\r\n            UiClass = function () {\r\n                var obj = this;\r\n\r\n                if (!_.isObject(obj) || Object.getPrototypeOf(obj) !== UiClass.prototype) {\r\n                    obj = Object.create(UiClass.prototype);\r\n                }\r\n\r\n                obj.initialize.apply(obj, arguments);\r\n\r\n                return obj;\r\n            };\r\n        }\r\n\r\n        UiClass.prototype = protoProps;\r\n        UiClass.prototype.constructor = UiClass;\r\n\r\n        return UiClass;\r\n    }\r\n\r\n    Class = createConstructor({\r\n\r\n        /**\r\n         * Entry point to the initialization of constructor's instance.\r\n         *\r\n         * @param {Object} [options={}]\r\n         * @returns {Class} Chainable.\r\n         */\r\n        initialize: function (options) {\r\n            this.initConfig(options);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Recursively extends data specified in constructors' 'defaults'\r\n         * property with provided options object. Evaluates resulting\r\n         * object using string templates (see: mage/utils/template.js).\r\n         *\r\n         * @param {Object} [options={}]\r\n         * @returns {Class} Chainable.\r\n         */\r\n        initConfig: function (options) {\r\n            var defaults    = this.constructor.defaults,\r\n                config      = utils.extend({}, defaults, options || {}),\r\n                ignored     = config.ignoreTmpls || {},\r\n                cached      = utils.omit(config, ignored);\r\n\r\n            config = utils.template(config, this, false, true);\r\n\r\n            _.each(cached, function (value, key) {\r\n                utils.nested(config, key, value);\r\n            });\r\n\r\n            return _.extend(this, config);\r\n        }\r\n    });\r\n\r\n    _.extend(Class, {\r\n        defaults: {\r\n            ignoreTmpls: {\r\n                templates: true\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Creates new constructor based on a current prototype properties,\r\n         * extending them with properties specified in 'exender' object.\r\n         *\r\n         * @param {Object} [extender={}]\r\n         * @returns {Function} New constructor.\r\n         */\r\n        extend: function (extender) {\r\n            var parent      = this,\r\n                parentProto = parent.prototype,\r\n                childProto  = Object.create(parentProto),\r\n                child       = createConstructor(childProto, getOwn(extender, 'constructor')),\r\n                defaults;\r\n\r\n            extender = extender || {};\r\n            defaults = extender.defaults;\r\n\r\n            delete extender.defaults;\r\n\r\n            _.each(extender, function (method, name) {\r\n                childProto[name] = wrapper.wrapSuper(parentProto[name], method);\r\n            });\r\n\r\n            child.defaults = utils.extend({}, parent.defaults || {});\r\n\r\n            if (defaults) {\r\n                utils.extend(child.defaults, defaults);\r\n                extender.defaults = defaults;\r\n            }\r\n\r\n            return _.extend(child, {\r\n                __super__:  parentProto,\r\n                extend:     parent.extend\r\n            });\r\n        }\r\n    });\r\n\r\n    return Class;\r\n});\r\n","Magento_Ui/js/lib/core/collection.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'mageUtils',\r\n    'uiRegistry',\r\n    'uiElement'\r\n], function (_, utils, registry, Element) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Removes non plain object items from the specified array.\r\n     *\r\n     * @param {Array} container - Array whose value should be filtered.\r\n     * @returns {Array}\r\n     */\r\n    function compact(container) {\r\n        return _.values(container).filter(utils.isObject);\r\n    }\r\n\r\n    /**\r\n     * Defines index of an item in a specified container.\r\n     *\r\n     * @param {*} item - Item whose index should be defined.\r\n     * @param {Array} container - Container upon which to perform search.\r\n     * @returns {Number}\r\n     */\r\n    function _findIndex(item, container) {\r\n        var index = _.findKey(container, function (value) {\r\n            return value === item;\r\n        });\r\n\r\n        if (typeof index === 'undefined') {\r\n            index = _.findKey(container, function (value) {\r\n                return value && value.name === item;\r\n            });\r\n        }\r\n\r\n        return typeof index === 'undefined' ? -1 : index;\r\n    }\r\n\r\n    /**\r\n     * Inserts specified item into container at a specified position.\r\n     *\r\n     * @param {*} item - Item to be inserted into container.\r\n     * @param {Array} container - Container of items.\r\n     * @param {*} [position=-1] - Position at which item should be inserted.\r\n     *      Position can represent:\r\n     *          - specific index in container\r\n     *          - item which might already be present in container\r\n     *          - structure with one of these properties: after, before\r\n     * @returns {Boolean|*}\r\n     *      - true if element has changed its' position\r\n     *      - false if nothing has changed\r\n     *      - inserted value if it wasn't present in container\r\n     */\r\n    function _insertAt(item, container, position) {\r\n        var currentIndex = _findIndex(item, container),\r\n            newIndex,\r\n            target;\r\n\r\n        if (typeof position === 'undefined') {\r\n            position = -1;\r\n        } else if (typeof position === 'string') {\r\n            position = isNaN(+position) ? position : +position;\r\n        }\r\n\r\n        newIndex = position;\r\n\r\n        if (~currentIndex) {\r\n            target = container.splice(currentIndex, 1)[0];\r\n\r\n            if (typeof item === 'string') {\r\n                item = target;\r\n            }\r\n        }\r\n\r\n        if (typeof position !== 'number') {\r\n            target = position.after || position.before || position;\r\n\r\n            newIndex = _findIndex(target, container);\r\n\r\n            if (~newIndex && (position.after || newIndex >= currentIndex)) {\r\n                newIndex++;\r\n            }\r\n        }\r\n\r\n        if (newIndex < 0) {\r\n            newIndex += container.length + 1;\r\n        }\r\n\r\n        container[newIndex] ?\r\n            container.splice(newIndex, 0, item) :\r\n            container[newIndex] = item;\r\n\r\n        return !~currentIndex ? item : currentIndex !== newIndex;\r\n    }\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            template: 'ui/collection',\r\n            _elems: [],\r\n            ignoreTmpls: {\r\n                childDefaults: true\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties.\r\n         *\r\n         * @returns {Model} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe({\r\n                    elems: []\r\n                });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Called when another element was added to current component.\r\n         *\r\n         * @param {Object} elem - Instance of an element that was added.\r\n         * @returns {Collection} Chainable.\r\n         */\r\n        initElement: function (elem) {\r\n            elem.initContainer(this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Returns instance of a child found by provided index.\r\n         *\r\n         * @param {String} index - Index of a child.\r\n         * @returns {Object}\r\n         */\r\n        getChild: function (index) {\r\n            return _.findWhere(this.elems(), {\r\n                index: index\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Requests specified components to insert\r\n         * them into 'elems' array starting from provided position.\r\n         *\r\n         * @param {(String|Array)} elems - Name of the component to insert.\r\n         * @param {Number} [position=-1] - Position at which to insert elements.\r\n         * @returns {Collection} Chainable.\r\n         */\r\n        insertChild: function (elems, position) {\r\n            var container   = this._elems,\r\n                insert      = this._insert.bind(this),\r\n                update;\r\n\r\n            if (!Array.isArray(elems)) {\r\n                elems = [elems];\r\n            }\r\n\r\n            elems.map(function (item) {\r\n                return item.elem ?\r\n                    _insertAt(item.elem, container, item.position) :\r\n                    _insertAt(item, container, position);\r\n            }).forEach(function (item) {\r\n                if (item === true) {\r\n                    update = true;\r\n                } else if (_.isString(item)) {\r\n                    registry.get(item, insert);\r\n                } else if (utils.isObject(item)) {\r\n                    insert(item);\r\n                }\r\n            });\r\n\r\n            if (update) {\r\n                this._updateCollection();\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes specified child from collection.\r\n         *\r\n         * @param {(Object|String)} elem - Child or index of a child to be removed.\r\n         * @param {Boolean} skipUpdate - skip collection update when element to be destroyed.\r\n         *\r\n         * @returns {Collection} Chainable.\r\n         */\r\n        removeChild: function (elem, skipUpdate) {\r\n            if (_.isString(elem)) {\r\n                elem = this.getChild(elem);\r\n            }\r\n\r\n            if (elem) {\r\n                utils.remove(this._elems, elem);\r\n\r\n                if (!skipUpdate) {\r\n                    this._updateCollection();\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Destroys collection children with its' elements.\r\n         */\r\n        destroyChildren: function () {\r\n            this.elems.each(function (elem) {\r\n                elem.destroy(true);\r\n            });\r\n\r\n            this._updateCollection();\r\n        },\r\n\r\n        /**\r\n         * Clear data. Call method \"clear\"\r\n         * in child components\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        clear: function () {\r\n            var elems = this.elems();\r\n\r\n            _.each(elems, function (elem) {\r\n                if (_.isFunction(elem.clear)) {\r\n                    elem.clear();\r\n                }\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if specified child exists in collection.\r\n         *\r\n         * @param {String} index - Index of a child.\r\n         * @returns {Boolean}\r\n         */\r\n        hasChild: function (index) {\r\n            return !!this.getChild(index);\r\n        },\r\n\r\n        /**\r\n         * Creates 'async' wrapper for the specified child\r\n         * using uiRegistry 'async' method and caches it\r\n         * in a '_requested' components  object.\r\n         *\r\n         * @param {String} index - Index of a child.\r\n         * @returns {Function} Async module wrapper.\r\n         */\r\n        requestChild: function (index) {\r\n            var name = this.formChildName(index);\r\n\r\n            return this.requestModule(name);\r\n        },\r\n\r\n        /**\r\n         * Creates complete child name based on a provided index.\r\n         *\r\n         * @param {String} index - Index of a child.\r\n         * @returns {String}\r\n         */\r\n        formChildName: function (index) {\r\n            return this.name + '.' + index;\r\n        },\r\n\r\n        /**\r\n         * Retrieves requested region.\r\n         * Creates region if it was not created yet\r\n         *\r\n         * @returns {ObservableArray}\r\n         */\r\n        getRegion: function (name) {\r\n            var regions = this.regions = this.regions || {};\r\n\r\n            if (!regions[name]) {\r\n                regions[name] = [];\r\n\r\n                this.observe.call(regions, name);\r\n            }\r\n\r\n            return regions[name];\r\n        },\r\n\r\n        /**\r\n         * Checks if the specified region has any elements\r\n         * associated with it.\r\n         *\r\n         * @param {String} name\r\n         * @returns {Boolean}\r\n         */\r\n        regionHasElements: function (name) {\r\n            var region = this.getRegion(name);\r\n\r\n            return region().length > 0;\r\n        },\r\n\r\n        /**\r\n         * Replaces specified regions' data with a provided one.\r\n         * Creates region if it was not created yet.\r\n         *\r\n         * @param {Array} items - New regions' data.\r\n         * @param {String} name - Name of the region.\r\n         * @returns {Collection} Chainable.\r\n         */\r\n        updateRegion: function (items, name) {\r\n            this.getRegion(name)(items);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Destroys collection along with its' elements.\r\n         */\r\n        destroy: function () {\r\n            this._super();\r\n\r\n            this.elems.each('destroy');\r\n        },\r\n\r\n        /**\r\n         * Inserts provided component into 'elems' array at a specified position.\r\n         * @private\r\n         *\r\n         * @param {Object} elem - Element to insert.\r\n         */\r\n        _insert: function (elem) {\r\n            var index = _.findKey(this._elems, function (value) {\r\n                return value === elem.name;\r\n            });\r\n\r\n            if (typeof index !== 'undefined') {\r\n                this._elems[index] = elem;\r\n            }\r\n\r\n            this._updateCollection()\r\n                .initElement(elem);\r\n        },\r\n\r\n        /**\r\n         * Synchronizes multiple elements arrays with a core '_elems' container.\r\n         * Performs elemets grouping by theirs 'displayArea' property.\r\n         * @private\r\n         *\r\n         * @returns {Collection} Chainable.\r\n         */\r\n        _updateCollection: function () {\r\n            var _elems = compact(this._elems),\r\n                grouped;\r\n\r\n            grouped = _elems.filter(function (elem) {\r\n                return elem.displayArea && _.isString(elem.displayArea);\r\n            });\r\n            grouped = _.groupBy(grouped, 'displayArea');\r\n\r\n            _.each(grouped, this.updateRegion, this);\r\n\r\n            _.each(this.regions, function (items) {\r\n                var hasObsoleteComponents = items().length && !_.intersection(_elems, items()).length;\r\n\r\n                if (hasObsoleteComponents) {\r\n                    items.removeAll();\r\n                }\r\n            });\r\n\r\n            this.elems(_elems);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Tries to call specified method of a current component,\r\n         * otherwise delegates attempt to its' children.\r\n         *\r\n         * @param {String} target - Name of the method.\r\n         * @param {...*} parameters - Arguments that will be passed to method.\r\n         * @returns {*} Result of the method calls.\r\n         */\r\n        delegate: function (target) {\r\n            var args = _.toArray(arguments);\r\n\r\n            target = this[target];\r\n\r\n            if (_.isFunction(target)) {\r\n                return target.apply(this, args.slice(1));\r\n            }\r\n\r\n            return this._delegate(args);\r\n        },\r\n\r\n        /**\r\n         * Calls 'delegate' method of all of it's children components.\r\n         * @private\r\n         *\r\n         * @param {Array} args - An array of arguments to pass to the next delegation call.\r\n         * @returns {Array} An array of delegation results.\r\n         */\r\n        _delegate: function (args) {\r\n            var result;\r\n\r\n            result = this.elems.map(function (elem) {\r\n                var target;\r\n\r\n                if (!_.isFunction(elem.delegate)) {\r\n                    target = elem[args[0]];\r\n\r\n                    if (_.isFunction(target)) {\r\n                        return target.apply(elem, args.slice(1));\r\n                    }\r\n                } else {\r\n                    return elem.delegate.apply(elem, args);\r\n                }\r\n            });\r\n\r\n            return _.flatten(result);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/lib/core/events.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'underscore'\r\n], function (ko, _) {\r\n    'use strict';\r\n\r\n    var eventsMap = new WeakMap();\r\n\r\n    /**\r\n     * Returns events map or a specific event\r\n     * data associated with a provided object.\r\n     *\r\n     * @param {Object} obj - Key in the events weakmap.\r\n     * @param {String} [name] - Name of the event.\r\n     * @returns {Map|Array|Boolean}\r\n     */\r\n    function getEvents(obj, name) {\r\n        var events = eventsMap.get(obj);\r\n\r\n        if (!events) {\r\n            return false;\r\n        }\r\n\r\n        return name ? events.get(name) : events;\r\n    }\r\n\r\n    /**\r\n     * Adds new event handler.\r\n     *\r\n     * @param {Object} obj - Key in the events weakmap.\r\n     * @param {String} ns - Callback namespace.\r\n     * @param {Function} callback - Event callback.\r\n     * @param {String} name - Name of the event.\r\n     */\r\n    function addHandler(obj, ns, callback, name) {\r\n        var events      = getEvents(obj),\r\n            observable,\r\n            data;\r\n\r\n        observable = !ko.isObservable(obj[name]) ?\r\n            ko.getObservable(obj, name) :\r\n            obj[name];\r\n\r\n        if (observable) {\r\n            observable.subscribe(callback);\r\n\r\n            return;\r\n        }\r\n\r\n        if (!events) {\r\n            events = new Map();\r\n\r\n            eventsMap.set(obj, events);\r\n        }\r\n\r\n        data = {\r\n            callback: callback,\r\n            ns: ns\r\n        };\r\n\r\n        events.has(name) ?\r\n            events.get(name).push(data) :\r\n            events.set(name, [data]);\r\n    }\r\n\r\n    /**\r\n     * Invokes provided callbacks with a specified arguments.\r\n     *\r\n     * @param {Array} handlers\r\n     * @param {Array} args\r\n     * @returns {Boolean}\r\n     */\r\n    function trigger(handlers, args) {\r\n        var bubble = true,\r\n            callback;\r\n\r\n        handlers.forEach(function (handler) {\r\n            callback = handler.callback;\r\n\r\n            if (callback.apply(null, args) === false) {\r\n                bubble = false;\r\n            }\r\n        });\r\n\r\n        return bubble;\r\n    }\r\n\r\n    return {\r\n\r\n        /**\r\n         * Calls callback when name event is triggered.\r\n         * @param  {String}   events\r\n         * @param  {Function} callback\r\n         * @param  {Function} ns\r\n         * @return {Object} reference to this\r\n         */\r\n        on: function (events, callback, ns) {\r\n            var iterator;\r\n\r\n            if (arguments.length < 2) {\r\n                ns = callback;\r\n            }\r\n\r\n            iterator = addHandler.bind(null, this, ns);\r\n\r\n            _.isObject(events) ?\r\n                _.each(events, iterator) :\r\n                iterator(callback, events);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removed callback from listening to target event\r\n         * @param  {String} ns\r\n         * @return {Object} reference to this\r\n         */\r\n        off: function (ns) {\r\n            var storage = getEvents(this);\r\n\r\n            if (!storage) {\r\n                return this;\r\n            }\r\n\r\n            storage.forEach(function (handlers, name) {\r\n                handlers = handlers.filter(function (handler) {\r\n                    return !ns ? false : handler.ns !== ns;\r\n                });\r\n\r\n                handlers.length ?\r\n                    storage.set(name, handlers) :\r\n                    storage.delete(name);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Triggers event and executes all attached callbacks.\r\n         *\r\n         * @param {String} name - Name of the event to be triggered.\r\n         * @returns {Boolean}\r\n         */\r\n        trigger: function (name) {\r\n            var handlers,\r\n                args;\r\n\r\n            handlers = getEvents(this, name),\r\n            args = _.toArray(arguments).slice(1);\r\n\r\n            if (!handlers || !name) {\r\n                return true;\r\n            }\r\n\r\n            return trigger(handlers, args);\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/core/element/element.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'mageUtils',\r\n    'uiRegistry',\r\n    'uiEvents',\r\n    'uiClass',\r\n    './links',\r\n    '../storage/local'\r\n], function (ko, _, utils, registry, Events, Class, links) {\r\n    'use strict';\r\n\r\n    var Element;\r\n\r\n    /**\r\n     * Creates observable property using knockouts'\r\n     * 'observableArray' or 'observable' methods,\r\n     * depending on a type of 'value' parameter.\r\n     *\r\n     * @param {Object} obj - Object to whom property belongs.\r\n     * @param {String} key - Key of the property.\r\n     * @param {*} value - Initial value.\r\n     */\r\n    function observable(obj, key, value) {\r\n        var method = Array.isArray(value) ? 'observableArray' : 'observable';\r\n\r\n        if (_.isFunction(obj[key]) && !ko.isObservable(obj[key])) {\r\n            return;\r\n        }\r\n\r\n        if (ko.isObservable(value)) {\r\n            value = value();\r\n        }\r\n\r\n        ko.isObservable(obj[key]) ?\r\n            obj[key](value) :\r\n            obj[key] = ko[method](value);\r\n    }\r\n\r\n    /**\r\n     * Creates observable property using 'track' method.\r\n     *\r\n     * @param {Object} obj - Object to whom property belongs.\r\n     * @param {String} key - Key of the property.\r\n     * @param {*} value - Initial value.\r\n     */\r\n    function accessor(obj, key, value) {\r\n        if (_.isFunction(obj[key]) || ko.isObservable(obj[key])) {\r\n            return;\r\n        }\r\n\r\n        obj[key] = value;\r\n\r\n        if (!ko.es5.isTracked(obj, key)) {\r\n            ko.track(obj, [key]);\r\n        }\r\n    }\r\n\r\n    Element = _.extend({\r\n        defaults: {\r\n            _requested: {},\r\n            containers: [],\r\n            exports: {},\r\n            imports: {},\r\n            links: {},\r\n            listens: {},\r\n            name: '',\r\n            ns: '${ $.name.split(\".\")[0] }',\r\n            provider: '',\r\n            registerNodes: true,\r\n            source: null,\r\n            statefull: {},\r\n            template: '',\r\n            tracks: {},\r\n            storageConfig: {\r\n                provider: 'localStorage',\r\n                namespace: '${ $.name }',\r\n                path: '${ $.storageConfig.provider }:${ $.storageConfig.namespace }'\r\n            },\r\n            maps: {\r\n                imports: {},\r\n                exports: {}\r\n            },\r\n            modules: {\r\n                storage: '${ $.storageConfig.provider }'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes model instance.\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .initObservable()\r\n                .initModules()\r\n                .initStatefull()\r\n                .initLinks()\r\n                .initUnique();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties.\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            _.each(this.tracks, function (enabled, key) {\r\n                if (enabled) {\r\n                    this.track(key);\r\n                }\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Parses 'modules' object and creates\r\n         * async wrappers for specified components.\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        initModules: function () {\r\n            _.each(this.modules, function (name, property) {\r\n                if (name) {\r\n                    this[property] = this.requestModule(name);\r\n                }\r\n            }, this);\r\n\r\n            if (!_.isFunction(this.source)) {\r\n                this.source = registry.get(this.provider);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Called when current element was injected to another component.\r\n         *\r\n         * @param {Object} parent - Instance of a 'parent' component.\r\n         * @returns {Collection} Chainable.\r\n         */\r\n        initContainer: function (parent) {\r\n            this.containers.push(parent);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes statefull properties\r\n         * based on the keys of 'statefull' object.\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        initStatefull: function () {\r\n            _.each(this.statefull, function (path, key) {\r\n                if (path) {\r\n                    this.setStatefull(key, path);\r\n                }\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes links between properties.\r\n         *\r\n         * @returns {Element} Chainbale.\r\n         */\r\n        initLinks: function () {\r\n            return this.setListeners(this.listens)\r\n                       .setLinks(this.links, 'imports')\r\n                       .setLinks(this.links, 'exports')\r\n                       .setLinks(this.exports, 'exports')\r\n                       .setLinks(this.imports, 'imports');\r\n        },\r\n\r\n        /**\r\n         * Initializes listeners of the unique property.\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        initUnique: function () {\r\n            var update = this.onUniqueUpdate.bind(this),\r\n                uniqueNs = this.uniqueNs;\r\n\r\n            this.hasUnique = this.uniqueProp && uniqueNs;\r\n\r\n            if (this.hasUnique) {\r\n                this.source.on(uniqueNs, update, this.name);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Makes specified property to be stored automatically.\r\n         *\r\n         * @param {String} key - Name of the property\r\n         *      that will be stored.\r\n         * @param {String} [path=key] - Path to the property in storage.\r\n         * @returns {Element} Chainable.\r\n         */\r\n        setStatefull: function (key, path) {\r\n            var link = {};\r\n\r\n            path        = !_.isString(path) || !path ? key : path;\r\n            link[key]   = this.storageConfig.path + '.' + path;\r\n\r\n            this.setLinks(link, 'imports')\r\n                .setLinks(link, 'exports');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Updates property specified in uniqueNs\r\n         * if elements' unique property is set to 'true'.\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        setUnique: function () {\r\n            var property = this.uniqueProp;\r\n\r\n            if (this[property]()) {\r\n                this.source.set(this.uniqueNs, this.name);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Creates 'async' wrapper for the specified component\r\n         * using uiRegistry 'async' method and caches it\r\n         * in a '_requested' components  object.\r\n         *\r\n         * @param {String} name - Name of requested component.\r\n         * @returns {Function} Async module wrapper.\r\n         */\r\n        requestModule: function (name) {\r\n            var requested = this._requested;\r\n\r\n            if (!requested[name]) {\r\n                requested[name] = registry.async(name);\r\n            }\r\n\r\n            return requested[name];\r\n        },\r\n\r\n        /**\r\n         * Returns path to elements' template.\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getTemplate: function () {\r\n            return this.template;\r\n        },\r\n\r\n        /**\r\n         * Checks if template was specified for an element.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        hasTemplate: function () {\r\n            return !!this.template;\r\n        },\r\n\r\n        /**\r\n         * Returns value of the nested property.\r\n         *\r\n         * @param {String} path - Path to the property.\r\n         * @returns {*} Value of the property.\r\n         */\r\n        get: function (path) {\r\n            return utils.nested(this, path);\r\n        },\r\n\r\n        /**\r\n         * Sets provided value as a value of the specified nested property.\r\n         * Triggers changes notifications, if value has mutated.\r\n         *\r\n         * @param {String} path - Path to property.\r\n         * @param {*} value - New value of the property.\r\n         * @returns {Element} Chainable.\r\n         */\r\n        set: function (path, value) {\r\n            var data = this.get(path),\r\n                diffs;\r\n\r\n            diffs = !_.isFunction(data) && !this.isTracked(path) ?\r\n                utils.compare(data, value, path) :\r\n                false;\r\n\r\n            utils.nested(this, path, value);\r\n\r\n            if (diffs) {\r\n                this._notifyChanges(diffs);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes nested property from the object.\r\n         *\r\n         * @param {String} path - Path to the property.\r\n         * @returns {Element} Chainable.\r\n         */\r\n        remove: function (path) {\r\n            var data = utils.nested(this, path),\r\n                diffs;\r\n\r\n            if (_.isUndefined(data) || _.isFunction(data)) {\r\n                return this;\r\n            }\r\n\r\n            diffs = utils.compare(data, undefined, path);\r\n\r\n            utils.nestedRemove(this, path);\r\n\r\n            this._notifyChanges(diffs);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Creates observable properties for the current object.\r\n         *\r\n         * If 'useTrack' flag is set to 'true' then each property will be\r\n         * created with a ES5 get/set accessor descriptors, instead of\r\n         * making them an observable functions.\r\n         * See 'knockout-es5' library for more information.\r\n         *\r\n         * @param {Boolean} [useAccessors=false] - Whether to create an\r\n         *      observable function or to use property accesessors.\r\n         * @param {(Object|String|Array)} properties - List of observable properties.\r\n         * @returns {Element} Chainable.\r\n         *\r\n         * @example Sample declaration and equivalent knockout methods.\r\n         *      this.key = 'value';\r\n         *      this.array = ['value'];\r\n         *\r\n         *      this.observe(['key', 'array']);\r\n         *      =>\r\n         *          this.key = ko.observable('value');\r\n         *          this.array = ko.observableArray(['value']);\r\n         *\r\n         * @example Another syntaxes of the previous example.\r\n         *      this.observe({\r\n         *          key: 'value',\r\n         *          array: ['value']\r\n         *      });\r\n         */\r\n        observe: function (useAccessors, properties) {\r\n            var model = this,\r\n                trackMethod;\r\n\r\n            if (typeof useAccessors !== 'boolean') {\r\n                properties   = useAccessors;\r\n                useAccessors = false;\r\n            }\r\n\r\n            trackMethod = useAccessors ? accessor : observable;\r\n\r\n            if (_.isString(properties)) {\r\n                properties = properties.split(' ');\r\n            }\r\n\r\n            if (Array.isArray(properties)) {\r\n                properties.forEach(function (key) {\r\n                    trackMethod(model, key, model[key]);\r\n                });\r\n            } else if (typeof properties === 'object') {\r\n                _.each(properties, function (value, key) {\r\n                    trackMethod(model, key, value);\r\n                });\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Delegates call to 'observe' method but\r\n         * with a predefined 'useAccessors' flag.\r\n         *\r\n         * @param {(String|Array|Object)} properties - List of observable properties.\r\n         * @returns {Element} Chainable.\r\n         */\r\n        track: function (properties) {\r\n            this.observe(true, properties);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if specified property is tracked.\r\n         *\r\n         * @param {String} property - Property to be checked.\r\n         * @returns {Boolean}\r\n         */\r\n        isTracked: function (property) {\r\n            return ko.es5.isTracked(this, property);\r\n        },\r\n\r\n        /**\r\n         * Invokes subscribers for the provided changes.\r\n         *\r\n         * @param {Object} diffs - Object with changes descriptions.\r\n         * @returns {Element} Chainable.\r\n         */\r\n        _notifyChanges: function (diffs) {\r\n            diffs.changes.forEach(function (change) {\r\n                this.trigger(change.path, change.value, change);\r\n            }, this);\r\n\r\n            _.each(diffs.containers, function (changes, name) {\r\n                var value = utils.nested(this, name);\r\n\r\n                this.trigger(name, value, changes);\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Extracts all stored data and sets it to element.\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        restore: function () {\r\n            var ns = this.storageConfig.namespace,\r\n                storage = this.storage();\r\n\r\n            if (storage) {\r\n                utils.extend(this, storage.get(ns));\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Stores value of the specified property in components' storage module.\r\n         *\r\n         * @param {String} property\r\n         * @param {*} [data=this[property]]\r\n         * @returns {Element} Chainable.\r\n         */\r\n        store: function (property, data) {\r\n            var ns = this.storageConfig.namespace,\r\n                path = utils.fullPath(ns, property);\r\n\r\n            if (arguments.length < 2) {\r\n                data = this.get(property);\r\n            }\r\n\r\n            this.storage('set', path, data);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Extracts specified property from storage.\r\n         *\r\n         * @param {String} [property] - Name of the property\r\n         *      to be extracted. If not specified then all of the\r\n         *      stored will be returned.\r\n         * @returns {*}\r\n         */\r\n        getStored: function (property) {\r\n            var ns = this.storageConfig.namespace,\r\n                path = utils.fullPath(ns, property),\r\n                storage = this.storage(),\r\n                data;\r\n\r\n            if (storage) {\r\n                data = storage.get(path);\r\n            }\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Removes stored property.\r\n         *\r\n         * @param {String} property - Property to be removed from storage.\r\n         * @returns {Element} Chainable.\r\n         */\r\n        removeStored: function (property) {\r\n            var ns = this.storageConfig.namespace,\r\n                path = utils.fullPath(ns, property);\r\n\r\n            this.storage('remove', path);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Destroys current instance along with all of its' children.\r\n         * @param {Boolean} skipUpdate - skip collection update when element to be destroyed.\r\n         */\r\n        destroy: function (skipUpdate) {\r\n            this._dropHandlers()\r\n                ._clearRefs(skipUpdate);\r\n        },\r\n\r\n        /**\r\n         * Removes events listeners.\r\n         * @private\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        _dropHandlers: function () {\r\n            this.off();\r\n\r\n            if (_.isFunction(this.source)) {\r\n                this.source().off(this.name);\r\n            } else if (this.source) {\r\n                this.source.off(this.name);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes all references to current instance and\r\n         * calls 'destroy' method on all of its' children.\r\n         * @private\r\n         * @param {Boolean} skipUpdate - skip collection update when element to be destroyed.\r\n         *\r\n         * @returns {Element} Chainable.\r\n         */\r\n        _clearRefs: function (skipUpdate) {\r\n            registry.remove(this.name);\r\n\r\n            this.containers.forEach(function (parent) {\r\n                parent.removeChild(this, skipUpdate);\r\n            }, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Overrides 'EventsBus.trigger' method to implement events bubbling.\r\n         *\r\n         * @param {...*} arguments - Any number of arguments that should be passed to the events' handler.\r\n         * @returns {Boolean} False if event bubbling was canceled.\r\n         */\r\n        bubble: function () {\r\n            var args = _.toArray(arguments),\r\n                bubble = this.trigger.apply(this, args),\r\n                result;\r\n\r\n            if (!bubble) {\r\n                return false;\r\n            }\r\n\r\n            this.containers.forEach(function (parent) {\r\n                result = parent.bubble.apply(parent, args);\r\n\r\n                if (result === false) {\r\n                    bubble = false;\r\n                }\r\n            });\r\n\r\n            return !!bubble;\r\n        },\r\n\r\n        /**\r\n         * Callback which fires when property under uniqueNs has changed.\r\n         */\r\n        onUniqueUpdate: function (name) {\r\n            var active = name === this.name,\r\n                property = this.uniqueProp;\r\n\r\n            this[property](active);\r\n        },\r\n\r\n        /**\r\n         * Clean data form data source.\r\n         *\r\n         * @returns {Element}\r\n         */\r\n        cleanData: function () {\r\n            if (this.source && this.source.componentType === 'dataSource') {\r\n                if (this.elems) {\r\n                    _.each(this.elems(), function (val) {\r\n                        val.cleanData();\r\n                    });\r\n                } else {\r\n                    this.source.remove(this.dataScope);\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Fallback data.\r\n         */\r\n        cacheData: function () {\r\n            this.cachedComponent = utils.copy(this);\r\n        },\r\n\r\n        /**\r\n         * Update configuration in component.\r\n         *\r\n         * @param {*} oldValue\r\n         * @param {*} newValue\r\n         * @param {String} path - path to value.\r\n         * @returns {Element}\r\n         */\r\n        updateConfig: function (oldValue, newValue, path) {\r\n            var names = path.split('.'),\r\n                index = _.lastIndexOf(names, 'config') + 1;\r\n\r\n            names = names.splice(index, names.length - index).join('.');\r\n            this.set(names, newValue);\r\n\r\n            return this;\r\n        }\r\n    }, Events, links);\r\n\r\n    return Class.extend(Element);\r\n});\r\n","Magento_Ui/js/lib/core/element/links.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'mageUtils',\r\n    'uiRegistry'\r\n], function (ko, _, utils, registry) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Parse provided data.\r\n     *\r\n     * @param {String} placeholder\r\n     * @param {String} data\r\n     * @param {String} direction\r\n     * @returns {Boolean|Object}\r\n     */\r\n    function parseData(placeholder, data, direction) {\r\n        if (typeof data !== 'string') {\r\n            return false;\r\n        }\r\n\r\n        data = data.split(':');\r\n\r\n        if (!data[0]) {\r\n            return false;\r\n        }\r\n\r\n        if (!data[1]) {\r\n            data[1] = data[0];\r\n            data[0] = placeholder;\r\n        }\r\n\r\n        return {\r\n            target: data[0],\r\n            property: data[1],\r\n            direction: direction\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Check if value not empty.\r\n     *\r\n     * @param {*} value\r\n     * @returns {Boolean}\r\n     */\r\n    function notEmpty(value) {\r\n        return typeof value !== 'undefined' && value != null;\r\n    }\r\n\r\n    /**\r\n     * Update value for linked component.\r\n     *\r\n     * @param {Object} data\r\n     * @param {Object} owner\r\n     * @param {Object} target\r\n     * @param {*} value\r\n     */\r\n    function updateValue(data, owner, target, value) {\r\n        var component = target.component,\r\n            property = target.property,\r\n            linked = data.linked;\r\n\r\n        if (data.mute) {\r\n            return;\r\n        }\r\n\r\n        if (linked) {\r\n            linked.mute = true;\r\n        }\r\n\r\n        if (owner.component !== target.component) {\r\n            value = data.inversionValue ? !utils.copy(value) : utils.copy(value);\r\n        }\r\n\r\n        component.set(property, value, owner);\r\n\r\n        if (property === 'disabled' && value) {\r\n            component.set('validate', value, owner);\r\n        }\r\n\r\n        if (linked) {\r\n            linked.mute = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get value form owner component property.\r\n     *\r\n     * @param {Object} owner\r\n     * @returns {*}\r\n     */\r\n    function getValue(owner) {\r\n        var component = owner.component,\r\n            property = owner.property;\r\n\r\n        return component.get(property);\r\n    }\r\n\r\n    /**\r\n     * Format provided params to object.\r\n     *\r\n     * @param {String} ownerComponent\r\n     * @param {String} targetComponent\r\n     * @param {String} ownerProp\r\n     * @param {String} targetProp\r\n     * @param {String} direction\r\n     * @returns {Object}\r\n     */\r\n    function form(ownerComponent, targetComponent, ownerProp, targetProp, direction) {\r\n        var result,\r\n            tmp;\r\n\r\n        result = {\r\n            owner: {\r\n                component: ownerComponent,\r\n                property: ownerProp\r\n            },\r\n            target: {\r\n                component: targetComponent,\r\n                property: targetProp\r\n            }\r\n        };\r\n\r\n        if (direction === 'exports') {\r\n            tmp = result.owner;\r\n            result.owner = result.target;\r\n            result.target = tmp;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Set data to linked property.\r\n     *\r\n     * @param {Object} map\r\n     * @param {Object} data\r\n     */\r\n    function setLinked(map, data) {\r\n        var match;\r\n\r\n        if (!map) {\r\n            return;\r\n        }\r\n\r\n        match = _.findWhere(map, {\r\n            linked: false,\r\n            target: data.target,\r\n            property: data.property\r\n        });\r\n\r\n        if (match) {\r\n            match.linked = data;\r\n            data.linked = match;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set data by direction.\r\n     *\r\n     * @param {Object} maps\r\n     * @param {String} property\r\n     * @param {Object} data\r\n     */\r\n    function setData(maps, property, data) {\r\n        var direction   = data.direction,\r\n            map         = maps[direction];\r\n\r\n        data.linked = false;\r\n\r\n        (map[property] = map[property] || []).push(data);\r\n\r\n        direction = direction === 'imports' ? 'exports' : 'imports';\r\n\r\n        setLinked(maps[direction][property], data);\r\n    }\r\n\r\n    /**\r\n     * Set links for components.\r\n     *\r\n     * @param {String} target\r\n     * @param {String} owner\r\n     * @param {Object} data\r\n     * @param {String} property\r\n     * @param {Boolean} immediate\r\n     */\r\n    function setLink(target, owner, data, property, immediate) {\r\n        var direction = data.direction,\r\n            formated = form(target, owner, data.property, property, direction),\r\n            callback,\r\n            value;\r\n\r\n        owner = formated.owner;\r\n        target = formated.target;\r\n\r\n        callback = updateValue.bind(null, data, owner, target);\r\n\r\n        owner.component.on(owner.property, callback, target.component.name);\r\n\r\n        if (immediate) {\r\n            value = getValue(owner);\r\n\r\n            if (notEmpty(value)) {\r\n                updateValue(data, owner, target, value);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Transfer data between components.\r\n     *\r\n     * @param {Object} owner\r\n     * @param {Object} data\r\n     */\r\n    function transfer(owner, data) {\r\n        var args = _.toArray(arguments);\r\n\r\n        if (data.target.substr(0, 1) === '!') {\r\n            data.target = data.target.substr(1);\r\n            data.inversionValue = true;\r\n        }\r\n\r\n        if (owner.name === data.target) {\r\n            args.unshift(owner);\r\n\r\n            setLink.apply(null, args);\r\n        } else {\r\n            registry.get(data.target, function (target) {\r\n                args.unshift(target);\r\n\r\n                setLink.apply(null, args);\r\n            });\r\n        }\r\n    }\r\n\r\n    return {\r\n        /**\r\n         * Assign listeners.\r\n         *\r\n         * @param {Object} listeners\r\n         * @returns {Object} Chainable\r\n         */\r\n        setListeners: function (listeners) {\r\n            var owner = this,\r\n                data;\r\n\r\n            _.each(listeners, function (callbacks, sources) {\r\n                sources = sources.split(' ');\r\n                callbacks = callbacks.split(' ');\r\n\r\n                sources.forEach(function (target) {\r\n                    callbacks.forEach(function (callback) {//eslint-disable-line max-nested-callbacks\r\n                        data = parseData(owner.name, target, 'imports');\r\n\r\n                        if (data) {\r\n                            setData(owner.maps, callback, data);\r\n                            transfer(owner, data, callback);\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Set links in provided direction.\r\n         *\r\n         * @param {Object} links\r\n         * @param {String} direction\r\n         * @returns {Object} Chainable\r\n         */\r\n        setLinks: function (links, direction) {\r\n            var owner = this,\r\n                property,\r\n                data;\r\n\r\n            for (property in links) {\r\n                if (links.hasOwnProperty(property)) {\r\n                    data = parseData(owner.name, links[property], direction);\r\n\r\n                    if (data) {//eslint-disable-line max-depth\r\n                        setData(owner.maps, property, data);\r\n                        transfer(owner, data, property, true);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this;\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/core/storage/local.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'underscore',\r\n    'uiRegistry',\r\n    'mageUtils',\r\n    'uiEvents'\r\n], function (_, registry, utils, EventsBus) {\r\n    'use strict';\r\n\r\n    var root = 'appData',\r\n        localStorage,\r\n        hasSupport,\r\n        storage;\r\n\r\n    /**\r\n     * Flag which indicates whether localStorage is supported.\r\n     */\r\n    hasSupport = (function () {\r\n        var key = '_storageSupported';\r\n\r\n        try {\r\n            localStorage = window.localStorage;\r\n            localStorage.setItem(key, 'true');\r\n\r\n            if (localStorage.getItem(key) === 'true') {\r\n                localStorage.removeItem(key);\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    })();\r\n\r\n    if (!hasSupport) {\r\n        localStorage = {\r\n            _data: {},\r\n\r\n            /**\r\n             * Sets value of the specified item.\r\n             *\r\n             * @param {String} key - Key of the property.\r\n             * @param {*} value - Properties' value.\r\n             */\r\n            setItem: function (key, value) {\r\n                this._data[key] = value + '';\r\n            },\r\n\r\n            /**\r\n             * Retrieves specified item.\r\n             *\r\n             * @param {String} key - Key of the property to be retrieved.\r\n             */\r\n            getItem: function (key) {\r\n                return this._data[key];\r\n            },\r\n\r\n            /**\r\n             * Removes specified item.\r\n             *\r\n             * @param {String} key - Key of the property to be removed.\r\n             */\r\n            removeItem: function (key) {\r\n                delete this._data[key];\r\n            },\r\n\r\n            /**\r\n             * Removes all items.\r\n             */\r\n            clear: function () {\r\n                this._data = {};\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Extracts and parses data stored in localStorage by the\r\n     * key specified in 'root' variable.\r\n     *\r\n     * @returns {Object}\r\n     */\r\n    function getRoot() {\r\n        var data = localStorage.getItem(root),\r\n            result = {};\r\n\r\n        if (!_.isNull(data) && typeof data != 'undefined') {\r\n            result = JSON.parse(data);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Writes provided data to the localStorage.\r\n     *\r\n     * @param {*} data - Data to be stored.\r\n     */\r\n    function setRoot(data) {\r\n        localStorage.setItem(root, JSON.stringify(data));\r\n    }\r\n\r\n    /**\r\n     * Provides methods to work with a localStorage\r\n     * as a single nested structure.\r\n     */\r\n    storage = _.extend({\r\n\r\n        /**\r\n         * Retrieves value of the specified property.\r\n         *\r\n         * @param {String} path - Path to the property.\r\n         *\r\n         * @example Retrieving data.\r\n         *      localStorage =>\r\n         *          'appData' => '\r\n         *              \"one\": {\"two\": \"three\"}\r\n         *          '\r\n         *      storage.get('one.two')\r\n         *      => \"three\"\r\n         *\r\n         *      storage.get('one')\r\n         *      => {\"two\": \"three\"}\r\n         */\r\n        get: function (path) {\r\n            var data = getRoot();\r\n\r\n            return utils.nested(data, path);\r\n        },\r\n\r\n        /**\r\n         * Sets specified data to the localStorage.\r\n         *\r\n         * @param {String} path - Path of the property.\r\n         * @param {*} value - Value of the property.\r\n         *\r\n         * @example Setting data.\r\n         *      storage.set('one.two', 'four');\r\n         *      => localStorage =>\r\n         *          'appData' => '\r\n         *              \"one\": {\"two\": \"four\"}\r\n         *          '\r\n         */\r\n        set: function (path, value) {\r\n            var data = getRoot();\r\n\r\n            utils.nested(data, path, value);\r\n\r\n            setRoot(data);\r\n        },\r\n\r\n        /**\r\n         * Removes specified data from the localStorage.\r\n         *\r\n         * @param {String} path - Path to the property that should be removed.\r\n         *\r\n         * @example Removing data.\r\n         *      storage.remove('one.two', 'four');\r\n         *      => localStorage =>\r\n         *          'appData' => '\r\n         *              \"one\": {}\r\n         *          '\r\n         */\r\n        remove: function (path) {\r\n            var data = getRoot();\r\n\r\n            utils.nestedRemove(data, path);\r\n\r\n            setRoot(data);\r\n        }\r\n    }, EventsBus);\r\n\r\n    registry.set('localStorage', storage);\r\n\r\n    return storage;\r\n});\r\n","Magento_Ui/js/lib/knockout/bootstrap.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/** Loads all available knockout bindings, sets custom template engine, initializes knockout on page */\r\n\r\ndefine([\r\n    'ko',\r\n    './template/engine',\r\n    'knockoutjs/knockout-es5',\r\n    './bindings/bootstrap',\r\n    './extender/observable_array',\r\n    './extender/bound-nodes',\r\n    'domReady!'\r\n], function (ko, templateEngine) {\r\n    'use strict';\r\n\r\n    ko.uid = 0;\r\n\r\n    ko.setTemplateEngine(templateEngine);\r\n    ko.applyBindings();\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/after-render.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    '../template/renderer'\r\n], function (ko, renderer) {\r\n    'use strict';\r\n\r\n    ko.bindingHandlers.afterRender = {\r\n\r\n        /**\r\n         * Binding init callback.\r\n         */\r\n        init: function (element, valueAccessor, allBindings, viewModel) {\r\n            var callback = valueAccessor();\r\n\r\n            if (typeof callback === 'function') {\r\n                callback.call(viewModel, element, viewModel);\r\n            }\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('afterRender');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/autoselect.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    '../template/renderer'\r\n], function (ko, $, renderer) {\r\n    'use strict';\r\n\r\n    /**\r\n     * 'Focus' event handler.\r\n     *\r\n     * @param {EventObject} e\r\n     */\r\n    function onFocus(e) {\r\n        e.target.select();\r\n    }\r\n\r\n    ko.bindingHandlers.autoselect = {\r\n\r\n        /**\r\n         * Adds event handler which automatically\r\n         * selects inputs' element text when field gets focused.\r\n         */\r\n        init: function (element, valueAccessor) {\r\n            var enabled = ko.unwrap(valueAccessor());\r\n\r\n            if (enabled !== false) {\r\n                $(element).on('focus', onFocus);\r\n            }\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('autoselect');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/bind-html.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'mage/apply/main',\r\n    '../template/renderer'\r\n], function (ko, _, mage, renderer) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Set html to node element.\r\n     *\r\n     * @param {HTMLElement} el - Element to apply bindings to.\r\n     * @param {Function} html - Observable html content.\r\n     */\r\n    function setHtml(el, html) {\r\n        ko.utils.emptyDomNode(el);\r\n        html = ko.utils.unwrapObservable(html);\r\n\r\n        if (!_.isNull(html) && !_.isUndefined(html)) {\r\n            if (!_.isString(html)) {\r\n                html = html.toString();\r\n            }\r\n\r\n            el.innerHTML = html;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Apply bindings and call magento attributes parser.\r\n     *\r\n     * @param {HTMLElement} el - Element to apply bindings to.\r\n     * @param {ko.bindingContext} ctx - Instance of ko.bindingContext, passed to binding initially.\r\n     */\r\n    function applyComponents(el, ctx) {\r\n        ko.utils.arrayForEach(el.childNodes, ko.cleanNode);\r\n        ko.applyBindingsToDescendants(ctx, el);\r\n        mage.apply();\r\n    }\r\n\r\n    ko.bindingHandlers.bindHtml = {\r\n        /**\r\n         * Scope binding's init method.\r\n         *\r\n         * @returns {Object} - Knockout declaration for it to let binding control descendants.\r\n         */\r\n        init: function () {\r\n            return {\r\n                controlsDescendantBindings: true\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Reads params passed to binding.\r\n         * Set html to node element, apply bindings and call magento attributes parser.\r\n         *\r\n         * @param {HTMLElement} el - Element to apply bindings to.\r\n         * @param {Function} valueAccessor - Function that returns value, passed to binding.\r\n         * @param {Object} allBindings - Object, which represents all bindings applied to element.\r\n         * @param {Object} viewModel - Object, which represents view model binded to el.\r\n         * @param {ko.bindingContext} bindingContext - Instance of ko.bindingContext, passed to binding initially.\r\n         */\r\n        update: function (el, valueAccessor, allBindings, viewModel, bindingContext) {\r\n            setHtml(el, valueAccessor());\r\n            applyComponents(el, bindingContext);\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('bindHtml');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/bootstrap.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine(function (require) {\r\n    'use strict';\r\n\r\n    var renderer = require('../template/renderer');\r\n\r\n    renderer.addAttribute('repeat', renderer.handlers.wrapAttribute);\r\n\r\n    renderer.addAttribute('outerfasteach', {\r\n        binding: 'fastForEach',\r\n        handler: renderer.handlers.wrapAttribute\r\n    });\r\n\r\n    renderer\r\n        .addNode('repeat')\r\n        .addNode('fastForEach');\r\n\r\n    return {\r\n        resizable:      require('./resizable'),\r\n        i18n:           require('./i18n'),\r\n        scope:          require('./scope'),\r\n        range:          require('./range'),\r\n        mageInit:       require('./mage-init'),\r\n        keyboard:       require('./keyboard'),\r\n        optgroup:       require('./optgroup'),\r\n        afterRender:     require('./after-render'),\r\n        autoselect:     require('./autoselect'),\r\n        datepicker:     require('./datepicker'),\r\n        outerClick:     require('./outer_click'),\r\n        fadeVisible:    require('./fadeVisible'),\r\n        collapsible:    require('./collapsible'),\r\n        staticChecked:  require('./staticChecked'),\r\n        simpleChecked:  require('./simple-checked'),\r\n        bindHtml:       require('./bind-html'),\r\n        tooltip:        require('./tooltip'),\r\n        repeat:         require('knockoutjs/knockout-repeat'),\r\n        fastForEach:    require('knockoutjs/knockout-fast-foreach'),\r\n        colorPicker:    require('./color-picker')\r\n    };\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/collapsible.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'underscore',\r\n    '../template/renderer'\r\n], function (ko, $, _, renderer) {\r\n    'use strict';\r\n\r\n    var collapsible,\r\n        defaults;\r\n\r\n    defaults = {\r\n        closeOnOuter: true,\r\n        onTarget: false,\r\n        openClass: '_active',\r\n        as: '$collapsible'\r\n    };\r\n\r\n    collapsible = {\r\n\r\n        /**\r\n         * Sets 'opened' property to true.\r\n         */\r\n        open: function () {\r\n            this.opened(true);\r\n        },\r\n\r\n        /**\r\n         * Sets 'opened' property to false.\r\n         */\r\n        close: function () {\r\n            this.opened(false);\r\n        },\r\n\r\n        /**\r\n         * Toggles value of the 'opened' property.\r\n         */\r\n        toggle: function () {\r\n            this.opened(!this.opened());\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Document click handler which in case if event target is not\r\n     * a descendant of provided container element, closes collapsible model.\r\n     *\r\n     * @param {HTMLElement} container\r\n     * @param {Object} model\r\n     * @param {EventObject} e\r\n     */\r\n    function onOuterClick(container, model, e) {\r\n        var target = e.target;\r\n\r\n        if (target !== container && !container.contains(target)) {\r\n            model.close();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates 'css' binding which toggles\r\n     * class specified in 'name' parameter.\r\n     *\r\n     * @param {Object} model\r\n     * @param {String} name\r\n     * @returns {Object}\r\n     */\r\n    function getClassBinding(model, name) {\r\n        var binding = {};\r\n\r\n        binding[name] = model.opened;\r\n\r\n        return {\r\n            css: binding\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Prepares configuration for the binding based\r\n     * on a default properties and provided options.\r\n     *\r\n     * @param {Object} [options={}]\r\n     * @returns {Object} Complete instance configuration.\r\n     */\r\n    function buildConfig(options) {\r\n        if (typeof options !== 'object') {\r\n            options = {};\r\n        }\r\n\r\n        return _.extend({}, defaults, options);\r\n    }\r\n\r\n    ko.bindingHandlers.collapsible = {\r\n\r\n        /**\r\n         * Initializes 'collapsible' binding.\r\n         */\r\n        init: function (element, valueAccessor, allBindings, viewModel, bindingCtx) {\r\n            var $collapsible = Object.create(collapsible),\r\n                config = buildConfig(valueAccessor()),\r\n                outerClick,\r\n                bindings;\r\n\r\n            _.bindAll($collapsible, 'open', 'close', 'toggle');\r\n\r\n            $collapsible.opened = ko.observable(!!config.opened);\r\n\r\n            bindingCtx[config.as] = $collapsible;\r\n\r\n            if (config.closeOnOuter) {\r\n                outerClick = onOuterClick.bind(null, element, $collapsible);\r\n\r\n                $(document).on('click', outerClick);\r\n\r\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\r\n                    $(document).off('click', outerClick);\r\n                });\r\n            }\r\n\r\n            if (config.openClass) {\r\n                bindings = getClassBinding($collapsible, config.openClass);\r\n\r\n                ko.applyBindingsToNode(element, bindings, bindingCtx);\r\n            }\r\n\r\n            if (config.onTarget) {\r\n                $(element).on('click', $collapsible.toggle);\r\n            }\r\n\r\n            if (viewModel && _.isFunction(viewModel.on)) {\r\n                viewModel.on({\r\n                    close:          $collapsible.close,\r\n                    open:           $collapsible.open,\r\n                    toggleOpened:   $collapsible.toggle\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.closeCollapsible = {\r\n\r\n        /**\r\n         * Creates listener for the click event on provided DOM element,\r\n         * which closes associated with it collapsible model.\r\n         */\r\n        init: function (element, valueAccessor, allBindings, viewModel, bindingCtx) {\r\n            var name = valueAccessor() || defaults.as,\r\n                $collapsible = bindingCtx[name];\r\n\r\n            if ($collapsible) {\r\n                $(element).on('click', $collapsible.close);\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.openCollapsible = {\r\n\r\n        /**\r\n         * Creates listener for the click event on provided DOM element,\r\n         * which opens associated with it collapsible model.\r\n         */\r\n        init: function (element, valueAccessor, allBindings, viewModel, bindingCtx) {\r\n            var name = valueAccessor() || defaults.as,\r\n                $collapsible = bindingCtx[name];\r\n\r\n            if ($collapsible) {\r\n                $(element).on('click', $collapsible.open);\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.toggleCollapsible = {\r\n\r\n        /**\r\n         * Creates listener for the click event on provided DOM element,\r\n         * which toggles associated with it collapsible model.\r\n         */\r\n        init: function (element, valueAccessor, allBindings, viewModel, bindingCtx) {\r\n            var name = valueAccessor() || defaults.as,\r\n                $collapsible = bindingCtx[name];\r\n\r\n            if ($collapsible) {\r\n                $(element).on('click', $collapsible.toggle);\r\n            }\r\n        }\r\n    };\r\n\r\n    renderer\r\n        .addAttribute('collapsible')\r\n        .addAttribute('openCollapsible')\r\n        .addAttribute('closeCollapsible')\r\n        .addAttribute('toggleCollapsible');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/color-picker.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    '../template/renderer',\r\n    'spectrum',\r\n    'tinycolor'\r\n], function (ko, $, renderer, spectrum, tinycolor) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Change color picker status to be enabled or disabled\r\n     *\r\n     * @param {HTMLElement} element - Element to apply colorpicker enable/disable status to.\r\n     * @param {Object} viewModel - Object, which represents view model binded to el.\r\n     */\r\n    function changeColorPickerStateBasedOnViewModel(element, viewModel) {\r\n        $(element).spectrum(viewModel.disabled() ? 'disable' : 'enable');\r\n    }\r\n\r\n    ko.bindingHandlers.colorPicker = {\r\n        /**\r\n         * Binding init callback.\r\n         *\r\n         * @param {*} element\r\n         * @param {Function} valueAccessor\r\n         * @param {Function} allBindings\r\n         * @param {Object} viewModel\r\n         */\r\n        init: function (element, valueAccessor, allBindings, viewModel) {\r\n            var config = valueAccessor(),\r\n\r\n                /** change value */\r\n                changeValue = function (value) {\r\n                    if (value == null) {\r\n                        value = '';\r\n                    }\r\n                    config.value(value.toString());\r\n                };\r\n\r\n            config.change = changeValue;\r\n\r\n            config.hide = changeValue;\r\n\r\n            /** show value */\r\n            config.show = function () {\r\n                if (!viewModel.focused()) {\r\n                    viewModel.focused(true);\r\n                }\r\n\r\n                return true;\r\n            };\r\n\r\n            $(element).spectrum(config);\r\n\r\n            changeColorPickerStateBasedOnViewModel(element, viewModel);\r\n        },\r\n\r\n        /**\r\n         * Reads params passed to binding, parses component declarations.\r\n         * Fetches for those found and attaches them to the new context.\r\n         *\r\n         * @param {HTMLElement} element - Element to apply bindings to.\r\n         * @param {Function} valueAccessor - Function that returns value, passed to binding.\r\n         * @param {Object} allBindings - Object, which represents all bindings applied to element.\r\n         * @param {Object} viewModel - Object, which represents view model binded to element.\r\n         */\r\n        update: function (element, valueAccessor, allBindings, viewModel) {\r\n            var config = valueAccessor();\r\n\r\n            /** Initialise value as empty if it is undefined when color picker input is reset **/\r\n            if (config.value() === undefined) {\r\n                config.value('');\r\n            }\r\n\r\n            if (tinycolor(config.value()).isValid() || config.value() === '') {\r\n                $(element).spectrum('set', config.value());\r\n\r\n                if (config.value() !== '') {\r\n                    config.value($(element).spectrum('get').toString());\r\n                }\r\n            }\r\n\r\n            changeColorPickerStateBasedOnViewModel(element, viewModel);\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('colorPicker');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/datepicker.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/** Creates datepicker binding and registers in to ko.bindingHandlers object */\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'jquery',\r\n    'mage/translate'\r\n], function (ko, _, $, $t) {\r\n    'use strict';\r\n\r\n    var defaults = {\r\n        dateFormat: 'mm\\/dd\\/yyyy',\r\n        showsTime: false,\r\n        timeFormat: null,\r\n        buttonImage: null,\r\n        buttonImageOnly: null,\r\n        buttonText: $t('Select Date')\r\n    };\r\n\r\n    ko.bindingHandlers.datepicker = {\r\n        /**\r\n         * Initializes calendar widget on element and stores it's value to observable property.\r\n         * Datepicker binding takes either observable property or object\r\n         *  { storage: {ko.observable}, options: {Object} }.\r\n         * For more info about options take a look at \"mage/calendar\" and jquery.ui.datepicker widget.\r\n         * @param {HTMLElement} el - Element, that binding is applied to\r\n         * @param {Function} valueAccessor - Function that returns value, passed to binding\r\n         * @param {object} allBindings\r\n         * @param {object} viewModel\r\n         * @param {object} bindingContext\r\n         */\r\n        init: function (el, valueAccessor, allBindings, viewModel, bindingContext) {\r\n            var config = valueAccessor(),\r\n                observable,\r\n                options = {};\r\n\r\n            _.extend(options, defaults);\r\n\r\n            if (typeof config === 'object') {\r\n                observable = config.storage;\r\n                _.extend(options, config.options);\r\n            } else {\r\n                observable = config;\r\n            }\r\n\r\n            require(['mage/calendar'], function () {\r\n                $(el).calendar(options);\r\n\r\n                ko.utils.registerEventHandler(el, 'change', function () {\r\n                    observable(this.value);\r\n                });\r\n            });\r\n\r\n            if (bindingContext.$data) {\r\n                bindingContext.$data.value.subscribe(function (newVal) {\r\n                    if (!newVal) {\r\n                        $(el).val('');\r\n                    }\r\n                }, this);\r\n            }\r\n\r\n\r\n        },\r\n\r\n        /**\r\n         * Update calendar widget on element and stores it's value to observable property.\r\n         * Datepicker binding takes either observable property or object\r\n         *  { storage: {ko.observable}, options: {Object} }.\r\n         * @param {HTMLElement} element - Element, that binding is applied to\r\n         * @param {Function} valueAccessor - Function that returns value, passed to binding\r\n         */\r\n        update: function (element, valueAccessor) {\r\n            var config = valueAccessor(),\r\n                $element = $(element),\r\n                observable,\r\n                options = {},\r\n                newVal;\r\n\r\n            _.extend(options, defaults);\r\n\r\n            if (typeof config === 'object') {\r\n                observable = config.storage;\r\n                _.extend(options, config.options);\r\n            } else {\r\n                observable = config;\r\n            }\r\n\r\n            require(['moment', 'mage/utils/misc', 'mage/calendar'], function (moment, utils) {\r\n                if (_.isEmpty(observable())) {\r\n                    newVal = null;\r\n                } else {\r\n                    newVal = moment(\r\n                        observable(),\r\n                        utils.convertToMomentFormat(\r\n                            options.dateFormat + (options.showsTime ? ' ' + options.timeFormat : '')\r\n                        )\r\n                    ).toDate();\r\n                }\r\n\r\n                if (!options.timeOnly) {\r\n                    $element.datepicker('setDate', newVal);\r\n                    $element.trigger('blur');\r\n                }\r\n            });\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/fadeVisible.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'ko'\r\n], function ($, ko) {\r\n    'use strict';\r\n\r\n    ko.bindingHandlers.fadeVisible = {\r\n        /**\r\n         * Initially set the element to be instantly visible/hidden depending on the value.\r\n         *\r\n         * @param {HTMLElement} element\r\n         * @param {Function} valueAccessor\r\n         */\r\n        init: function (element, valueAccessor) {\r\n            var value = valueAccessor();\r\n\r\n            // Use \"unwrapObservable\" so we can handle values that may or may not be observable\r\n            $(element).toggle(ko.unwrap(value));\r\n        },\r\n\r\n        /**\r\n         * Whenever the value subsequently changes, slowly fade the element in or out.\r\n         *\r\n         * @param {HTMLElement} element\r\n         * @param {Function} valueAccessor\r\n         */\r\n        update: function (element, valueAccessor) {\r\n            var value = valueAccessor();\r\n\r\n            ko.unwrap(value) ? $(element).fadeIn() : $(element).fadeOut();\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/i18n.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'ko',\r\n    'module',\r\n    '../template/renderer',\r\n    'mage/translate'\r\n], function ($, ko, module, renderer) {\r\n    'use strict';\r\n\r\n    var locations = {\r\n            'legend': 'Caption for the fieldset element',\r\n            'label': 'Label for an input element.',\r\n            'button': 'Push button',\r\n            'a': 'Link label',\r\n            'b': 'Bold text',\r\n            'strong': 'Strong emphasized text',\r\n            'i': 'Italic text',\r\n            'em': 'Emphasized text',\r\n            'u': 'Underlined text',\r\n            'sup': 'Superscript text',\r\n            'sub': 'Subscript text',\r\n            'span': 'Span element',\r\n            'small': 'Smaller text',\r\n            'big': 'Bigger text',\r\n            'address': 'Contact information',\r\n            'blockquote': 'Long quotation',\r\n            'q': 'Short quotation',\r\n            'cite': 'Citation',\r\n            'caption': 'Table caption',\r\n            'abbr': 'Abbreviated phrase',\r\n            'acronym': 'An acronym',\r\n            'var': 'Variable part of a text',\r\n            'dfn': 'Term',\r\n            'strike': 'Strikethrough text',\r\n            'del': 'Deleted text',\r\n            'ins': 'Inserted text',\r\n            'h1': 'Heading level 1',\r\n            'h2': 'Heading level 2',\r\n            'h3': 'Heading level 3',\r\n            'h4': 'Heading level 4',\r\n            'h5': 'Heading level 5',\r\n            'h6': 'Heading level 6',\r\n            'center': 'Centered text',\r\n            'select': 'List options',\r\n            'img': 'Image',\r\n            'input': 'Form element'\r\n        },\r\n\r\n        /**\r\n         * Generates [data-translate] attribute's value\r\n         * @param {Object} translationData\r\n         * @param {String} location\r\n         */\r\n        composeTranslateAttr = function (translationData, location) {\r\n            var obj = [{\r\n                'shown': translationData.shown,\r\n                'translated': translationData.translated,\r\n                'original': translationData.original,\r\n                'location': locations[location] || 'Text'\r\n            }];\r\n\r\n            return JSON.stringify(obj);\r\n        },\r\n\r\n        /**\r\n         * Sets text for the element\r\n         * @param {Object} el\r\n         * @param {String} text\r\n         */\r\n        setText = function (el, text) {\r\n            $(el).text(text);\r\n        },\r\n\r\n        /**\r\n         * Sets [data-translate] attribute for the element\r\n         * @param {Object} el - The element which is binded\r\n         * @param {String} original - The original value of the element\r\n         */\r\n        setTranslateProp = function (el, original) {\r\n            var location = $(el).prop('tagName').toLowerCase(),\r\n                translated = $.mage.__(original),\r\n                translationData = {\r\n                    shown: translated,\r\n                    translated: translated,\r\n                    original: original\r\n                },\r\n                translateAttr = composeTranslateAttr(translationData, location);\r\n\r\n            $(el).attr('data-translate', translateAttr);\r\n\r\n            setText(el, translationData.shown);\r\n        },\r\n\r\n        /**\r\n         * Checks if node represents ko virtual node (nodeType === 8, nodeName === '#comment').\r\n         *\r\n         * @param {HTMLElement} node\r\n         * @returns {Boolean}\r\n         */\r\n        isVirtualElement = function (node) {\r\n            return node.nodeType === 8;\r\n        },\r\n\r\n        /**\r\n        * Checks if it's real DOM element\r\n        * in case of virtual element, returns span wrapper\r\n        * @param {Object} el\r\n        * @param {bool} isUpdate\r\n        * @return {Object} el\r\n        */\r\n        getRealElement = function (el, isUpdate) {\r\n            if (isVirtualElement(el)) {\r\n                if (isUpdate) {\r\n                    return $(el).next('span');\r\n                }\r\n\r\n                return $('<span></span>').insertAfter(el);\r\n            }\r\n\r\n            return el;\r\n        },\r\n\r\n        /**\r\n         * execute i18n binding\r\n         * @param {Object} element\r\n         * @param {Function} valueAccessor\r\n         * @param {bool} isUpdate\r\n         */\r\n        execute = function (element, valueAccessor, isUpdate) {\r\n            var original = ko.unwrap(valueAccessor() || ''),\r\n                el = getRealElement(element, isUpdate),\r\n                inlineTranslation = (module.config() || {}).inlineTranslation;\r\n\r\n            if (inlineTranslation) {\r\n                setTranslateProp(el, original);\r\n            } else {\r\n                setText(el, $.mage.__(original));\r\n            }\r\n        };\r\n\r\n    /**\r\n     * i18n binding\r\n     * @property {Function}  init\r\n     * @property {Function}  update\r\n     */\r\n    ko.bindingHandlers.i18n = {\r\n\r\n        /**\r\n         * init i18n binding\r\n         * @param {Object} element\r\n         * @param {Function} valueAccessor\r\n         */\r\n        init: function (element, valueAccessor) {\r\n            execute(element, valueAccessor);\r\n        },\r\n\r\n        /**\r\n         * update i18n binding\r\n         * @param {Object} element\r\n         * @param {Function} valueAccessor\r\n         */\r\n        update: function (element, valueAccessor) {\r\n            execute(element, valueAccessor, true);\r\n        }\r\n    };\r\n\r\n    ko.virtualElements.allowedBindings.i18n = true;\r\n\r\n    renderer\r\n        .addNode('translate', {\r\n            binding: 'i18n'\r\n        })\r\n        .addAttribute('translate', {\r\n            binding: 'i18n'\r\n        });\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/keyboard.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    '../template/renderer'\r\n], function (ko, renderer) {\r\n    'use strict';\r\n\r\n    ko.bindingHandlers.keyboard = {\r\n\r\n        /**\r\n         * Attaches keypress handlers to element\r\n         * @param {HTMLElement} el - Element, that binding is applied to\r\n         * @param {Function} valueAccessor - Function that returns value, passed to binding\r\n         * @param  {Object} allBindings - all bindings object\r\n         * @param  {Object} viewModel - reference to viewmodel\r\n         */\r\n        init: function (el, valueAccessor, allBindings, viewModel) {\r\n            var map = valueAccessor();\r\n\r\n            ko.utils.registerEventHandler(el, 'keyup', function (e) {\r\n                var callback = map[e.keyCode];\r\n\r\n                if (callback) {\r\n                    return callback.call(viewModel, e);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('keyboard');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/mage-init.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'mage/apply/main'\r\n], function (ko, _, mage) {\r\n    'use strict';\r\n\r\n    ko.bindingHandlers.mageInit = {\r\n        /**\r\n         * Initializes components assigned to HTML elements.\r\n         *\r\n         * @param {HTMLElement} el\r\n         * @param {Function} valueAccessor\r\n         */\r\n        init: function (el, valueAccessor) {\r\n            var data = valueAccessor();\r\n\r\n            _.each(data, function (config, component) {\r\n                mage.applyFor(el, config, component);\r\n            });\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/optgroup.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'mageUtils'\r\n    ], function (ko, utils) {\r\n    'use strict';\r\n\r\n    var captionPlaceholder = {},\r\n        optgroupTmpl = '<optgroup label=\"${ $.label }\"></optgroup>',\r\n        nbspRe = /&nbsp;/g,\r\n        optionsText,\r\n        optionsValue,\r\n        optionTitle;\r\n\r\n    ko.bindingHandlers.optgroup = {\r\n        /**\r\n         * @param {*} element\r\n         */\r\n        init: function (element) {\r\n            if (ko.utils.tagNameLower(element) !== 'select') {\r\n                throw new Error('options binding applies only to SELECT elements');\r\n            }\r\n\r\n            // Remove all existing <option>s.\r\n            while (element.length > 0) {\r\n                element.remove(0);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {*} element\r\n         * @param {*} valueAccessor\r\n         * @param {*} allBindings\r\n         */\r\n        update: function (element, valueAccessor, allBindings) {\r\n            var selectWasPreviouslyEmpty = element.length === 0,\r\n                previousScrollTop = !selectWasPreviouslyEmpty && element.multiple ? element.scrollTop : null,\r\n                includeDestroyed = allBindings.get('optionsIncludeDestroyed'),\r\n                arrayToDomNodeChildrenOptions = {},\r\n                captionValue,\r\n                unwrappedArray = ko.utils.unwrapObservable(valueAccessor()),\r\n                filteredArray,\r\n                previousSelectedValues,\r\n                itemUpdate = false,\r\n                callback = setSelectionCallback,//eslint-disable-line no-use-before-define\r\n                nestedOptionsLevel = -1;\r\n\r\n            optionsText = ko.utils.unwrapObservable(allBindings.get('optionsText')) || 'text';\r\n            optionsValue = ko.utils.unwrapObservable(allBindings.get('optionsValue')) || 'value';\r\n            optionTitle = optionsText + 'title';\r\n\r\n            if (element.multiple) {\r\n                previousSelectedValues = ko.utils.arrayMap(\r\n                    selectedOptions(),//eslint-disable-line no-use-before-define\r\n                    ko.selectExtensions.readValue\r\n                );\r\n            } else {\r\n                previousSelectedValues = element.selectedIndex >= 0 ?\r\n                    [ko.selectExtensions.readValue(element.options[element.selectedIndex])] :\r\n                    [];\r\n            }\r\n\r\n            if (unwrappedArray) {\r\n                if (typeof unwrappedArray.length === 'undefined') { // Coerce single value into array\r\n                    unwrappedArray = [unwrappedArray];\r\n                }\r\n\r\n                // Filter out any entries marked as destroyed\r\n                filteredArray = ko.utils.arrayFilter(unwrappedArray, function (item) {\r\n                    if (item && !item.label) {\r\n                        return false;\r\n                    }\r\n\r\n                    return includeDestroyed ||\r\n                        item === undefined ||\r\n                        item === null ||\r\n                        !ko.utils.unwrapObservable(item._destroy);\r\n                });\r\n                filteredArray.map(recursivePathBuilder, null);//eslint-disable-line no-use-before-define\r\n            }\r\n\r\n            /**\r\n             * @param {*} option\r\n             */\r\n            arrayToDomNodeChildrenOptions.beforeRemove = function (option) {\r\n                element.removeChild(option);\r\n            };\r\n\r\n            if (allBindings.has('optionsAfterRender')) {\r\n\r\n                /**\r\n                 * @param {*} arrayEntry\r\n                 * @param {*} newOptions\r\n                 */\r\n                callback = function (arrayEntry, newOptions) {\r\n                    setSelectionCallback(arrayEntry, newOptions);//eslint-disable-line no-use-before-define\r\n                    ko.dependencyDetection.ignore(\r\n                        allBindings.get('optionsAfterRender'),\r\n                        null,\r\n                        [newOptions[0],\r\n                        arrayEntry !== captionPlaceholder ? arrayEntry : undefined]\r\n                    );\r\n                };\r\n            }\r\n\r\n            filteredArray = formatOptions(filteredArray);//eslint-disable-line no-use-before-define\r\n            ko.utils.setDomNodeChildrenFromArrayMapping(\r\n                element,\r\n                filteredArray,\r\n                optionNodeFromArray,//eslint-disable-line no-use-before-define\r\n                arrayToDomNodeChildrenOptions,\r\n                callback\r\n            );\r\n\r\n            ko.dependencyDetection.ignore(function () {\r\n                var selectionChanged;\r\n\r\n                if (allBindings.get('valueAllowUnset') && allBindings.has('value')) {\r\n                    // The model value is authoritative, so make sure its value is the one selected\r\n                    ko.selectExtensions.writeValue(\r\n                        element,\r\n                        ko.utils.unwrapObservable(allBindings.get('value')),\r\n                        true /* allowUnset */\r\n                    );\r\n                } else {\r\n                    // Determine if the selection has changed as a result of updating the options list\r\n                    if (element.multiple) {\r\n                        // For a multiple-select box, compare the new selection count to the previous one\r\n                        // But if nothing was selected before, the selection can't have changed\r\n                        selectionChanged = previousSelectedValues.length &&\r\n                            selectedOptions().length < //eslint-disable-line no-use-before-define\r\n                            previousSelectedValues.length;\r\n                    } else {\r\n                        // For a single-select box, compare the current value to the previous value\r\n                        // But if nothing was selected before or nothing is selected now,\r\n                        // just look for a change in selection\r\n                        selectionChanged = previousSelectedValues.length && element.selectedIndex >= 0 ?\r\n                            ko.selectExtensions.readValue(element.options[element.selectedIndex]) !==\r\n                            previousSelectedValues[0] : previousSelectedValues.length || element.selectedIndex >= 0;\r\n                    }\r\n\r\n                    // Ensure consistency between model value and selected option.\r\n                    // If the dropdown was changed so that selection is no longer the same,\r\n                    // notify the value or selectedOptions binding.\r\n                    if (selectionChanged) {\r\n                        ko.utils.triggerEvent(element, 'change');\r\n                    }\r\n                }\r\n            });\r\n\r\n            /*eslint-enable max-len, no-use-before-define*/\r\n\r\n            if (previousScrollTop && Math.abs(previousScrollTop - element.scrollTop) > 20) {\r\n                element.scrollTop = previousScrollTop;\r\n            }\r\n\r\n            /**\r\n             * @returns {*}\r\n             */\r\n            function selectedOptions() {\r\n                return ko.utils.arrayFilter(element.options, function (node) {\r\n                    return node.selected;\r\n                });\r\n            }\r\n\r\n            /**\r\n             * @param {*} object\r\n             * @param {*} predicate\r\n             * @param {*} defaultValue\r\n             * @returns {*}\r\n             */\r\n            function applyToObject(object, predicate, defaultValue) {\r\n                var predicateType = typeof predicate;\r\n\r\n                if (predicateType === 'function') {   // run it against the data value\r\n                    return predicate(object);\r\n                } else if (predicateType === 'string') { // treat it as a property name on the data value\r\n                    return object[predicate];\r\n                }\r\n\r\n                return defaultValue;\r\n            }\r\n\r\n            /**\r\n             * @param {*} obj\r\n             */\r\n            function recursivePathBuilder(obj) {\r\n\r\n                obj[optionTitle] = (this && this[optionTitle] ? this[optionTitle] + '/' : '') + obj[optionsText].trim();\r\n\r\n                if (Array.isArray(obj[optionsValue])) {\r\n                    obj[optionsValue].map(recursivePathBuilder, obj);\r\n                }\r\n            }\r\n\r\n            /**\r\n             * @param {Array} arrayEntry\r\n             * @param {*} oldOptions\r\n             * @returns {*[]}\r\n             */\r\n            function optionNodeFromArray(arrayEntry, oldOptions) {\r\n                var option;\r\n\r\n                if (oldOptions.length) {\r\n                    previousSelectedValues = oldOptions[0].selected ?\r\n                        [ko.selectExtensions.readValue(oldOptions[0])] : [];\r\n                    itemUpdate = true;\r\n                }\r\n\r\n                if (arrayEntry === captionPlaceholder) { // empty value, label === caption\r\n                    option = element.ownerDocument.createElement('option');\r\n                    ko.utils.setTextContent(option, allBindings.get('optionsCaption'));\r\n                    ko.selectExtensions.writeValue(option, undefined);\r\n                } else if (typeof arrayEntry[optionsValue] === 'undefined') { // empty value === optgroup\r\n                    if (arrayEntry.__disableTmpl) {\r\n                        option = '<optgroup label=\"' + arrayEntry[optionsText] + '\"></optgroup>';\r\n                    } else {\r\n                        option = utils.template(optgroupTmpl, {\r\n                            label: arrayEntry[optionsText],\r\n                            title: arrayEntry[optionsText + 'title']\r\n                        });\r\n                    }\r\n                    option = ko.utils.parseHtmlFragment(option)[0];\r\n\r\n                } else {\r\n                    option = element.ownerDocument.createElement('option');\r\n                    option.setAttribute('data-title', arrayEntry[optionsText + 'title']);\r\n                    ko.selectExtensions.writeValue(option, arrayEntry[optionsValue]);\r\n                    ko.utils.setTextContent(option, arrayEntry[optionsText]);\r\n                }\r\n\r\n                return [option];\r\n            }\r\n\r\n            /**\r\n             * @param {*} newOptions\r\n             */\r\n            function setSelectionCallback(newOptions) {\r\n                var isSelected;\r\n\r\n                // IE6 doesn't like us to assign selection to OPTION nodes before they're added to the document.\r\n                // That's why we first added them without selection. Now it's time to set the selection.\r\n                if (previousSelectedValues.length && newOptions.value) {\r\n                    isSelected = ko.utils.arrayIndexOf(\r\n                        previousSelectedValues,\r\n                        ko.selectExtensions.readValue(newOptions.value)\r\n                    ) >= 0;\r\n\r\n                    ko.utils.setOptionNodeSelectionState(newOptions.value, isSelected);\r\n\r\n                    // If this option was changed from being selected during a single-item update, notify the change\r\n                    if (itemUpdate && !isSelected) {\r\n                        ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, 'change']);\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * @param {*} string\r\n             * @param {Number} times\r\n             * @returns {Array}\r\n             */\r\n            function strPad(string, times) {\r\n                return new Array(times + 1).join(string);\r\n            }\r\n\r\n            /**\r\n             * @param {*} options\r\n             * @returns {Array}\r\n             */\r\n            function formatOptions(options) {\r\n                var res = [];\r\n\r\n                nestedOptionsLevel++;\r\n\r\n                if (!nestedOptionsLevel) { // zero level\r\n                    // If caption is included, add it to the array\r\n                    if (allBindings.has('optionsCaption')) {\r\n                        captionValue = ko.utils.unwrapObservable(allBindings.get('optionsCaption'));\r\n                        // If caption value is null or undefined, don't show a caption\r\n                        if (//eslint-disable-line max-depth\r\n                            captionValue !== null &&\r\n                            captionValue !== undefined &&\r\n                            captionValue !== false\r\n                        ) {\r\n                            res.push(captionPlaceholder);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                ko.utils.arrayForEach(options, function (option) {\r\n                    var value = applyToObject(option, optionsValue, option),\r\n                        label = applyToObject(option, optionsText, value) || '',\r\n                        disabled = applyToObject(option, 'disabled', false) || false,\r\n                        obj = {},\r\n                        space = '\\u2007\\u2007\\u2007';\r\n\r\n                    obj[optionTitle] = applyToObject(option, optionsText + 'title', value);\r\n\r\n                    if (disabled) {\r\n                        obj.disabled = disabled;\r\n                    }\r\n\r\n                    if (option.hasOwnProperty('__disableTmpl')) {\r\n                        obj.__disableTmpl = option.__disableTmpl;\r\n                    }\r\n\r\n                    label = label.replace(nbspRe, '').trim();\r\n\r\n                    if (Array.isArray(value)) {\r\n                        obj[optionsText] = strPad('&nbsp;', nestedOptionsLevel * 4) + label;\r\n                        res.push(obj);\r\n                        res = res.concat(formatOptions(value));\r\n                    } else {\r\n                        obj[optionsText] = strPad(space, nestedOptionsLevel * 2) + label;\r\n                        obj[optionsValue] = value;\r\n                        res.push(obj);\r\n                    }\r\n                });\r\n                nestedOptionsLevel--;\r\n\r\n                return res;\r\n            }\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/outer_click.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/** Creates outerClick binding and registers in to ko.bindingHandlers object */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'underscore',\r\n    '../template/renderer'\r\n], function (ko, $, _, renderer) {\r\n    'use strict';\r\n\r\n    var defaults = {\r\n        onlyIfVisible: true\r\n    };\r\n\r\n    /**\r\n     * Checks if element sis visible.\r\n     *\r\n     * @param {Element} el\r\n     * @returns {Boolean}\r\n     */\r\n    function isVisible(el) {\r\n        var style = window.getComputedStyle(el),\r\n            visibility = {\r\n                display: 'none',\r\n                visibility: 'hidden',\r\n                opacity: '0'\r\n            },\r\n            visible = true;\r\n\r\n        _.each(visibility, function (val, key) {\r\n            if (style[key] === val) {\r\n                visible = false;\r\n            }\r\n        });\r\n\r\n        return visible;\r\n    }\r\n\r\n    /**\r\n     * Document click handler which in case if event target is not\r\n     * a descendant of provided container element,\r\n     * invokes specified in configuration callback.\r\n     *\r\n     * @param {HTMLElement} container\r\n     * @param {Object} config\r\n     * @param {EventObject} e\r\n     */\r\n    function onOuterClick(container, config, e) {\r\n        var target = e.target,\r\n            callback = config.callback;\r\n\r\n        if (container === target || container.contains(target)) {\r\n            return;\r\n        }\r\n\r\n        if (config.onlyIfVisible) {\r\n            if (!_.isNull(container.offsetParent) && isVisible(container)) {\r\n                callback();\r\n            }\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Prepares configuration for the binding based\r\n     * on a default properties and provided options.\r\n     *\r\n     * @param {(Object|Function)} [options={}]\r\n     * @returns {Object}\r\n     */\r\n    function buildConfig(options) {\r\n        var config = {};\r\n\r\n        if (_.isFunction(options)) {\r\n            options = {\r\n                callback: options\r\n            };\r\n        } else if (!_.isObject(options)) {\r\n            options = {};\r\n        }\r\n\r\n        return _.extend(config, defaults, options);\r\n    }\r\n\r\n    ko.bindingHandlers.outerClick = {\r\n\r\n        /**\r\n         * Initializes outer click binding.\r\n         */\r\n        init: function (element, valueAccessor) {\r\n            var config = buildConfig(valueAccessor()),\r\n                outerClick = onOuterClick.bind(null, element, config),\r\n                isTouchDevice = typeof document.ontouchstart !== 'undefined';\r\n\r\n            if (isTouchDevice) {\r\n                $(document).on('touchstart', outerClick);\r\n\r\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\r\n                    $(document).off('touchstart', outerClick);\r\n                });\r\n            } else {\r\n                $(document).on('click', outerClick);\r\n\r\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\r\n                    $(document).off('click', outerClick);\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('outerClick');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/range.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'underscore',\r\n    '../template/renderer'\r\n], function (ko, $, _, renderer) {\r\n    'use strict';\r\n\r\n    var isTouchDevice = !_.isUndefined(document.ontouchstart),\r\n        sliderFn = 'slider',\r\n        sliderModule = 'jquery-ui-modules/slider';\r\n\r\n    if (isTouchDevice) {\r\n        sliderFn = 'touchSlider';\r\n        sliderModule = 'mage/touch-slider';\r\n    }\r\n\r\n    ko.bindingHandlers.range = {\r\n\r\n        /**\r\n         * Initializes binding and a slider update.\r\n         *\r\n         * @param {HTMLElement} element\r\n         * @param {Function} valueAccessor\r\n         */\r\n        init: function (element, valueAccessor) {\r\n            var config  = valueAccessor(),\r\n                value   = config.value;\r\n\r\n            _.extend(config, {\r\n                value: value(),\r\n\r\n                /**\r\n                 * Callback which is being called when sliders' value changes.\r\n                 *\r\n                 * @param {Event} event\r\n                 * @param {Object} ui\r\n                 */\r\n                slide: function (event, ui) {\r\n                    value(ui.value);\r\n                }\r\n            });\r\n\r\n            require([sliderModule], function () {\r\n                $(element)[sliderFn](config);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Updates sliders' plugin configuration.\r\n         *\r\n         * @param {HTMLElement} element\r\n         * @param {Function} valueAccessor\r\n         */\r\n        update: function (element, valueAccessor) {\r\n            var config = valueAccessor();\r\n\r\n            config.value = ko.unwrap(config.value);\r\n\r\n            require([sliderModule], function () {\r\n                $(element)[sliderFn]('option', config);\r\n            });\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('range');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/resizable.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'Magento_Ui/js/lib/view/utils/async',\r\n    'uiRegistry',\r\n    'underscore',\r\n    '../template/renderer'\r\n], function (ko, $, async, registry, _, renderer) {\r\n    'use strict';\r\n\r\n    var sizeOptions = [\r\n            'minHeight',\r\n            'maxHeight',\r\n            'minWidth',\r\n            'maxWidth'\r\n        ],\r\n\r\n        handles = {\r\n            height: '.ui-resizable-s, .ui-resizable-n',\r\n            width: '.ui-resizable-w, .ui-resizable-e'\r\n        };\r\n\r\n    /**\r\n     * Recalcs visibility of handles, width and height of resizable based on content\r\n     * @param {HTMLElement} element\r\n     */\r\n    function adjustSize(element) {\r\n        var maxHeight,\r\n            maxWidth;\r\n\r\n        element = $(element);\r\n        maxHeight = element.resizable('option').maxHeight;\r\n        maxWidth = element.resizable('option').maxWidth;\r\n\r\n        if (maxHeight && element.height() > maxHeight) {\r\n            element.height(maxHeight + 1);\r\n            $(handles.height).hide();\r\n        } else {\r\n            $(handles.height).show();\r\n        }\r\n\r\n        if (maxWidth && element.width() > maxWidth) {\r\n            element.width(maxWidth + 1);\r\n            $(handles.width).hide();\r\n        } else {\r\n            $(handles.width).show();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Recalcs allowed min, max width and height based on configured selectors\r\n     * @param {Object} sizeConstraints\r\n     * @param {String} componentName\r\n     * @param {HTMLElement} element\r\n     * @param {Boolean} hasWidthUpdate\r\n     */\r\n    function recalcAllowedSize(sizeConstraints, componentName, element, hasWidthUpdate) {\r\n        var size;\r\n\r\n        element = $(element);\r\n\r\n        if (!element.data('resizable')) {\r\n            return;\r\n        }\r\n\r\n        if (!hasWidthUpdate) {\r\n            element.css('width', 'auto');\r\n        }\r\n\r\n        _.each(sizeConstraints, function (selector, key) {\r\n            async.async({\r\n                component: componentName,\r\n                selector: selector\r\n            }, function (elem) {\r\n                size = key.indexOf('Height') !== -1 ? $(elem).outerHeight(true) : $(elem).outerWidth(true);\r\n\r\n                if (element.data('resizable')) {\r\n                    element.resizable('option', key, size + 1);\r\n                }\r\n            });\r\n        }, this);\r\n\r\n        adjustSize(element);\r\n    }\r\n\r\n    /**\r\n     * Preprocess config to separate options,\r\n     * which must be processed further before applying\r\n     *\r\n     * @param {Object} config\r\n     * @param {Object} viewModel\r\n     * @param {*} element\r\n     * @return {Object} config\r\n     */\r\n    function processConfig(config, viewModel, element) {\r\n        var sizeConstraint,\r\n            sizeConstraints = {},\r\n            recalc,\r\n            hasWidthUpdate;\r\n\r\n        if (_.isEmpty(config)) {\r\n            return {};\r\n        }\r\n        _.each(sizeOptions, function (key) {\r\n            sizeConstraint = config[key];\r\n\r\n            if (sizeConstraint && !_.isNumber(sizeConstraint)) {\r\n                sizeConstraints[key] = sizeConstraint;\r\n                delete config[key];\r\n            }\r\n        });\r\n        hasWidthUpdate =  _.some(sizeConstraints, function (value, key) {\r\n            return key.indexOf('Width') !== -1;\r\n        });\r\n\r\n        recalc = recalcAllowedSize.bind(null, sizeConstraints, viewModel.name, element, hasWidthUpdate);\r\n        config.start = recalc;\r\n        $(window).on('resize.resizable', recalc);\r\n        registry.get(viewModel.provider).on('reloaded', recalc);\r\n\r\n        return config;\r\n    }\r\n\r\n    ko.bindingHandlers.resizable = {\r\n\r\n        /**\r\n         * Binding init callback.\r\n         *\r\n         * @param {*} element\r\n         * @param {Function} valueAccessor\r\n         * @param {Function} allBindings\r\n         * @param {Object} viewModel\r\n         */\r\n        init: function (element, valueAccessor, allBindings, viewModel) {\r\n            var config = processConfig(valueAccessor(), viewModel, element);\r\n\r\n            require(['jquery-ui-modules/resizable'], function () {\r\n                if ($.fn.resizable) {\r\n                    $(element).resizable(config);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('resizable');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/scope.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/** Creates scope binding and registers in to ko.bindingHandlers object */\r\ndefine([\r\n    'ko',\r\n    'uiRegistry',\r\n    'mage/translate',\r\n    '../template/renderer',\r\n    'jquery',\r\n    '../../logger/console-logger'\r\n], function (ko, registry, $t, renderer, $, consoleLogger) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Creates child context with passed component param as $data. Extends context with $t helper.\r\n     * Applies bindings to descendant nodes.\r\n     * @param {HTMLElement} el - element to apply bindings to.\r\n     * @param {ko.bindingContext} bindingContext - instance of ko.bindingContext, passed to binding initially.\r\n     * @param {Promise} promise - instance of jQuery promise\r\n     * @param {Object} component - component instance to attach to new context\r\n     */\r\n    function applyComponents(el, bindingContext, promise, component) {\r\n        promise.resolve();\r\n        component = bindingContext.createChildContext(component);\r\n\r\n        ko.utils.extend(component, {\r\n            $t: $t\r\n        });\r\n\r\n        ko.utils.arrayForEach(ko.virtualElements.childNodes(el), ko.cleanNode);\r\n\r\n        ko.applyBindingsToDescendants(component, el);\r\n    }\r\n\r\n    ko.bindingHandlers.scope = {\r\n\r\n        /**\r\n         * Scope binding's init method.\r\n         * @returns {Object} - Knockout declaration for it to let binding control descendants.\r\n         */\r\n        init: function () {\r\n            return {\r\n                controlsDescendantBindings: true\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Reads params passed to binding, parses component declarations.\r\n         * Fetches for those found and attaches them to the new context.\r\n         * @param {HTMLElement} el - Element to apply bindings to.\r\n         * @param {Function} valueAccessor - Function that returns value, passed to binding.\r\n         * @param {Object} allBindings - Object, which represents all bindings applied to element.\r\n         * @param {Object} viewModel - Object, which represents view model binded to el.\r\n         * @param {ko.bindingContext} bindingContext - Instance of ko.bindingContext, passed to binding initially.\r\n         */\r\n        update: function (el, valueAccessor, allBindings, viewModel, bindingContext) {\r\n            var component = valueAccessor(),\r\n                promise = $.Deferred(),\r\n                apply = applyComponents.bind(this, el, bindingContext, promise),\r\n                loggerUtils = consoleLogger.utils;\r\n\r\n            if (typeof component === 'string') {\r\n                loggerUtils.asyncLog(\r\n                    promise,\r\n                    {\r\n                        data: {\r\n                            component: component\r\n                        },\r\n                        messages: loggerUtils.createMessages(\r\n                            'requestingComponent',\r\n                            'requestingComponentIsLoaded',\r\n                            'requestingComponentIsFailed'\r\n                        )\r\n                    }\r\n                );\r\n\r\n                registry.get(component, apply);\r\n            } else if (typeof component === 'function') {\r\n                component(apply);\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.virtualElements.allowedBindings.scope = true;\r\n\r\n    renderer\r\n        .addNode('scope')\r\n        .addAttribute('scope', {\r\n            name: 'ko-scope'\r\n        });\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/simple-checked.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    '../template/renderer'\r\n], function (ko, renderer) {\r\n    'use strict';\r\n\r\n    ko.bindingHandlers.simpleChecked = {\r\n        'after': ['attr'],\r\n\r\n        /**\r\n         * Implements same functionality as a standard 'simpleChecked' binding,\r\n         * but with a difference that it wont' change values array if\r\n         * value of DOM element changes.\r\n         */\r\n        init: function (element, valueAccessor) {\r\n            var isCheckbox = element.type === 'checkbox',\r\n                isRadio = element.type === 'radio',\r\n                updateView,\r\n                updateModel;\r\n\r\n            if (!isCheckbox && !isRadio) {\r\n                return;\r\n            }\r\n\r\n            /**\r\n             * Updates checked observable\r\n             */\r\n            updateModel = function () {\r\n                var  modelValue = ko.dependencyDetection.ignore(valueAccessor),\r\n                    isChecked = element.checked;\r\n\r\n                if (ko.computedContext.isInitial()) {\r\n                    return;\r\n                }\r\n\r\n                if (modelValue.peek() === isChecked) {\r\n                    return;\r\n                }\r\n\r\n                if (isRadio && !isChecked) {\r\n                    return;\r\n                }\r\n\r\n                modelValue(isChecked);\r\n            };\r\n\r\n            /**\r\n             * Updates checkbox state\r\n             */\r\n            updateView = function () {\r\n                var modelValue = ko.utils.unwrapObservable(valueAccessor());\r\n\r\n                element.checked = !!modelValue;\r\n            };\r\n\r\n            ko.utils.registerEventHandler(element, 'change', updateModel);\r\n\r\n            ko.computed(updateModel, null, {\r\n                disposeWhenNodeIsRemoved: element\r\n            });\r\n            ko.computed(updateView, null, {\r\n                disposeWhenNodeIsRemoved: element\r\n            });\r\n        }\r\n    };\r\n\r\n    ko.expressionRewriting._twoWayBindings.simpleChecked = true;\r\n\r\n    renderer.addAttribute('simpleChecked');\r\n    renderer.addAttribute('simple-checked', {\r\n        binding: 'simpleChecked'\r\n    });\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/staticChecked.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    '../template/renderer'\r\n], function (ko, renderer) {\r\n    'use strict';\r\n\r\n    ko.bindingHandlers.staticChecked = {\r\n        'after': ['value', 'attr'],\r\n\r\n        /**\r\n         * Implements same functionality as a standard 'checked' binding,\r\n         * but with a difference that it wont' change values array if\r\n         * value of DOM element changes.\r\n         */\r\n        init: function (element, valueAccessor, allBindings) {\r\n            var isCheckbox = element.type === 'checkbox',\r\n                isRadio = element.type === 'radio',\r\n                isValueArray,\r\n                oldElemValue,\r\n                useCheckedValue,\r\n                checkedValue,\r\n                updateModel,\r\n                updateView;\r\n\r\n            if (!isCheckbox && !isRadio) {\r\n                return;\r\n            }\r\n\r\n            checkedValue = ko.pureComputed(function () {\r\n                if (allBindings.has('checkedValue')) {\r\n                    return ko.utils.unwrapObservable(allBindings.get('checkedValue'));\r\n                } else if (allBindings.has('value')) {\r\n                    return ko.utils.unwrapObservable(allBindings.get('value'));\r\n                }\r\n\r\n                return element.value;\r\n            });\r\n\r\n            isValueArray = isCheckbox && ko.utils.unwrapObservable(valueAccessor()) instanceof Array;\r\n            oldElemValue = isValueArray ? checkedValue() : undefined;\r\n            useCheckedValue = isRadio || isValueArray;\r\n\r\n            /**\r\n             * Updates values array if it's necessary.\r\n             */\r\n            updateModel = function () {\r\n                var isChecked = element.checked,\r\n                    elemValue = useCheckedValue ? checkedValue() : isChecked,\r\n                    modelValue;\r\n\r\n                if (ko.computedContext.isInitial()) {\r\n                    return;\r\n                }\r\n\r\n                if (isRadio && !isChecked) {\r\n                    return;\r\n                }\r\n\r\n                modelValue = ko.dependencyDetection.ignore(valueAccessor);\r\n\r\n                if (isValueArray) {\r\n                    if (oldElemValue !== elemValue) {\r\n                        oldElemValue = elemValue;\r\n                    } else {\r\n                        ko.utils.addOrRemoveItem(modelValue, elemValue, isChecked);\r\n                    }\r\n                } else {\r\n                    ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'checked', elemValue, true);\r\n                }\r\n            };\r\n\r\n            /**\r\n             * Updates checkbox state.\r\n             */\r\n            updateView = function () {\r\n                var modelValue = ko.utils.unwrapObservable(valueAccessor());\r\n\r\n                if (isValueArray) {\r\n                    element.checked = ko.utils.arrayIndexOf(modelValue, checkedValue()) >= 0;\r\n                } else if (isCheckbox) {\r\n                    element.checked = modelValue;\r\n                } else {\r\n                    element.checked = checkedValue() === modelValue;\r\n                }\r\n            };\r\n\r\n            ko.computed(updateModel, null, {\r\n                disposeWhenNodeIsRemoved: element\r\n            });\r\n\r\n            ko.utils.registerEventHandler(element, 'click', updateModel);\r\n\r\n            ko.computed(updateView, null, {\r\n                disposeWhenNodeIsRemoved: element\r\n            });\r\n        }\r\n    };\r\n\r\n    ko.expressionRewriting._twoWayBindings.staticChecked = true;\r\n\r\n    renderer.addAttribute('staticChecked');\r\n});\r\n","Magento_Ui/js/lib/knockout/bindings/tooltip.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'ko',\r\n    'underscore',\r\n    'mage/template',\r\n    'text!ui/template/tooltip/tooltip.html',\r\n    '../template/renderer'\r\n], function ($, ko, _, template, tooltipTmpl, renderer) {\r\n    'use strict';\r\n\r\n    var tooltip,\r\n        defaults,\r\n        positions,\r\n        transformProp,\r\n        checkedPositions = {},\r\n        iterator = 0,\r\n        previousTooltip,\r\n        tooltipData,\r\n        positionData = {},\r\n        tooltipsCollection = {},\r\n        isTouchDevice = (function () {\r\n            return 'ontouchstart' in document.documentElement;\r\n        })(),\r\n        CLICK_EVENT = (function () {\r\n            return isTouchDevice ? 'touchstart' : 'click';\r\n        })();\r\n\r\n    defaults = {\r\n        tooltipWrapper: '[data-tooltip=tooltip-wrapper]',\r\n        tooltipContentBlock: 'data-tooltip-content',\r\n        closeButtonClass: 'action-close',\r\n        tailClass: 'data-tooltip-tail',\r\n        action: 'hover',\r\n        delay: 300,\r\n        track: false,\r\n        step: 20,\r\n        position: 'top',\r\n        closeButton: false,\r\n        showed: false,\r\n        strict: true,\r\n        center: false,\r\n        closeOnScroll: true\r\n    };\r\n\r\n    tooltipData = {\r\n        tooltipClasses: '',\r\n        trigger: false,\r\n        timeout: 0,\r\n        element: false,\r\n        event: false,\r\n        targetElement: {},\r\n        showed: false,\r\n        currentID: 0\r\n    };\r\n\r\n    /**\r\n     * Polyfill for css transform\r\n     */\r\n    transformProp = (function () {\r\n        var style = document.createElement('div').style,\r\n            base = 'Transform',\r\n            vendors = ['webkit', 'moz', 'ms', 'o'],\r\n            vi = vendors.length,\r\n            property;\r\n\r\n        if (typeof style.transform !== 'undefined') {\r\n            return 'transform';\r\n        }\r\n\r\n        while (vi--) {\r\n            property = vendors[vi] + base;\r\n\r\n            if (typeof style[property] !== 'undefined') {\r\n                return property;\r\n            }\r\n        }\r\n    })();\r\n\r\n    positions = {\r\n\r\n        /*eslint max-depth: [0, 0]*/\r\n\r\n        map: {\r\n            horizontal: {\r\n                s: 'w',\r\n                p: 'left'\r\n            },\r\n            vertical: {\r\n                s: 'h',\r\n                p: 'top'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Wrapper function to get tooltip data (position, className, etc)\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        top: function (s) {\r\n            return positions._topLeftChecker(s, positions.map, 'vertical', '_bottom', 'top', 'right');\r\n        },\r\n\r\n        /**\r\n         * Wrapper function to get tooltip data (position, className, etc)\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        left: function (s) {\r\n            return positions._topLeftChecker(s, positions.map, 'horizontal', '_right', 'left', 'top');\r\n        },\r\n\r\n        /**\r\n         * Wrapper function to get tooltip data (position, className, etc)\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        bottom: function (s) {\r\n            return positions._bottomRightChecker(s, positions.map, 'vertical', '_top', 'bottom', 'left');\r\n        },\r\n\r\n        /**\r\n         * Wrapper function to get tooltip data (position, className, etc)\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        right: function (s) {\r\n            return positions._bottomRightChecker(s, positions.map, 'horizontal', '_left', 'right', 'bottom');\r\n        },\r\n\r\n        /**\r\n         * Check can tooltip setted on current position or not. If can't setted - delegate call.\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @param {Object} map - mapping for get direction positions\r\n         * @param {String} direction - vertical or horizontal\r\n         * @param {String} className - class whats should be setted to tooltip\r\n         * @param {String} side - parent method name\r\n         * @param {String} delegate - method name if tooltip can't be setted in current position\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        _topLeftChecker: function (s, map, direction, className, side, delegate) {\r\n            var result = {\r\n                    position: {}\r\n                },\r\n                config = tooltip.getTooltip(tooltipData.currentID),\r\n                startPosition = !config.strict ? s.eventPosition : s.elementPosition,\r\n                changedDirection;\r\n\r\n            checkedPositions[side] = true;\r\n\r\n            if (\r\n                startPosition[map[direction].p] - s.tooltipSize[map[direction].s] - config.step >\r\n                s.scrollPosition[map[direction].p]\r\n            ) {\r\n                result.position[map[direction].p] = startPosition[map[direction].p] - s.tooltipSize[map[direction].s] -\r\n                    config.step;\r\n                result.className = className;\r\n                result.side = side;\r\n                changedDirection = direction === 'vertical' ? 'horizontal' : 'vertical';\r\n                result = positions._normalize(s, result, config, delegate, map, changedDirection);\r\n            } else if (!checkedPositions[delegate]) {\r\n                result = positions[delegate].apply(null, arguments);\r\n            } else {\r\n                result = positions.positionCenter(s, result);\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Check can tooltip setted on current position or not. If can't setted - delegate call.\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @param {Object} map - mapping for get direction positions\r\n         * @param {String} direction - vertical or horizontal\r\n         * @param {String} className - class whats should be setted to tooltip\r\n         * @param {String} side - parent method name\r\n         * @param {String} delegate - method name if tooltip can't be setted in current position\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        _bottomRightChecker: function (s, map, direction, className, side, delegate) {\r\n            var result = {\r\n                    position: {}\r\n                },\r\n                config = tooltip.getTooltip(tooltipData.currentID),\r\n                startPosition = !config.strict ? s.eventPosition : {\r\n                    top: s.elementPosition.top + s.elementSize.h,\r\n                    left: s.elementPosition.left + s.elementSize.w\r\n                },\r\n                changedDirection;\r\n\r\n            checkedPositions[side] = true;\r\n\r\n            if (\r\n                startPosition[map[direction].p] + s.tooltipSize[map[direction].s] + config.step <\r\n                s.scrollPosition[map[direction].p] + s.windowSize[map[direction].s]\r\n            ) {\r\n                result.position[map[direction].p] = startPosition[map[direction].p] + config.step;\r\n                result.className = className;\r\n                result.side = side;\r\n                changedDirection = direction === 'vertical' ? 'horizontal' : 'vertical';\r\n                result = positions._normalize(s, result, config, delegate, map, changedDirection);\r\n            } else if (!checkedPositions[delegate]) {\r\n                result = positions[delegate].apply(null, arguments);\r\n            } else {\r\n                result = positions.positionCenter(s, result);\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Centered tooltip if tooltip does not fit in window\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @param {Object} data - current data (position, className, etc)\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        positionCenter: function (s, data) {\r\n            data = positions._positionCenter(s, data, 'horizontal', positions.map);\r\n            data = positions._positionCenter(s, data, 'vertical', positions.map);\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Centered tooltip side\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @param {Object} data - current data (position, className, etc)\r\n         * @param {String} direction - vertical or horizontal\r\n         * @param {Object} map - mapping for get direction positions\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        _positionCenter: function (s, data, direction, map) {\r\n            if (s.tooltipSize[map[direction].s] < s.windowSize[map[direction].s]) {\r\n                data.position[map[direction].p] = (s.windowSize[map[direction].s] -\r\n                    s.tooltipSize[map[direction].s]) / 2 + s.scrollPosition[map[direction].p];\r\n            } else {\r\n                data.position[map[direction].p] = s.scrollPosition[map[direction].p];\r\n                data.tooltipSize = {};\r\n                data.tooltipSize[map[direction].s] = s.windowSize[map[direction].s];\r\n            }\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Normalize horizontal or vertical position.\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @param {Object} data - current data (position, className, etc)\r\n         * @param {Object} config - tooltip config\r\n         * @param {String} delegate - method name if tooltip can't be setted in current position\r\n         * @param {Object} map - mapping for get direction positions\r\n         * @param {String} direction - vertical or horizontal\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        _normalize: function (s, data, config, delegate, map, direction) {\r\n            var startPosition = !config.center ? s.eventPosition : {\r\n                    left: s.elementPosition.left + s.elementSize.w / 2,\r\n                    top: s.elementPosition.top + s.elementSize.h / 2\r\n                },\r\n                depResult;\r\n\r\n            if (startPosition[map[direction].p] - s.tooltipSize[map[direction].s] / 2 >\r\n                s.scrollPosition[map[direction].p] && startPosition[map[direction].p] +\r\n                s.tooltipSize[map[direction].s] / 2 <\r\n                s.scrollPosition[map[direction].p] + s.windowSize[map[direction].s]\r\n            ) {\r\n                data.position[map[direction].p] = startPosition[map[direction].p] - s.tooltipSize[map[direction].s] / 2;\r\n            } else {\r\n\r\n                /*eslint-disable no-lonely-if*/\r\n                if (!checkedPositions[delegate]) {\r\n                    depResult = positions[delegate].apply(null, arguments);\r\n\r\n                    if (depResult.hasOwnProperty('className')) {\r\n                        data = depResult;\r\n                    } else {\r\n                        data = positions._normalizeTail(s, data, config, delegate, map, direction, startPosition);\r\n                    }\r\n                } else {\r\n                    data = positions._normalizeTail(s, data, config, delegate, map, direction, startPosition);\r\n                }\r\n            }\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Calc tail position.\r\n         *\r\n         * @param {Object} s - object with sizes and positions elements\r\n         * @param {Object} data - current data (position, className, etc)\r\n         * @param {Object} config - tooltip config\r\n         * @param {String} delegate - method name if tooltip can't be setted in current position\r\n         * @param {Object} map - mapping for get direction positions\r\n         * @param {String} direction - vertical or horizontal\r\n         * @param {Object} startPosition - start position\r\n         * @returns {Object} tooltip data (position, className, etc)\r\n         */\r\n        _normalizeTail: function (s, data, config, delegate, map, direction, startPosition) {\r\n            data.tail = {};\r\n\r\n            if (s.tooltipSize[map[direction].s] < s.windowSize[map[direction].s]) {\r\n\r\n                if (\r\n                    startPosition[map[direction].p] >\r\n                    s.windowSize[map[direction].s] / 2 + s.scrollPosition[map[direction].p]\r\n                ) {\r\n                    data.position[map[direction].p] = s.windowSize[map[direction].s] +\r\n                        s.scrollPosition[map[direction].p] - s.tooltipSize[map[direction].s];\r\n                    data.tail[map[direction].p] = startPosition[map[direction].p] -\r\n                        s.tooltipSize[map[direction].s] / 2 - data.position[map[direction].p];\r\n                } else {\r\n                    data.position[map[direction].p] = s.scrollPosition[map[direction].p];\r\n                    data.tail[map[direction].p] = startPosition[map[direction].p] -\r\n                        s.tooltipSize[map[direction].s] / 2 - data.position[map[direction].p];\r\n                }\r\n            } else {\r\n                data.position[map[direction].p] = s.scrollPosition[map[direction].p];\r\n                data.tail[map[direction].p] = s.eventPosition[map[direction].p] - s.windowSize[map[direction].s] / 2;\r\n                data.tooltipSize = {};\r\n                data.tooltipSize[map[direction].s] = s.windowSize[map[direction].s];\r\n            }\r\n\r\n            return data;\r\n        }\r\n    };\r\n\r\n    tooltip = {\r\n\r\n        /**\r\n         * Set new tooltip to tooltipCollection, save config, and add unic id\r\n         *\r\n         * @param {Object} config - tooltip config\r\n         * @returns {String} tooltip id\r\n         */\r\n        setTooltip: function (config) {\r\n            var property = 'id-' + iterator;\r\n\r\n            tooltipsCollection[property] = config;\r\n            iterator++;\r\n\r\n            return property;\r\n        },\r\n\r\n        /**\r\n         * Get tooltip config by id\r\n         *\r\n         * @param {String} id - tooltip id\r\n         * @returns {Object} tooltip config\r\n         */\r\n        getTooltip: function (id) {\r\n            return tooltipsCollection[id];\r\n        },\r\n\r\n        /**\r\n         * Set content to current tooltip\r\n         *\r\n         * @param {Object} tooltipElement - tooltip element\r\n         * @param {Object} viewModel - tooltip view model\r\n         * @param {String} id - tooltip id\r\n         * @param {Object} bindingCtx - tooltip context\r\n         * @param {Object} event - action event\r\n         */\r\n        setContent: function (tooltipElement, viewModel, id, bindingCtx, event) {\r\n            var html = $(tooltipElement).html(),\r\n                config = tooltip.getTooltip(id),\r\n                body = $('body');\r\n\r\n            tooltipData.currentID = id;\r\n            tooltipData.trigger = $(event.currentTarget);\r\n            tooltip.setTargetData(event);\r\n            body.on('mousemove.setTargetData', tooltip.setTargetData);\r\n            tooltip.clearTimeout(id);\r\n\r\n            tooltipData.timeout = _.delay(function () {\r\n                body.off('mousemove.setTargetData', tooltip.setTargetData);\r\n\r\n                if (tooltipData.trigger[0] === tooltipData.targetElement) {\r\n                    tooltip.destroy(id);\r\n                    event.stopPropagation();\r\n                    tooltipElement = tooltip.createTooltip(id);\r\n                    tooltipElement.find('.' + defaults.tooltipContentBlock).append(html);\r\n                    tooltipElement.applyBindings(bindingCtx);\r\n                    tooltip.setHandlers(id);\r\n                    tooltip.setPosition(tooltipElement, id);\r\n                    previousTooltip = id;\r\n                }\r\n\r\n            }, config.delay);\r\n        },\r\n\r\n        /**\r\n         * Set position to current tooltip\r\n         *\r\n         * @param {Object} tooltipElement - tooltip element\r\n         * @param {String} id - tooltip id\r\n         */\r\n        setPosition: function (tooltipElement, id) {\r\n            var config = tooltip.getTooltip(id);\r\n\r\n            tooltip.sizeData = {\r\n                windowSize: {\r\n                    h: $(window).outerHeight(),\r\n                    w: $(window).outerWidth()\r\n                },\r\n                scrollPosition: {\r\n                    top: $(window).scrollTop(),\r\n                    left: $(window).scrollLeft()\r\n                },\r\n                tooltipSize: {\r\n                    h: tooltipElement.outerHeight(),\r\n                    w: tooltipElement.outerWidth()\r\n                },\r\n                elementSize: {\r\n                    h: tooltipData.trigger.outerHeight(),\r\n                    w: tooltipData.trigger.outerWidth()\r\n                },\r\n                elementPosition: tooltipData.trigger.offset(),\r\n                eventPosition: this.getEventPosition(tooltipData.event)\r\n            };\r\n\r\n            _.extend(positionData, positions[config.position](tooltip.sizeData));\r\n            tooltipElement.css(positionData.position);\r\n            tooltipElement.addClass(positionData.className);\r\n            tooltip._setTooltipSize(positionData, tooltipElement);\r\n            tooltip._setTailPosition(positionData, tooltipElement);\r\n            checkedPositions = {};\r\n        },\r\n\r\n        /**\r\n         * Check position data and change tooltip size if needs\r\n         *\r\n         * @param {Object} data - position data\r\n         * @param {Object} tooltipElement - tooltip element\r\n         */\r\n        _setTooltipSize: function (data, tooltipElement) {\r\n            if (data.tooltipSize) {\r\n                data.tooltipSize.w ?\r\n                    tooltipElement.css('width', data.tooltipSize.w) :\r\n                    tooltipElement.css('height', data.tooltipSize.h);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check position data and set position to tail\r\n         *\r\n         * @param {Object} data - position data\r\n         * @param {Object} tooltipElement - tooltip element\r\n         */\r\n        _setTailPosition: function (data, tooltipElement) {\r\n            var tail,\r\n                tailMargin;\r\n\r\n            if (data.tail) {\r\n                tail = tooltipElement.find('.' + defaults.tailClass);\r\n\r\n                if (data.tail.left) {\r\n                    tailMargin = parseInt(tail.css('margin-left'), 10);\r\n                    tail.css('margin-left', tailMargin + data.tail.left);\r\n                } else {\r\n                    tailMargin = parseInt(tail.css('margin-top'), 10);\r\n                    tail.css('margin-top', tailMargin + data.tail.top);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Resolves position for tooltip\r\n         *\r\n         * @param {Object} event\r\n         * @returns {Object}\r\n         */\r\n        getEventPosition: function (event) {\r\n            var position = {\r\n                left: event.originalEvent && event.originalEvent.pageX || 0,\r\n                top: event.originalEvent && event.originalEvent.pageY || 0\r\n            };\r\n\r\n            if (position.left === 0 && position.top === 0) {\r\n                _.extend(position, event.target.getBoundingClientRect());\r\n            }\r\n\r\n            return position;\r\n        },\r\n\r\n        /**\r\n         * Close tooltip if action happened outside handler and tooltip element\r\n         *\r\n         * @param {String} id - tooltip id\r\n         * @param {Object} event - action event\r\n         */\r\n        outerClick: function (id, event) {\r\n            var tooltipElement = $(event.target).parents(defaults.tooltipWrapper)[0],\r\n                isTrigger = event.target === tooltipData.trigger[0] || $.contains(tooltipData.trigger[0], event.target);\r\n\r\n            if (tooltipData.showed && tooltipElement !== tooltipData.element[0] && !isTrigger) {\r\n                tooltip.destroy(id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Parse keydown event and if event trigger is escape key - close tooltip\r\n         *\r\n         * @param {Object} event - action event\r\n         */\r\n        keydownHandler: function (event) {\r\n            if (tooltipData.showed && event.keyCode === 27) {\r\n                tooltip.destroy(tooltipData.currentID);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Change tooltip position when track is enabled\r\n         *\r\n         * @param {Object} event - current event\r\n         */\r\n        track: function (event) {\r\n            var inequality = {},\r\n                map = positions.map,\r\n                translate = {\r\n                    left: 'translateX',\r\n                    top: 'translateY'\r\n                },\r\n                eventPosition = {\r\n                    left: event.pageX,\r\n                    top: event.pageY\r\n                },\r\n                tooltipSize = {\r\n                    w: tooltipData.element.outerWidth(),\r\n                    h: tooltipData.element.outerHeight()\r\n                },\r\n                direction = positionData.side === 'bottom' || positionData.side === 'top' ? 'horizontal' : 'vertical';\r\n\r\n            inequality[map[direction].p] = eventPosition[map[direction].p] - (positionData.position[map[direction].p] +\r\n                tooltipSize[map[direction].s] / 2);\r\n\r\n            if (positionData.position[map[direction].p] + inequality[map[direction].p] +\r\n                tooltip.sizeData.tooltipSize[map[direction].s] >\r\n                tooltip.sizeData.windowSize[map[direction].s] + tooltip.sizeData.scrollPosition[map[direction].p] ||\r\n                inequality[map[direction].p] + positionData.position[map[direction].p] <\r\n                tooltip.sizeData.scrollPosition[map[direction].p]) {\r\n\r\n                return false;\r\n            }\r\n\r\n            tooltipData.element[0].style[transformProp] = translate[map[direction].p] +\r\n                '(' + inequality[map[direction].p] + 'px)';\r\n        },\r\n\r\n        /**\r\n         * Set handlers to tooltip\r\n         *\r\n         * @param {String} id - tooltip id\r\n         */\r\n        setHandlers: function (id) {\r\n            var config = tooltip.getTooltip(id);\r\n\r\n            if (config.track) {\r\n                tooltipData.trigger.on('mousemove.track', tooltip.track);\r\n            }\r\n\r\n            if (config.action === 'click') {\r\n                $(window).on(CLICK_EVENT + '.outerClick', tooltip.outerClick.bind(null, id));\r\n            }\r\n\r\n            if (config.closeButton) {\r\n                $('.' + config.closeButtonClass).on('click.closeButton', tooltip.destroy.bind(null, id));\r\n            }\r\n\r\n            if (config.closeOnScroll) {\r\n                document.addEventListener('scroll', tooltip.destroy, true);\r\n                $(window).on('scroll.tooltip', tooltip.outerClick.bind(null, id));\r\n            }\r\n\r\n            $(window).on('keydown.tooltip', tooltip.keydownHandler);\r\n            $(window).on('resize.outerClick', tooltip.outerClick.bind(null, id));\r\n        },\r\n\r\n        /**\r\n         * Toggle tooltip\r\n         *\r\n         * @param {Object} tooltipElement - tooltip element\r\n         * @param {Object} viewModel - tooltip view model\r\n         * @param {String} id - tooltip id\r\n         */\r\n        toggleTooltip: function (tooltipElement, viewModel, id) {\r\n            if (previousTooltip === id && tooltipData.showed) {\r\n                tooltip.destroy(id);\r\n\r\n                return false;\r\n            }\r\n\r\n            tooltip.setContent.apply(null, arguments);\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Create tooltip and append to DOM\r\n         *\r\n         * @param {String} id - tooltip id\r\n         * @returns {Object} tooltip element\r\n         */\r\n        createTooltip: function (id) {\r\n            var body = $('body'),\r\n                config = tooltip.getTooltip(id);\r\n\r\n            $(template(tooltipTmpl, {\r\n                data: config\r\n            })).appendTo(body);\r\n\r\n            tooltipData.showed = true;\r\n            tooltipData.element = $(config.tooltipWrapper);\r\n\r\n            return tooltipData.element;\r\n        },\r\n\r\n        /**\r\n         * Check action and clean timeout\r\n         *\r\n         * @param {String} id - tooltip id\r\n         */\r\n        clearTimeout: function (id) {\r\n            var config = tooltip.getTooltip(id);\r\n\r\n            if (config.action === 'hover') {\r\n                clearTimeout(tooltipData.timeout);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check previous tooltip\r\n         */\r\n        checkPreviousTooltip: function () {\r\n            if (!tooltipData.timeout) {\r\n                tooltip.destroy();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Destroy tooltip instance\r\n         */\r\n        destroy: function () {\r\n            if (tooltipData.element) {\r\n                tooltipData.element.remove();\r\n                tooltipData.showed = false;\r\n            }\r\n\r\n            positionData = {};\r\n            tooltipData.timeout = false;\r\n            tooltip.removeHandlers();\r\n        },\r\n\r\n        /**\r\n         * Remove tooltip handlers\r\n         */\r\n        removeHandlers: function () {\r\n            $('.' + defaults.closeButtonClass).off('click.closeButton');\r\n            tooltipData.trigger.off('mousemove.track');\r\n            document.removeEventListener('scroll', tooltip.destroy, true);\r\n            $(window).off('scroll.tooltip');\r\n            $(window).off(CLICK_EVENT + '.outerClick');\r\n            $(window).off('keydown.tooltip');\r\n            $(window).off('resize.outerClick');\r\n        },\r\n\r\n        /**\r\n         * Set target element\r\n         *\r\n         * @param {Object} event - current event\r\n         */\r\n        setTargetData: function (event) {\r\n            tooltipData.event = event;\r\n\r\n            //TODO: bug chrome v.49; Link to issue https://bugs.chromium.org/p/chromium/issues/detail?id=161464\r\n            if (event.timeStamp - (tooltipData.timestamp || 0) < 1) {\r\n                return;\r\n            }\r\n\r\n            if (event.type === 'mousemove') {\r\n                tooltipData.targetElement = event.target;\r\n            } else {\r\n                tooltipData.targetElement = event.currentTarget;\r\n                tooltipData.timestamp = event.timeStamp;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Merged user config with defaults configuration\r\n         *\r\n         * @param {Object} config - user config\r\n         * @returns {Object} merged config\r\n         */\r\n        processingConfig: function (config) {\r\n            return _.extend({}, defaults, config);\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.tooltip = {\r\n\r\n        /**\r\n         * Initialize tooltip\r\n         *\r\n         * @param {Object} elem - tooltip DOM element\r\n         * @param {Function} valueAccessor - ko observable property, tooltip data\r\n         * @param {Object} allBindings - all bindings on current element\r\n         * @param {Object} viewModel - current element viewModel\r\n         * @param {Object} bindingCtx - current element binding context\r\n         */\r\n        init: function (elem, valueAccessor, allBindings, viewModel, bindingCtx) {\r\n            var config = tooltip.processingConfig(valueAccessor()),\r\n                $parentScope = config.parentScope ? $(config.parentScope) : $(elem).parent(),\r\n                tooltipId;\r\n\r\n            $(elem).addClass('hidden');\r\n\r\n            if (isTouchDevice) {\r\n                config.action = 'click';\r\n            }\r\n            tooltipId = tooltip.setTooltip(config);\r\n\r\n            if (config.action === 'hover') {\r\n                $parentScope.on(\r\n                    'mouseenter',\r\n                    config.trigger,\r\n                    tooltip.setContent.bind(null, elem, viewModel, tooltipId, bindingCtx)\r\n                );\r\n                $parentScope.on(\r\n                    'mouseleave',\r\n                    config.trigger,\r\n                    tooltip.checkPreviousTooltip.bind(null, tooltipId)\r\n                );\r\n            } else if (config.action === 'click') {\r\n                $parentScope.on(\r\n                    'click',\r\n                    config.trigger,\r\n                    tooltip.toggleTooltip.bind(null, elem, viewModel, tooltipId, bindingCtx)\r\n                );\r\n            }\r\n\r\n            return {\r\n                controlsDescendantBindings: true\r\n            };\r\n        }\r\n    };\r\n\r\n    renderer.addAttribute('tooltip');\r\n});\r\n","Magento_Ui/js/lib/knockout/extender/bound-nodes.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'mage/utils/wrapper',\r\n    'uiEvents'\r\n], function (ko, _, wrapper, Events) {\r\n    'use strict';\r\n\r\n    var nodesMap = new WeakMap();\r\n\r\n    /**\r\n     * Returns a array of nodes associated with a specified model.\r\n     *\r\n     * @param {Object} model\r\n     * @returns {Undefined|Array}\r\n     */\r\n    function getBounded(model) {\r\n        return nodesMap.get(model);\r\n    }\r\n\r\n    /**\r\n     * Removes specified node to models' associations list, if it's\r\n     * a root node (node is not a descendant of any previously added nodes).\r\n     * Triggers 'addNode' event.\r\n     *\r\n     * @param {Object} model\r\n     * @param {HTMLElement} node\r\n     */\r\n    function addBounded(model, node) {\r\n        var nodes = getBounded(model),\r\n            isRoot;\r\n\r\n        if (!nodes) {\r\n            nodesMap.set(model, [node]);\r\n\r\n            Events.trigger.call(model, 'addNode', node);\r\n\r\n            return;\r\n        }\r\n\r\n        isRoot = nodes.every(function (bounded) {\r\n            return !bounded.contains(node);\r\n        });\r\n\r\n        if (isRoot) {\r\n            nodes.push(node);\r\n\r\n            Events.trigger.call(model, 'addNode', node);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes specified node from models' associations list.\r\n     * Triggers 'removeNode' event.\r\n     *\r\n     * @param {Object} model\r\n     * @param {HTMLElement} node\r\n     */\r\n    function removeBounded(model, node) {\r\n        var nodes = getBounded(model),\r\n            index;\r\n\r\n        if (!nodes) {\r\n            return;\r\n        }\r\n\r\n        index = nodes.indexOf(node);\r\n\r\n        if (~index) {\r\n            nodes.splice(index, 0);\r\n\r\n            Events.trigger.call(model, 'removeNode', node);\r\n        }\r\n\r\n        if (!nodes.length) {\r\n            nodesMap.delete(model);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns node's first sibling of 'element' type within the common component scope\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @param {*} data\r\n     * @returns {HTMLElement}\r\n     */\r\n    function getElement(node, data) {\r\n        var elem;\r\n\r\n        while (node.nextElementSibling) {\r\n            node = node.nextElementSibling;\r\n\r\n            if (node.nodeType === 1 && ko.dataFor(node) === data) {\r\n                elem = node;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return elem;\r\n    }\r\n\r\n    wrapper.extend(ko, {\r\n\r\n        /**\r\n         * Extends knockouts' 'applyBindings'\r\n         * to track nodes associated with model.\r\n         *\r\n         * @param {Function} orig - Original 'applyBindings' method.\r\n         * @param {Object} ctx\r\n         * @param {HTMLElement} node - Original 'applyBindings' method.\r\n         */\r\n        applyBindings: function (orig, ctx, node) {\r\n            var result = orig(),\r\n                data = ctx && (ctx.$data || ctx);\r\n\r\n            if (node && node.nodeType === 8) {\r\n                node = getElement(node, data);\r\n            }\r\n\r\n            if (!node || node.nodeType !== 1) {\r\n                return result;\r\n            }\r\n\r\n            if (data && data.registerNodes) {\r\n                addBounded(data, node);\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Extends knockouts' cleanNode\r\n         * to track nodes associated with model.\r\n         *\r\n         * @param {Function} orig - Original 'cleanNode' method.\r\n         * @param {HTMLElement} node - Original 'cleanNode' method.\r\n         */\r\n        cleanNode: function (orig, node) {\r\n            var result = orig(),\r\n                data;\r\n\r\n            if (node.nodeType !== 1) {\r\n                return result;\r\n            }\r\n\r\n            data = ko.dataFor(node);\r\n\r\n            if (data && data.registerNodes) {\r\n                removeBounded(data, node);\r\n            }\r\n\r\n            return result;\r\n        }\r\n    });\r\n\r\n    return {\r\n\r\n        /**\r\n         * Returns root nodes associated with a model. If callback is provided,\r\n         * will iterate through all of the present nodes triggering callback\r\n         * for each of it. Also it will subscribe to the 'addNode' event.\r\n         *\r\n         * @param {Object} model\r\n         * @param {Function} [callback]\r\n         * @returns {Array|Undefined}\r\n         */\r\n        get: function (model, callback) {\r\n            var nodes = getBounded(model) || [];\r\n\r\n            if (!_.isFunction(callback)) {\r\n                return nodes;\r\n            }\r\n\r\n            nodes.forEach(function (node) {\r\n                callback(node);\r\n            });\r\n\r\n            this.add.apply(this, arguments);\r\n        },\r\n\r\n        /**\r\n         * Subscribes to adding of nodes associated with a model.\r\n         *\r\n         * @param {Object} model\r\n         */\r\n        add: function (model) {\r\n            var args = _.toArray(arguments).slice(1);\r\n\r\n            args.unshift('addNode');\r\n\r\n            Events.on.apply(model, args);\r\n        },\r\n\r\n        /**\r\n         * Subscribes to removal of nodes associated with a model.\r\n         *\r\n         * @param {Object} model\r\n         */\r\n        remove: function (model) {\r\n            var args = _.toArray(arguments).slice(1);\r\n\r\n            args.unshift('removeNode');\r\n\r\n            Events.on.apply(model, args);\r\n        },\r\n\r\n        /**\r\n         * Removes subscriptions from the model.\r\n         *\r\n         * @param {Object} model\r\n         */\r\n        off: function (model) {\r\n            var args = _.toArray(arguments).slice(1);\r\n\r\n            Events.off.apply(model, args);\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/knockout/extender/observable_array.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'underscore'\r\n], function (ko, _) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Iterator function.\r\n     *\r\n     * @param {String} callback\r\n     * @param {Array} args\r\n     * @param {Object} elem\r\n     * @returns {*}\r\n     */\r\n    function iterator(callback, args, elem) {\r\n        callback = elem[callback];\r\n\r\n        if (_.isFunction(callback)) {\r\n            return callback.apply(elem, args);\r\n        }\r\n\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Wrapper function.\r\n     *\r\n     * @param {String} method\r\n     * @returns {Function}\r\n     */\r\n    function wrapper(method) {\r\n        return function (iteratee) {\r\n            var callback = iteratee,\r\n                elems = this(),\r\n                args = _.toArray(arguments);\r\n\r\n            if (_.isString(iteratee)) {\r\n                callback = iterator.bind(null, iteratee, args.slice(1));\r\n\r\n                args.unshift(callback);\r\n            }\r\n\r\n            args.unshift(elems);\r\n\r\n            return _[method].apply(_, args);\r\n        };\r\n    }\r\n\r\n    _.extend(ko.observableArray.fn, {\r\n        each: wrapper('each'),\r\n\r\n        map: wrapper('map'),\r\n\r\n        filter: wrapper('filter'),\r\n\r\n        some: wrapper('some'),\r\n\r\n        every: wrapper('every'),\r\n\r\n        groupBy: wrapper('groupBy'),\r\n\r\n        sortBy: wrapper('sortBy'),\r\n\r\n        /**\r\n         * Wrapper for underscore findWhere function.\r\n         *\r\n         * @param {Object} properties\r\n         * @return {Object}\r\n         */\r\n        findWhere: function (properties) {\r\n            return _.findWhere(this(), properties);\r\n        },\r\n\r\n        /**\r\n         * Wrapper for underscore contains function.\r\n         *\r\n         * @param {*} value\r\n         * @return {Boolean}\r\n         */\r\n        contains: function (value) {\r\n            return _.contains(this(), value);\r\n        },\r\n\r\n        /**\r\n         * Inverse contains call.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        hasNo: function () {\r\n            return !this.contains.apply(this, arguments);\r\n        },\r\n\r\n        /**\r\n         * Getter for length property.\r\n         *\r\n         * @return {Number}\r\n         */\r\n        getLength: function () {\r\n            return this().length;\r\n        },\r\n\r\n        /**\r\n         * Create object with keys that gets from each object property.\r\n         *\r\n         * @return {Object}\r\n         */\r\n        indexBy: function (key) {\r\n            return _.indexBy(this(), key);\r\n        },\r\n\r\n        /**\r\n         * Returns a copy of the array with all instances of the values removed.\r\n         *\r\n         * @return {Array}\r\n         */\r\n        without: function () {\r\n            var args = Array.prototype.slice.call(arguments);\r\n\r\n            args.unshift(this());\r\n\r\n            return _.without.apply(_, args);\r\n        },\r\n\r\n        /**\r\n         * Returns the first element of an array.\r\n         *\r\n         * @return {*}\r\n         */\r\n        first: function () {\r\n            return _.first(this());\r\n        },\r\n\r\n        /**\r\n         * Returns the last element of an array\r\n         *\r\n         * @return {*}\r\n         */\r\n        last: function () {\r\n            return _.last(this());\r\n        },\r\n\r\n        /**\r\n         * Iterate and pick provided properties.\r\n         *\r\n         * @return {Array}\r\n         */\r\n        pluck: function () {\r\n            var args = Array.prototype.slice.call(arguments);\r\n\r\n            args.unshift(this());\r\n\r\n            return _.pluck.apply(_, args);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/lib/knockout/template/engine.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'ko',\r\n    'underscore',\r\n    './observable_source',\r\n    './renderer',\r\n    '../../logger/console-logger'\r\n], function ($, ko, _, Source, renderer, consoleLogger) {\r\n    'use strict';\r\n\r\n    var RemoteTemplateEngine,\r\n        NativeTemplateEngine = ko.nativeTemplateEngine,\r\n        sources = {};\r\n\r\n    /**\r\n     * Remote template engine class. Is used to be able to load remote templates via knockout template binding.\r\n     */\r\n    RemoteTemplateEngine = function () {\r\n        // Instance reference for closure.\r\n        var engine = this,\r\n        // Decorate the builtin Knockout \"template\" binding to track synchronous template renders.\r\n        origUpdate = ko.bindingHandlers.template.update;\r\n\r\n        /**\r\n         * Counter to track the number of currently running render tasks (both synchronous and asynchronous).\r\n         * @type {Number}\r\n         * @private\r\n         */\r\n        this._rendersOutstanding = 0;\r\n\r\n        /**\r\n         * Use a jQuery object as an event bus (but any event emitter with on/off/emit methods could work)\r\n         * @type {jQuery}\r\n         * @private\r\n         */\r\n        this._events = $(this);\r\n\r\n        /**\r\n         * Rendered templates\r\n         * @type {Object}\r\n         * @private\r\n         */\r\n        this._templatesRendered = {};\r\n\r\n        /*eslint-disable no-unused-vars*/\r\n        /**\r\n         * Decorate update method\r\n         *\r\n         * @param {HTMLElement} element\r\n         * @param {Function} valueAccessor\r\n         * @param {Object} allBindings\r\n         * @param {Object} viewModel\r\n         * @param {ko.bindingContext} bindingContext\r\n         * @returns {*}\r\n         */\r\n        ko.bindingHandlers.template.update = function (element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n            /*eslint-enable no-unused-vars*/\r\n            var options = ko.utils.peekObservable(valueAccessor()),\r\n                templateName,\r\n                isSync,\r\n                updated;\r\n\r\n            if (typeof options === 'object') {\r\n                if (options.templateEngine && options.templateEngine !== engine) {\r\n                    return origUpdate.apply(this, arguments);\r\n                }\r\n\r\n                if (!options.name) {\r\n                    consoleLogger.error('Could not find template name', options);\r\n                }\r\n                templateName = options.name;\r\n            } else if (typeof options === 'string') {\r\n                templateName = options;\r\n            } else {\r\n                consoleLogger.error('Could not build a template binding', options);\r\n            }\r\n            engine._trackRender(templateName);\r\n            isSync = engine._hasTemplateLoaded(templateName);\r\n            updated = origUpdate.apply(this, arguments);\r\n\r\n            if (isSync) {\r\n                engine._releaseRender(templateName, 'sync');\r\n            }\r\n\r\n            return updated;\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Creates unique template identifier based on template name and it's extenders (optional)\r\n     * @param  {String} templateName\r\n     * @return {String} - unique template identifier\r\n     */\r\n    function createTemplateIdentifier(templateName) {\r\n        return templateName;\r\n    }\r\n\r\n    RemoteTemplateEngine.prototype = new NativeTemplateEngine;\r\n    RemoteTemplateEngine.prototype.constructor = RemoteTemplateEngine;\r\n\r\n    /**\r\n     * When an asynchronous render task begins, increment the internal counter for tracking when renders are complete.\r\n     * @private\r\n     */\r\n    RemoteTemplateEngine.prototype._trackRender = function (templateName) {\r\n        var rendersForTemplate = this._templatesRendered[templateName] !== undefined ?\r\n            this._templatesRendered[templateName] : 0;\r\n\r\n        this._rendersOutstanding++;\r\n        this._templatesRendered[templateName] = rendersForTemplate + 1;\r\n        this._resolveRenderWaits();\r\n    };\r\n\r\n    /**\r\n     * When an asynchronous render task ends, decrement the internal counter for tracking when renders are complete.\r\n     * @private\r\n     */\r\n    RemoteTemplateEngine.prototype._releaseRender = function (templateName) {\r\n        var rendersForTemplate = this._templatesRendered[templateName];\r\n\r\n        this._rendersOutstanding--;\r\n        this._templatesRendered[templateName] = rendersForTemplate - 1;\r\n        this._resolveRenderWaits();\r\n    };\r\n\r\n    /**\r\n     * Check to see if renders are complete and trigger events for listeners.\r\n     * @private\r\n     */\r\n    RemoteTemplateEngine.prototype._resolveRenderWaits = function () {\r\n        if (this._rendersOutstanding === 0) {\r\n            this._events.triggerHandler('finishrender');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get a promise for the end of the current run of renders, both sync and async.\r\n     * @return {jQueryPromise} - promise that resolves when render completes\r\n     */\r\n    RemoteTemplateEngine.prototype.waitForFinishRender = function () {\r\n        var defer = $.Deferred();\r\n\r\n        this._events.one('finishrender', defer.resolve);\r\n\r\n        return defer.promise();\r\n    };\r\n\r\n    /**\r\n     * Returns true if this template has already been asynchronously loaded and will be synchronously rendered.\r\n     * @param {String} templateName\r\n     * @returns {Boolean}\r\n     * @private\r\n     */\r\n    RemoteTemplateEngine.prototype._hasTemplateLoaded = function (templateName) {\r\n        // Sources object will have cached template once makeTemplateSource has run\r\n        return sources.hasOwnProperty(templateName);\r\n    };\r\n\r\n    /**\r\n     * Overrided method of native knockout template engine.\r\n     * Caches template after it's unique name and renders in once.\r\n     * If template name is not typeof string, delegates work to knockout.templateSources.anonymousTemplate.\r\n     * @param  {*} template\r\n     * @param  {HTMLElement} templateDocument - document\r\n     * @param  {Object} options - options, passed to template binding\r\n     * @param  {ko.bindingContext} bindingContext\r\n     * @returns {TemplateSource} Object with methods 'nodes' and 'data'.\r\n     */\r\n    RemoteTemplateEngine.prototype.makeTemplateSource = function (template, templateDocument, options, bindingContext) {\r\n        var engine = this,\r\n            source,\r\n            templateId;\r\n\r\n        if (typeof template === 'string') {\r\n            templateId = createTemplateIdentifier(template);\r\n            source = sources[templateId];\r\n\r\n            if (!source) {\r\n                source = new Source(template);\r\n                source.requestedBy = bindingContext.$data.name;\r\n                sources[templateId] = source;\r\n\r\n                consoleLogger.info('templateStartLoading', {\r\n                    template: templateId,\r\n                    component: bindingContext.$data.name\r\n                });\r\n\r\n                renderer.render(template).then(function (rendered) {\r\n                    consoleLogger.info('templateLoadedFromServer', {\r\n                        template: templateId,\r\n                        component: bindingContext.$data.name\r\n                    });\r\n                    source.nodes(rendered);\r\n                    engine._releaseRender(templateId, 'async');\r\n                }).fail(function () {\r\n                    consoleLogger.error('templateLoadingFail', {\r\n                        template: templateId,\r\n                        component: bindingContext.$data.name\r\n                    });\r\n                });\r\n            }\r\n\r\n            if (source.requestedBy !== bindingContext.$data.name) {\r\n                consoleLogger.info('templateLoadedFromCache', {\r\n                    template: templateId,\r\n                    component: bindingContext.$data.name\r\n                });\r\n            }\r\n\r\n            return source;\r\n        } else if (template.nodeType === 1 || template.nodeType === 8) {\r\n            source = new ko.templateSources.anonymousTemplate(template);\r\n\r\n            return source;\r\n        }\r\n\r\n        throw new Error('Unknown template type: ' + template);\r\n    };\r\n\r\n    /**\r\n     * Overrided method of native knockout template engine.\r\n     * Should return array of html elements.\r\n     * @param  {TemplateSource} templateSource - object with methods 'nodes' and 'data'.\r\n     * @return {Array} - array of html elements\r\n     */\r\n    RemoteTemplateEngine.prototype.renderTemplateSource = function (templateSource) {\r\n        var nodes = templateSource.nodes();\r\n\r\n        return ko.utils.cloneNodes(nodes);\r\n    };\r\n\r\n    /**\r\n     * Overrided method of native knockout template engine.\r\n     * Created in order to invoke makeTemplateSource method with custom set of params.\r\n     * @param  {*} template - template identifier\r\n     * @param  {ko.bindingContext} bindingContext\r\n     * @param  {Object} options - options, passed to template binding\r\n     * @param  {HTMLElement} templateDocument - document\r\n     * @return {Array} - array of html elements\r\n     */\r\n    RemoteTemplateEngine.prototype.renderTemplate = function (template, bindingContext, options, templateDocument) {\r\n        var templateSource = this.makeTemplateSource(template, templateDocument, options, bindingContext);\r\n\r\n        return this.renderTemplateSource(templateSource);\r\n    };\r\n\r\n    return new RemoteTemplateEngine;\r\n});\r\n","Magento_Ui/js/lib/knockout/template/loader.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    var licenseRegExp   = /<!--[\\s\\S]*?-->/,\r\n        defaultPlugin   = 'text',\r\n        defaultExt      = 'html';\r\n\r\n    /**\r\n     * Checks of provided string contains a file extension.\r\n     *\r\n     * @param {String} str - String to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    function hasFileExtension(str) {\r\n        return !!~str.indexOf('.') && !!str.split('.').pop();\r\n    }\r\n\r\n    /**\r\n     * Checks if provided string contains a requirejs's plugin reference.\r\n     *\r\n     * @param {String} str - String to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    function hasPlugin(str) {\r\n        return !!~str.indexOf('!');\r\n    }\r\n\r\n    /**\r\n     * Checks if provided string is a full path to the file.\r\n     *\r\n     * @param {String} str - String to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    function isFullPath(str) {\r\n        return !!~str.indexOf('://');\r\n    }\r\n\r\n    /**\r\n     * Removes license comment from the provided string.\r\n     *\r\n     * @param {String} content - String to be processed.\r\n     * @returns {String}\r\n     */\r\n    function removeLicense(content) {\r\n        return content.replace(licenseRegExp, function (match) {\r\n            return ~match.indexOf('/**') ? '' : match;\r\n        });\r\n    }\r\n\r\n    return {\r\n\r\n        /**\r\n         * Attempts to extract template by provided path from\r\n         * a DOM element and falls back to a file loading if\r\n         * none of the DOM nodes was found.\r\n         *\r\n         * @param {String} path - Path to the template or a DOM selector.\r\n         * @returns {jQueryPromise}\r\n         */\r\n        loadTemplate: function (path) {\r\n            var content = this.loadFromNode(path),\r\n                defer;\r\n\r\n            if (content) {\r\n                defer = $.Deferred();\r\n\r\n                defer.resolve(content);\r\n\r\n                return defer.promise();\r\n            }\r\n\r\n            return this.loadFromFile(path);\r\n        },\r\n\r\n        /**\r\n         * Loads template from external file by provided\r\n         * path, which will be preliminary formatted.\r\n         *\r\n         * @param {String} path - Path to the template.\r\n         * @returns {jQueryPromise}\r\n         */\r\n        loadFromFile: function (path) {\r\n            var loading = $.Deferred();\r\n\r\n            path = this.formatPath(path);\r\n\r\n            require([path], function (template) {\r\n                template = removeLicense(template);\r\n                loading.resolve(template);\r\n            }, function (err) {\r\n                loading.reject(err);\r\n            });\r\n\r\n            return loading.promise();\r\n        },\r\n\r\n        /**\r\n         * Attempts to extract content of a node found by provided selector.\r\n         *\r\n         * @param {String} selector - Node's selector (not necessary valid).\r\n         * @returns {String|Boolean} If specified node doesn't exists\r\n         *      'false' will be returned, otherwise returns node's content.\r\n         */\r\n        loadFromNode: function (selector) {\r\n            var node;\r\n\r\n            try {\r\n                node =\r\n                    document.getElementById(selector) ||\r\n                    document.querySelector(selector);\r\n\r\n                return node ? node.innerHTML : false;\r\n            } catch (e) {\r\n                return false;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Adds requirejs's plugin and file extension to\r\n         * to the provided string if it's necessary.\r\n         *\r\n         * @param {String} path - Path to be processed.\r\n         * @returns {String} Formatted path.\r\n         */\r\n        formatPath: function (path) {\r\n            var result = path;\r\n\r\n            if (!hasPlugin(path)) {\r\n                result = defaultPlugin + '!' + result;\r\n            }\r\n\r\n            if (isFullPath(path)) {\r\n                return result;\r\n            }\r\n\r\n            if (!hasFileExtension(path)) {\r\n                result += '.' + defaultExt;\r\n            }\r\n\r\n            return result.replace(/^([^\\/]+)/g, '$1/template');\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/knockout/template/observable_source.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/**\r\n * Is being used by knockout template engine to store template to.\r\n */\r\ndefine([\r\n    'ko',\r\n    'uiClass'\r\n], function (ko, Class) {\r\n    'use strict';\r\n\r\n    return Class.extend({\r\n\r\n        /**\r\n         * Initializes templateName, _data, nodes properties.\r\n         *\r\n         * @param  {template} template - identifier of template\r\n         */\r\n        initialize: function (template) {\r\n            this.templateName = template;\r\n            this._data = {};\r\n            this.nodes = ko.observable([]);\r\n        },\r\n\r\n        /**\r\n         * Data setter. If only one arguments passed, returns corresponding value.\r\n         * Else, writes into it.\r\n         * @param  {String} key - key to write to or to read from\r\n         * @param  {*} value\r\n         * @return {*} - if 1 arg provided, Returns _data[key] property\r\n         */\r\n        data: function (key, value) {\r\n            if (arguments.length === 1) {\r\n                return this._data[key];\r\n            }\r\n\r\n            this._data[key] = value;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/lib/knockout/template/renderer.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    './loader'\r\n], function ($, _, loader) {\r\n    'use strict';\r\n\r\n    var colonReg       = /\\\\:/g,\r\n        renderedTemplatePromises = {},\r\n        attributes     = {},\r\n        elements       = {},\r\n        globals        = [],\r\n        renderer,\r\n        preset;\r\n\r\n    renderer = {\r\n\r\n        /**\r\n         * Loads template by provided path and\r\n         * than converts it's content to html.\r\n         *\r\n         * @param {String} tmplPath - Path to the template.\r\n         * @returns {jQueryPromise}\r\n         * @alias getRendered\r\n         */\r\n        render: function (tmplPath) {\r\n            var cachedPromise = renderedTemplatePromises[tmplPath];\r\n\r\n            if (!cachedPromise) {\r\n                cachedPromise = renderedTemplatePromises[tmplPath] = loader\r\n                    .loadTemplate(tmplPath)\r\n                    .then(renderer.parseTemplate);\r\n            }\r\n\r\n            return cachedPromise;\r\n        },\r\n\r\n        /**\r\n         * @ignore\r\n         */\r\n        getRendered: function (tmplPath) {\r\n            return renderer.render(tmplPath);\r\n        },\r\n\r\n        /**\r\n         * Parses provided string as html content\r\n         * and returns an array of DOM elements.\r\n         *\r\n         * @param {String} html - String to be processed.\r\n         * @returns {Array}\r\n         */\r\n        parseTemplate: function (html) {\r\n            var fragment = document.createDocumentFragment();\r\n\r\n            $(fragment).append(html);\r\n\r\n            return renderer.normalize(fragment);\r\n        },\r\n\r\n        /**\r\n         * Processes custom attributes and nodes of provided DOM element.\r\n         *\r\n         * @param {HTMLElement} content - Element to be processed.\r\n         * @returns {Array} An array of content's child nodes.\r\n         */\r\n        normalize: function (content) {\r\n            globals.forEach(function (handler) {\r\n                handler(content);\r\n            });\r\n\r\n            return _.toArray(content.childNodes);\r\n        },\r\n\r\n        /**\r\n         * Adds new global content handler.\r\n         *\r\n         * @param {Function} handler - Function which will be invoked for\r\n         *      an every content passed to 'normalize' method.\r\n         * @returns {Renderer} Chainable.\r\n         */\r\n        addGlobal: function (handler) {\r\n            if (!_.contains(globals, handler)) {\r\n                globals.push(handler);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes specified global content handler.\r\n         *\r\n         * @param {Function} handler - Handler to be removed.\r\n         * @returns {Renderer} Chainable.\r\n         */\r\n        removeGlobal: function (handler) {\r\n            var index = globals.indexOf(handler);\r\n\r\n            if (~index) {\r\n                globals.splice(index, 1);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Adds new custom attribute handler.\r\n         *\r\n         * @param {String} id - Attribute identifier.\r\n         * @param {(Object|Function)} [config={}]\r\n         * @returns {Renderer} Chainable.\r\n         */\r\n        addAttribute: function (id, config) {\r\n            var data = {\r\n                name: id,\r\n                binding: id,\r\n                handler: renderer.handlers.attribute\r\n            };\r\n\r\n            if (_.isFunction(config)) {\r\n                data.handler = config;\r\n            } else if (_.isObject(config)) {\r\n                _.extend(data, config);\r\n            }\r\n\r\n            data.id = id;\r\n            attributes[id] = data;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes specified attribute handler.\r\n         *\r\n         * @param {String} id - Attribute identifier.\r\n         * @returns {Renderer} Chainable.\r\n         */\r\n        removeAttribute: function (id) {\r\n            delete attributes[id];\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Adds new custom node handler.\r\n         *\r\n         * @param {String} id - Node identifier.\r\n         * @param {(Object|Function)} [config={}]\r\n         * @returns {Renderer} Chainable.\r\n         */\r\n        addNode: function (id, config) {\r\n            var data = {\r\n                name: id,\r\n                binding: id,\r\n                handler: renderer.handlers.node\r\n            };\r\n\r\n            if (_.isFunction(config)) {\r\n                data.handler = config;\r\n            } else if (_.isObject(config)) {\r\n                _.extend(data, config);\r\n            }\r\n\r\n            data.id = id;\r\n            elements[id] = data;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes specified custom node handler.\r\n         *\r\n         * @param {String} id - Node identifier.\r\n         * @returns {Renderer} Chainable.\r\n         */\r\n        removeNode: function (id) {\r\n            delete elements[id];\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if provided DOM element is a custom node.\r\n         *\r\n         * @param {HTMLElement} node - Node to be checked.\r\n         * @returns {Boolean}\r\n         */\r\n        isCustomNode: function (node) {\r\n            return _.some(elements, function (elem) {\r\n                return elem.name.toUpperCase() === node.tagName;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Processes custom attributes of a content's child nodes.\r\n         *\r\n         * @param {HTMLElement} content - DOM element to be processed.\r\n         */\r\n        processAttributes: function (content) {\r\n            var repeat;\r\n\r\n            repeat = _.some(attributes, function (attr) {\r\n                var attrName = attr.name,\r\n                    nodes    = content.querySelectorAll('[' + attrName + ']'),\r\n                    handler  = attr.handler;\r\n\r\n                return _.toArray(nodes).some(function (node) {\r\n                    var data = node.getAttribute(attrName);\r\n\r\n                    return handler(node, data, attr) === true;\r\n                });\r\n            });\r\n\r\n            if (repeat) {\r\n                renderer.processAttributes(content);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Processes custom nodes of a provided content.\r\n         *\r\n         * @param {HTMLElement} content - DOM element to be processed.\r\n         */\r\n        processNodes: function (content) {\r\n            var repeat;\r\n\r\n            repeat = _.some(elements, function (element) {\r\n                var nodes   = content.querySelectorAll(element.name),\r\n                    handler = element.handler;\r\n\r\n                return _.toArray(nodes).some(function (node) {\r\n                    var data = node.getAttribute('args');\r\n\r\n                    return handler(node, data, element) === true;\r\n                });\r\n            });\r\n\r\n            if (repeat) {\r\n                renderer.processNodes(content);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Wraps provided string in curly braces if it's necessary.\r\n         *\r\n         * @param {String} args - String to be wrapped.\r\n         * @returns {String} Wrapped string.\r\n         */\r\n        wrapArgs: function (args) {\r\n            if (~args.indexOf('\\\\:')) {\r\n                args = args.replace(colonReg, ':');\r\n            } else if (~args.indexOf(':') && !~args.indexOf('}')) {\r\n                args = '{' + args + '}';\r\n            }\r\n\r\n            return args;\r\n        },\r\n\r\n        /**\r\n         * Wraps child nodes of provided DOM element\r\n         * with knockout's comment tag.\r\n         *\r\n         * @param {HTMLElement} node - Node whose children should be wrapped.\r\n         * @param {String} binding - Name of the binding for the opener comment tag.\r\n         * @param {String} data - Data associated with a binding.\r\n         *\r\n         * @example\r\n         *      <div id=\"example\"><span/></div>\r\n         *      wrapChildren(document.getElementById('example'), 'foreach', 'data');\r\n         *      =>\r\n         *      <div id=\"example\">\r\n         *      <!-- ko foreach: data -->\r\n         *          <span></span>\r\n         *      <!-- /ko -->\r\n         *      </div>\r\n         */\r\n        wrapChildren: function (node, binding, data) {\r\n            var tag = this.createComment(binding, data),\r\n                $node = $(node);\r\n\r\n            $node.prepend(tag.open);\r\n            $node.append(tag.close);\r\n        },\r\n\r\n        /**\r\n         * Wraps specified node with knockout's comment tag.\r\n         *\r\n         * @param {HTMLElement} node - Node to be wrapped.\r\n         * @param {String} binding - Name of the binding for the opener comment tag.\r\n         * @param {String} data - Data associated with a binding.\r\n         *\r\n         * @example\r\n         *      <div id=\"example\"></div>\r\n         *      wrapNode(document.getElementById('example'), 'foreach', 'data');\r\n         *      =>\r\n         *      <!-- ko foreach: data -->\r\n         *          <div id=\"example\"></div>\r\n         *      <!-- /ko -->\r\n         */\r\n        wrapNode: function (node, binding, data) {\r\n            var tag = this.createComment(binding, data),\r\n                $node = $(node);\r\n\r\n            $node.before(tag.open);\r\n            $node.after(tag.close);\r\n        },\r\n\r\n        /**\r\n         * Creates knockouts' comment tag for the provided binding.\r\n         *\r\n         * @param {String} binding - Name of the binding.\r\n         * @param {String} data - Data associated with a binding.\r\n         * @returns {Object} Object with an open and close comment elements.\r\n         */\r\n        createComment: function (binding, data) {\r\n            return {\r\n                open: document.createComment(' ko ' + binding + ': ' + data + ' '),\r\n                close: document.createComment(' /ko ')\r\n            };\r\n        }\r\n    };\r\n\r\n    renderer.handlers = {\r\n\r\n        /**\r\n         * Basic node handler. Replaces custom nodes\r\n         * with a corresponding knockout's comment tag.\r\n         *\r\n         * @param {HTMLElement} node - Node to be processed.\r\n         * @param {String} data\r\n         * @param {Object} element\r\n         * @returns {Boolean} True\r\n         *\r\n         * @example Sample syntaxes conversions.\r\n         *      <with args=\"model\">\r\n         *          <span/>\r\n         *      </with>\r\n         *      =>\r\n         *      <!-- ko with: model-->\r\n         *          <span/>\r\n         *      <!-- /ko -->\r\n         */\r\n        node: function (node, data, element) {\r\n            data = renderer.wrapArgs(data);\r\n\r\n            renderer.wrapNode(node, element.binding, data);\r\n            $(node).replaceWith(node.childNodes);\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Base attribute handler. Replaces custom attributes with\r\n         * a corresponding knockouts' data binding.\r\n         *\r\n         * @param {HTMLElement} node - Node to be processed.\r\n         * @param {String} data - Data associated with a binding.\r\n         * @param {Object} attr - Attribute definition.\r\n         *\r\n         * @example Sample syntaxes conversions.\r\n         *      <div text=\"label\"></div>\r\n         *      =>\r\n         *      <div data-bind=\"text: label\"></div>\r\n         */\r\n        attribute: function (node, data, attr) {\r\n            data = renderer.wrapArgs(data);\r\n\r\n            renderer.bindings.add(node, attr.binding, data);\r\n            node.removeAttribute(attr.name);\r\n        },\r\n\r\n        /**\r\n         * Wraps provided node with a knockouts' comment tag.\r\n         *\r\n         * @param {HTMLElement} node - Node that will be wrapped.\r\n         * @param {String} data - Data associated with a binding.\r\n         * @param {Object} attr - Attribute definition.\r\n         *\r\n         * @example\r\n         *      <div outereach=\"data\" class=\"test\"></div>\r\n         *      =>\r\n         *      <!-- ko foreach: data -->\r\n         *          <div class=\"test\"></div>\r\n         *      <!-- /ko -->\r\n         */\r\n        wrapAttribute: function (node, data, attr) {\r\n            data = renderer.wrapArgs(data);\r\n\r\n            renderer.wrapNode(node, attr.binding, data);\r\n            node.removeAttribute(attr.name);\r\n        }\r\n    };\r\n\r\n    renderer.bindings = {\r\n\r\n        /**\r\n         * Appends binding string to the current\r\n         * 'data-bind' attribute of provided node.\r\n         *\r\n         * @param {HTMLElement} node - DOM element whose 'data-bind' attribute will be extended.\r\n         * @param {String} name - Name of a binding.\r\n         * @param {String} data - Data associated with the binding.\r\n         */\r\n        add: function (node, name, data) {\r\n            var bindings = this.get(node);\r\n\r\n            if (bindings) {\r\n                bindings += ', ';\r\n            }\r\n\r\n            bindings += name;\r\n\r\n            if (data) {\r\n                bindings += ': ' + data;\r\n            }\r\n\r\n            this.set(node, bindings);\r\n        },\r\n\r\n        /**\r\n         * Extracts value of a 'data-bind' attribute from provided node.\r\n         *\r\n         * @param {HTMLElement} node - Node whose attribute to be extracted.\r\n         * @returns {String}\r\n         */\r\n        get: function (node) {\r\n            return node.getAttribute('data-bind') || '';\r\n        },\r\n\r\n        /**\r\n         * Sets 'data-bind' attribute of the specified node\r\n         * to the provided value.\r\n         *\r\n         * @param {HTMLElement} node - Node whose attribute will be altered.\r\n         * @param {String} bindings - New value of 'data-bind' attribute.\r\n         */\r\n        set: function (node, bindings) {\r\n            node.setAttribute('data-bind', bindings);\r\n        }\r\n    };\r\n\r\n    renderer\r\n        .addGlobal(renderer.processAttributes)\r\n        .addGlobal(renderer.processNodes);\r\n\r\n    /**\r\n     * Collection of default binding conversions.\r\n     */\r\n    preset = {\r\n        nodes: _.object([\r\n            'if',\r\n            'text',\r\n            'with',\r\n            'scope',\r\n            'ifnot',\r\n            'foreach',\r\n            'component'\r\n        ], Array.prototype),\r\n        attributes: _.object([\r\n            'css',\r\n            'attr',\r\n            'html',\r\n            'with',\r\n            'text',\r\n            'click',\r\n            'event',\r\n            'submit',\r\n            'enable',\r\n            'disable',\r\n            'options',\r\n            'visible',\r\n            'template',\r\n            'hasFocus',\r\n            'textInput',\r\n            'component',\r\n            'uniqueName',\r\n            'optionsText',\r\n            'optionsValue',\r\n            'checkedValue',\r\n            'selectedOptions'\r\n        ], Array.prototype)\r\n    };\r\n\r\n    _.extend(preset.attributes, {\r\n        if: renderer.handlers.wrapAttribute,\r\n        ifnot: renderer.handlers.wrapAttribute,\r\n        innerif: {\r\n            binding: 'if'\r\n        },\r\n        innerifnot: {\r\n            binding: 'ifnot'\r\n        },\r\n        outereach: {\r\n            binding: 'foreach',\r\n            handler: renderer.handlers.wrapAttribute\r\n        },\r\n        foreach: {\r\n            name: 'each'\r\n        },\r\n        value: {\r\n            name: 'ko-value'\r\n        },\r\n        style: {\r\n            name: 'ko-style'\r\n        },\r\n        checked: {\r\n            name: 'ko-checked'\r\n        },\r\n        disabled: {\r\n            name: 'ko-disabled',\r\n            binding: 'disable'\r\n        },\r\n        focused: {\r\n            name: 'ko-focused',\r\n            binding: 'hasFocus'\r\n        },\r\n\r\n        /**\r\n         * Custom 'render' attribute handler function. Wraps child elements\r\n         * of a node with knockout's 'ko template:' comment tag.\r\n         *\r\n         * @param {HTMLElement} node - Element to be processed.\r\n         * @param {String} data - Data specified in 'render' attribute of a node.\r\n         */\r\n        render: function (node, data) {\r\n            data = data || 'getTemplate()';\r\n            data = renderer.wrapArgs(data);\r\n\r\n            renderer.wrapChildren(node, 'template', data);\r\n            node.removeAttribute('render');\r\n        }\r\n    });\r\n\r\n    _.extend(preset.nodes, {\r\n        foreach: {\r\n            name: 'each'\r\n        },\r\n\r\n        /**\r\n         * Custom 'render' node handler function.\r\n         * Replaces node with knockout's 'ko template:' comment tag.\r\n         *\r\n         * @param {HTMLElement} node - Element to be processed.\r\n         * @param {String} data - Data specified in 'args' attribute of a node.\r\n         */\r\n        render: function (node, data) {\r\n            data = data || 'getTemplate()';\r\n            data = renderer.wrapArgs(data);\r\n\r\n            renderer.wrapNode(node, 'template', data);\r\n            $(node).replaceWith(node.childNodes);\r\n        }\r\n    });\r\n\r\n    _.each(preset.attributes, function (data, id) {\r\n        renderer.addAttribute(id, data);\r\n    });\r\n\r\n    _.each(preset.nodes, function (data, id) {\r\n        renderer.addNode(id, data);\r\n    });\r\n\r\n    return renderer;\r\n});\r\n","Magento_Ui/js/lib/logger/console-logger.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    './logger',\r\n    './entry-factory',\r\n    './console-output-handler',\r\n    './formatter',\r\n    './message-pool',\r\n    './levels-pool',\r\n    'Magento_Ui/js/lib/core/storage/local',\r\n    'underscore',\r\n    './logger-utils'\r\n], function (Logger, entryFactory, ConsoleHandler, Formatter, messagePoll, levelsPoll, storage, _, LoggerUtils) {\r\n    'use strict';\r\n\r\n    var STORAGE_NAMESPACE = 'CONSOLE_LOGGER';\r\n\r\n    /**\r\n     * Singleton Logger's sub-class instance of which is configured to display its\r\n     * messages to the console. It also provides the support of predefined messages\r\n     * and persists its display level.\r\n     */\r\n    function ConsoleLogger() {\r\n        var formatter = new Formatter(),\r\n            consoleHandler = new ConsoleHandler(formatter),\r\n            savedLevel = storage.get(STORAGE_NAMESPACE),\r\n            utils = new LoggerUtils(this);\r\n\r\n        Logger.call(this, consoleHandler, entryFactory);\r\n\r\n        if (savedLevel) {\r\n            this.displayLevel_ = savedLevel;\r\n        }\r\n\r\n        this.utils = utils;\r\n        this.messages = messagePoll;\r\n        this.levels = levelsPoll.getLevels();\r\n    }\r\n\r\n    _.extend(ConsoleLogger, Logger);\r\n\r\n    ConsoleLogger.prototype = Object.create(Logger.prototype);\r\n    ConsoleLogger.prototype.constructor = ConsoleLogger;\r\n\r\n    /**\r\n     * Overrides parent method to save the provided display level.\r\n     *\r\n     * @override\r\n     */\r\n    ConsoleLogger.prototype.setDisplayLevel = function (level) {\r\n        Logger.prototype.setDisplayLevel.call(this, level);\r\n\r\n        storage.set(STORAGE_NAMESPACE, level);\r\n    };\r\n\r\n    /**\r\n     * Adds the support of predefined messages.\r\n     *\r\n     * @protected\r\n     * @override\r\n     */\r\n    ConsoleLogger.prototype.createEntry_ = function (message, level, data) {\r\n        var code;\r\n\r\n        if (messagePoll.hasMessage(message)) {\r\n            data = data || {};\r\n            code = message;\r\n            message = messagePoll.getMessage(code);\r\n\r\n            data.messageCode = code;\r\n        }\r\n\r\n        return Logger.prototype.createEntry_.call(this, message, level, data);\r\n    };\r\n\r\n    return new ConsoleLogger();\r\n});\r\n","Magento_Ui/js/lib/logger/console-output-handler.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    './levels-pool'\r\n], function (logLevels) {\r\n    'use strict';\r\n\r\n    var levels = logLevels.getLevels();\r\n\r\n    /**\r\n     * @param {LogFormatter} formatter\r\n     */\r\n    function ConsoleOutputHandler(formatter) {\r\n        /**\r\n         * @protected\r\n         * @type {LogFormatter}\r\n         */\r\n        this.formatter_ = formatter;\r\n    }\r\n\r\n    /**\r\n     * Display data of the provided entry to the console.\r\n     *\r\n     * @param {LogEntry} entry - Entry to be displayed.\r\n     */\r\n    ConsoleOutputHandler.prototype.show = function (entry) {\r\n        var displayString = this.formatter_.process(entry);\r\n\r\n        switch (entry.level) {\r\n            case levels.ERROR:\r\n                console.error(displayString);\r\n                break;\r\n\r\n            case levels.WARN:\r\n                console.warn(displayString);\r\n                break;\r\n\r\n            case levels.INFO:\r\n                console.info(displayString);\r\n                break;\r\n\r\n            case levels.DEBUG:\r\n                console.log(displayString);\r\n                break;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Displays the array of entries.\r\n     *\r\n     * @param {Array<LogEntry>} entries\r\n     */\r\n    ConsoleOutputHandler.prototype.dump = function (entries) {\r\n        entries.forEach(this.show, this);\r\n    };\r\n\r\n    return ConsoleOutputHandler;\r\n});\r\n","Magento_Ui/js/lib/logger/entry-factory.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    './entry'\r\n], function (LogEntry) {\r\n    'use strict';\r\n\r\n    return {\r\n        /**\r\n         * @param {String} message\r\n         * @param {Number} level\r\n         * @param {Object} [messageData]\r\n         * @returns {LogEntry}\r\n         */\r\n        createEntry: function (message, level, messageData) {\r\n            return new LogEntry(message, level, messageData);\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/logger/entry.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    './levels-pool'\r\n], function (logLevels) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {String} message\r\n     * @param {Number} level\r\n     * @param {Object} [data]\r\n     */\r\n    function LogEntry(message, level, data) {\r\n        /**\r\n         * @readonly\r\n         * @type {Number}\r\n         */\r\n        this.timestamp = Date.now();\r\n\r\n        /**\r\n         * @readonly\r\n         * @type {Number}\r\n         */\r\n        this.level = level;\r\n\r\n        /**\r\n         * @readonly\r\n         * @type {String}\r\n         */\r\n        this.levelName = logLevels.getNameByCode(level);\r\n\r\n        /**\r\n         * @readonly\r\n         * @type {Object}\r\n         */\r\n        this.data = data;\r\n\r\n        /**\r\n         * @readonly\r\n         * @type {String}\r\n         */\r\n        this.message = message;\r\n    }\r\n\r\n    return LogEntry;\r\n});\r\n","Magento_Ui/js/lib/logger/formatter.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'moment',\r\n    'mage/utils/template'\r\n], function (moment, mageTemplate) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {String} dateFormat\r\n     * @param {String} template\r\n     */\r\n    function LogFormatter(dateFormat, template) {\r\n        /**\r\n         * @protected\r\n         * @type {String}\r\n         */\r\n        this.dateFormat_ = 'YYYY-MM-DD hh:mm:ss';\r\n\r\n        /**\r\n         * @protected\r\n         * @type {String}\r\n         */\r\n        this.template_ = '[${ $.date }] [${ $.entry.levelName }] ${ $.message }';\r\n\r\n        if (dateFormat) {\r\n            this.dateFormat_ = dateFormat;\r\n        }\r\n\r\n        if (template) {\r\n            this.template_ = template;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {LogEntry} entry\r\n     * @returns {String}\r\n     */\r\n    LogFormatter.prototype.process = function (entry) {\r\n        var message = mageTemplate.template(entry.message, entry.data),\r\n            date = moment(entry.timestamp).format(this.dateFormat_);\r\n\r\n        return mageTemplate.template(this.template_, {\r\n            date: date,\r\n            entry: entry,\r\n            message: message\r\n        });\r\n    };\r\n\r\n    return LogFormatter;\r\n});\r\n","Magento_Ui/js/lib/logger/levels-pool.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore'\r\n], function (_) {\r\n    'use strict';\r\n\r\n    var LEVELS,\r\n        CODE_MAP;\r\n\r\n    LEVELS = {\r\n        NONE: 0,\r\n        ERROR: 1,\r\n        WARN: 2,\r\n        INFO: 3,\r\n        DEBUG: 4,\r\n        ALL: 5\r\n    };\r\n\r\n    CODE_MAP = _.invert(LEVELS);\r\n\r\n    return {\r\n        /**\r\n         * Returns the list of available log levels.\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        getLevels: function () {\r\n            return LEVELS;\r\n        },\r\n\r\n        /**\r\n         * Returns name of the log level that matches to the provided code.\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getNameByCode: function (code) {\r\n            return CODE_MAP[code];\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/logger/logger-utils.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * Utils methods for logger\r\n     * @param {Logger} logger\r\n     */\r\n    function LogUtils(logger) {\r\n        this.logger = logger;\r\n\r\n    }\r\n\r\n    /**\r\n     * Method for logging asynchronous operations\r\n     * @param {Promise} promise\r\n     * @param {Object} config\r\n     */\r\n    LogUtils.prototype.asyncLog = function (promise, config) {\r\n        var levels,\r\n            messages,\r\n            wait;\r\n\r\n        config = config || {};\r\n        levels = config.levels || this.createLevels();\r\n        messages = config.messages || this.createMessages();\r\n        wait = config.wait || 5000;\r\n\r\n        this.logger[levels.requested](messages.requested, config.data);\r\n        setTimeout(function () {\r\n            promise.state() === 'pending' ?\r\n                this.logger[levels.failed](messages.failed, config.data) :\r\n                this.logger[levels.loaded](messages.loaded, config.data);\r\n        }.bind(this), wait);\r\n    };\r\n\r\n    /**\r\n     * Method that creates object of messages\r\n     * @param {String} requested - log message that showing that request for class is started\r\n     * @param {String} loaded - log message that show when requested class is loaded\r\n     * @param {String} failed - log message that show when requested class is failed\r\n     * @returns {Object}\r\n     */\r\n    LogUtils.prototype.createMessages = function (requested, loaded, failed) {\r\n        return {\r\n            requested: requested || '',\r\n            loaded: loaded || '',\r\n            failed: failed || ''\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Method that creates object of log levels\r\n     * @param {String} requested - log message that showing that request for class is started\r\n     * @param {String} loaded - log message that show when requested class is loaded\r\n     * @param {String} failed - log message that show when requested class is failed\r\n     * @returns {Object}\r\n     */\r\n    LogUtils.prototype.createLevels = function (requested, loaded, failed) {\r\n        return {\r\n            requested: requested || 'info',\r\n            loaded: loaded || 'info',\r\n            failed: failed || 'warn'\r\n        };\r\n    };\r\n\r\n    return LogUtils;\r\n});\r\n","Magento_Ui/js/lib/logger/logger.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    './levels-pool'\r\n], function (logLevels) {\r\n    'use strict';\r\n\r\n    var levels = logLevels.getLevels();\r\n\r\n    /**\r\n     * @param {LogOutputHandler} outputHandler\r\n     * @param {LogEntryFactory} entryFactory\r\n     */\r\n    function Logger(outputHandler, entryFactory) {\r\n        /**\r\n         * An array of log entries.\r\n         *\r\n         * @protected\r\n         * @type {Array<LogEntry>}\r\n         */\r\n        this.entries_ = [];\r\n\r\n        /**\r\n         * Current display level.\r\n         *\r\n         * @protected\r\n         * @type {Number}\r\n         */\r\n        this.displayLevel_ = levels.ERROR;\r\n\r\n        /**\r\n         * An array of display criteria.\r\n         *\r\n         * @protected\r\n         * @type {Array<LogCriteria>}\r\n         */\r\n        this.displayCriteria_ = [];\r\n\r\n        /**\r\n         * @protected\r\n         * @type {LogEntryFactory}\r\n         */\r\n        this.entryFactory_ = entryFactory;\r\n\r\n        /**\r\n         * @protected\r\n         * @type {Array<LogOutputHandler>}\r\n         */\r\n        this.outputHandlers_ = [outputHandler];\r\n\r\n        this.addDisplayCriteria(this.matchesLevel_);\r\n    }\r\n\r\n    /**\r\n     * Swaps current display level with the provided one.\r\n     *\r\n     * @param {Number} level - Level's code.\r\n     */\r\n    Logger.prototype.setDisplayLevel = function (level) {\r\n        var levelName = logLevels.getNameByCode(level);\r\n\r\n        if (!levelName) {\r\n            throw new TypeError('The provided level is not defined in the levels list.');\r\n        }\r\n\r\n        this.displayLevel_ = level;\r\n    };\r\n\r\n    /**\r\n     * Sets up the criteria by which log entries will be filtered out from the output.\r\n     *\r\n     * @param {LogCriteria} criteria\r\n     */\r\n    Logger.prototype.addDisplayCriteria = function (criteria) {\r\n        this.displayCriteria_.push(criteria);\r\n    };\r\n\r\n    /**\r\n     * Removes previously defined criteria.\r\n     *\r\n     * @param {LogCriteria} criteria\r\n     */\r\n    Logger.prototype.removeDisplayCriteria = function (criteria) {\r\n        var index = this.displayCriteria_.indexOf(criteria);\r\n\r\n        if (~index) {\r\n            this.displayCriteria_.splice(index, 1);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @param {String} message\r\n     * @param {Object} [messageData]\r\n     * @returns {LogEntry}\r\n     */\r\n    Logger.prototype.error = function (message, messageData) {\r\n        return this.log_(message, levels.ERROR, messageData);\r\n    };\r\n\r\n    /**\r\n     * @param {String} message\r\n     * @param {Object} [messageData]\r\n     * @returns {LogEntry}\r\n     */\r\n    Logger.prototype.warn = function (message, messageData) {\r\n        return this.log_(message, levels.WARN, messageData);\r\n    };\r\n\r\n    /**\r\n     * @param {String} message\r\n     * @param {Object} [messageData]\r\n     * @returns {LogEntry}\r\n     */\r\n    Logger.prototype.info = function (message, messageData) {\r\n        return this.log_(message, levels.INFO, messageData);\r\n    };\r\n\r\n    /**\r\n     * @param {String} message\r\n     * @param {Object} [messageData]\r\n     * @returns {LogEntry}\r\n     */\r\n    Logger.prototype.debug = function (message, messageData) {\r\n        return this.log_(message, levels.DEBUG, messageData);\r\n    };\r\n\r\n    /**\r\n     * @protected\r\n     * @param {String} message\r\n     * @param {Number} level\r\n     * @param {Object} [messageData]\r\n     * @returns {LogEntry}\r\n     */\r\n    Logger.prototype.log_ = function (message, level, messageData) {\r\n        var entry = this.createEntry_(message, level, messageData);\r\n\r\n        this.entries_.push(entry);\r\n\r\n        if (this.matchesCriteria_(entry)) {\r\n            this.processOutput_(entry);\r\n        }\r\n\r\n        return entry;\r\n    };\r\n\r\n    /**\r\n     * @protected\r\n     * @param {String} message\r\n     * @param {Number} level\r\n     * @param {Object} [messageData]\r\n     * @returns {LogEntry}\r\n     */\r\n    Logger.prototype.createEntry_ = function (message, level, messageData) {\r\n        return this.entryFactory_.createEntry(message, level, messageData);\r\n    };\r\n\r\n    /**\r\n     * Returns an array of log entries that have been added to the logger.\r\n     *\r\n     * @param {LogCriteria} [criteria] - Optional filter criteria.\r\n     * @returns {Array<LogEntry>}\r\n     */\r\n    Logger.prototype.getEntries = function (criteria) {\r\n        if (criteria) {\r\n            return this.entries_.filter(criteria);\r\n        }\r\n\r\n        return this.entries_;\r\n    };\r\n\r\n    /**\r\n     * @param {LogCriteria} [criteria]\r\n     */\r\n    Logger.prototype.dump = function (criteria) {\r\n        var entries;\r\n\r\n        if (!criteria) {\r\n            criteria = this.matchesCriteria_;\r\n        }\r\n\r\n        entries = this.entries_.filter(criteria, this);\r\n\r\n        this.outputHandlers_.forEach(function (handler) {\r\n            handler.dump(entries);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @protected\r\n     * @param {LogEntry} entry\r\n     */\r\n    Logger.prototype.processOutput_ = function (entry) {\r\n        this.outputHandlers_.forEach(function (handler) {\r\n            handler.show(entry);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @protected\r\n     * @param {LogEntry} entry\r\n     * @returns {Boolean}\r\n     */\r\n    Logger.prototype.matchesCriteria_ = function (entry) {\r\n        return this.displayCriteria_.every(function (criteria) {\r\n            return criteria.call(this, entry);\r\n        }, this);\r\n    };\r\n\r\n    /**\r\n     * Checks that the level of provided entry passes the \"displayLevel_\" threshold.\r\n     *\r\n     * @protected\r\n     * @param {LogEntry} entry - Entry to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    Logger.prototype.matchesLevel_ = function (entry) {\r\n        return entry.level <= this.displayLevel_;\r\n    };\r\n\r\n    return Logger;\r\n});\r\n","Magento_Ui/js/lib/logger/message-pool.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine(function () {\r\n    'use strict';\r\n\r\n    var MESSAGES = {\r\n        templateStartLoading:\r\n            'The \"${ $.template }\" template requested by  the \"${$.component}\" component started loading.',\r\n        templateLoadedFromServer:\r\n            'The \"${ $.template }\" template requested by the \"${$.component}\" component  was loaded from server.\"',\r\n        templateLoadedFromCache:\r\n            'The \"${ $.template }\" template  requested by the \"${$.component}\" component was loaded from cache.\"',\r\n        templateLoadingFail: 'Failed to load the \"${ $.template }\" template requested by \"${$.component}\".',\r\n        componentStartInitialization:\r\n            'Component \"${$.component}\" start initialization with instance name \"${$.componentName}\".',\r\n        componentStartLoading: ' Started loading the \"${$.component}\" component.',\r\n        componentFinishLoading: 'The \"${$.component}\" component was loaded.',\r\n        componentLoadingFail: 'Failed to load the \"${$.component}\" component.',\r\n        depsLoadingFail: 'Could not get the declared \"${$.deps}\" dependency for the \"${$.component}\" instance.',\r\n        depsStartRequesting: 'Requesting the \"${$.deps}\" dependency for the \"${$.component}\" instance.',\r\n        depsFinishRequesting: 'The \"${$.deps}\" dependency for the \"${$.component}\" instance was received.',\r\n        requestingComponent: 'Requesting the \"${$.component}\" component.',\r\n        requestingComponentIsLoaded: 'The requested \"${$.component}\" component was received.',\r\n        requestingComponentIsFailed: 'Could not get the requested \"${$.component}\" component.'\r\n    };\r\n\r\n    return {\r\n        /**\r\n         * Returns message that matches the provided code.\r\n         *\r\n         * @param {String} code - Message's identifier\r\n         * @returns {String}\r\n         */\r\n        getMessage: function (code) {\r\n            return MESSAGES[code];\r\n        },\r\n\r\n        /**\r\n         * Adds a new message to the poll.\r\n         *\r\n         * @param {String} code - Message's identifier.\r\n         * @param {String} message - Text of the message\r\n         */\r\n        addMessage: function (code, message) {\r\n            MESSAGES[code] = message;\r\n        },\r\n\r\n        /**\r\n         * Tells whether message with provide code exists in the poll.\r\n         *\r\n         * @param {String} code - Message's identifier.\r\n         * @returns {Boolean}\r\n         */\r\n        hasMessage: function (code) {\r\n            return MESSAGES.hasOwnProperty(code);\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/registry/registry.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore'\r\n], function ($, _) {\r\n    'use strict';\r\n\r\n    var privateData = new WeakMap();\r\n\r\n    /**\r\n     * Extracts private item storage associated\r\n     * with a provided registry instance.\r\n     *\r\n     * @param {Object} container\r\n     * @returns {Object}\r\n     */\r\n    function getItems(container) {\r\n        return privateData.get(container).items;\r\n    }\r\n\r\n    /**\r\n     * Extracts private requests array associated\r\n     * with a provided registry instance.\r\n     *\r\n     * @param {Object} container\r\n     * @returns {Array}\r\n     */\r\n    function getRequests(container) {\r\n        return privateData.get(container).requests;\r\n    }\r\n\r\n    /**\r\n     * Wrapper function used for convenient access to the elements.\r\n     * See 'async' method for examples of usage and comparison\r\n     * with a regular 'get' method.\r\n     *\r\n     * @param {(String|Object|Function)} name - Key of the requested element.\r\n     * @param {Registry} registry - Instance of a registry\r\n     *      where to search for the element.\r\n     * @param {(Function|String)} [method] - Optional callback function\r\n     *      or a name of the elements' method which\r\n     *      will be invoked when element is available in registry.\r\n     * @returns {*}\r\n     */\r\n    function async(name, registry, method) {\r\n        var args = _.toArray(arguments).slice(3);\r\n\r\n        if (_.isString(method)) {\r\n            registry.get(name, function (component) {\r\n                component[method].apply(component, args);\r\n            });\r\n        } else if (_.isFunction(method)) {\r\n            registry.get(name, method);\r\n        } else if (!args.length) {\r\n            return registry.get(name);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks that every property of the query object\r\n     * is present and equal to the corresponding\r\n     * property in target object.\r\n     * Note that non-strict comparison is used.\r\n     *\r\n     * @param {Object} query - Query object.\r\n     * @param {Object} target - Target object.\r\n     * @returns {Boolean}\r\n     */\r\n    function compare(query, target) {\r\n        var matches = true,\r\n            index,\r\n            keys,\r\n            key;\r\n\r\n        if (!_.isObject(query) || !_.isObject(target)) {\r\n            return false;\r\n        }\r\n\r\n        keys = Object.getOwnPropertyNames(query);\r\n        index = keys.length;\r\n\r\n        while (matches && index--) {\r\n            key = keys[index];\r\n\r\n            /* eslint-disable eqeqeq */\r\n            if (target[key] != query[key]) {\r\n                matches = false;\r\n            }\r\n\r\n            /* eslint-enable eqeqeq */\r\n        }\r\n\r\n        return matches;\r\n    }\r\n\r\n    /**\r\n     * Explodes incoming string into object if\r\n     * string is defined as a set of key = value pairs.\r\n     *\r\n     * @param {(String|*)} query - String to be processed.\r\n     * @returns {Object|*} Either created object or an unmodified incoming\r\n     *      value if conversion was not possible.\r\n     * @example Sample conversions.\r\n     *      'key = value, key2 = value2'\r\n     *      => {key: 'value', key2: 'value2'}\r\n     */\r\n    function explode(query) {\r\n        var result = {},\r\n            index,\r\n            data;\r\n\r\n        if (typeof query !== 'string' || !~query.indexOf('=')) {\r\n            return query;\r\n        }\r\n\r\n        query = query.split(',');\r\n        index = query.length;\r\n\r\n        while (index--) {\r\n            data = query[index].split('=');\r\n\r\n            result[data[0].trim()] = data[1].trim();\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Extracts items from the provided data object\r\n     * which matches specified search criteria.\r\n     *\r\n     * @param {Object} data - Data object where to perform a lookup.\r\n     * @param {(String|Object|Function)} query - Search criteria.\r\n     * @param {Boolean} findAll - Flag that defines whether to\r\n     *      search for all applicable items or to stop on a first found entry.\r\n     * @returns {Array|Object|*}\r\n     */\r\n    function find(data, query, findAll) {\r\n        var iterator,\r\n            item;\r\n\r\n        query = explode(query);\r\n\r\n        if (typeof query === 'string') {\r\n            item = data[query];\r\n\r\n            if (findAll) {\r\n                return item ? [item] : [];\r\n            }\r\n\r\n            return item;\r\n        }\r\n\r\n        iterator = !_.isFunction(query) ?\r\n            compare.bind(null, query) :\r\n            query;\r\n\r\n        return findAll ?\r\n            _.filter(data, iterator) :\r\n            _.find(data, iterator);\r\n    }\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    function Registry() {\r\n        var data = {\r\n            items: {},\r\n            requests: []\r\n        };\r\n\r\n        this._updateRequests = _.debounce(this._updateRequests.bind(this), 10);\r\n        privateData.set(this, data);\r\n    }\r\n\r\n    Registry.prototype = {\r\n        constructor: Registry,\r\n\r\n        /**\r\n         * Retrieves item from registry which matches specified search criteria.\r\n         *\r\n         * @param {(Object|String|Function|Array)} query - Search condition (see examples).\r\n         * @param {Function} [callback] - Callback that will be invoked when\r\n         *      all of the requested items are available.\r\n         * @returns {*}\r\n         *\r\n         * @example Requesting item by it's name.\r\n         *      var obj = {index: 'test', sample: true};\r\n         *\r\n         *      registry.set('first', obj);\r\n         *      registry.get('first') === obj;\r\n         *      => true\r\n         *\r\n         * @example Requesting item with a specific properties.\r\n         *      registry.get('sample = 1, index = test') === obj;\r\n         *      => true\r\n         *      registry.get('sample = 0, index = foo') === obj;\r\n         *      => false\r\n         *\r\n         * @example Declaring search criteria as an object.\r\n         *      registry.get({sample: true}) === obj;\r\n         *      => true;\r\n         *\r\n         * @example Providing custom search handler.\r\n         *      registry.get(function (item) { return item.sample === true; }) === obj;\r\n         *      => true\r\n         *\r\n         * @example Sample asynchronous request declaration.\r\n         *      registry.get('index = test', function (item) {});\r\n         *\r\n         * @example Requesting multiple elements.\r\n         *      registry.set('second', {index: 'test2'});\r\n         *      registry.get(['first', 'second'], function (first, second) {});\r\n         */\r\n        get: function (query, callback) {\r\n            if (typeof callback !== 'function') {\r\n                return find(getItems(this), query);\r\n            }\r\n\r\n            this._addRequest(query, callback);\r\n        },\r\n\r\n        /**\r\n         * Sets provided item to the registry.\r\n         *\r\n         * @param {String} id - Item's identifier.\r\n         * @param {*} item - Item's data.\r\n         * returns {Registry} Chainable.\r\n         */\r\n        set: function (id, item) {\r\n            getItems(this)[id] = item;\r\n\r\n            this._updateRequests();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes specified item from registry.\r\n         * Note that search query is not applicable.\r\n         *\r\n         * @param {String} id - Item's identifier.\r\n         * @returns {Registry} Chainable.\r\n         */\r\n        remove: function (id) {\r\n            delete getItems(this)[id];\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Retrieves a collection of elements that match\r\n         * provided search criteria.\r\n         *\r\n         * @param {(Object|String|Function)} query - Search query.\r\n         *      See 'get' method for the syntax examples.\r\n         * @returns {Array} Found elements.\r\n         */\r\n        filter: function (query) {\r\n            return find(getItems(this), query, true);\r\n        },\r\n\r\n        /**\r\n         * Checks that at least one element in collection\r\n         * matches provided search criteria.\r\n         *\r\n         * @param {(Object|String|Function)} query - Search query.\r\n         *      See 'get' method for the syntax examples.\r\n         * @returns {Boolean}\r\n         */\r\n        has: function (query) {\r\n            return !!this.get(query);\r\n        },\r\n\r\n        /**\r\n         * Checks that registry contains a provided item.\r\n         *\r\n         * @param {*} item - Item to be checked.\r\n         * @returns {Boolean}\r\n         */\r\n        contains: function (item) {\r\n            return _.contains(getItems(this), item);\r\n        },\r\n\r\n        /**\r\n         * Extracts identifier of an item if it's present in registry.\r\n         *\r\n         * @param {*} item - Item whose identifier will be extracted.\r\n         * @returns {String|Undefined}\r\n         */\r\n        indexOf: function (item) {\r\n            return _.findKey(getItems(this), function (elem) {\r\n                return item === elem;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Same as a 'get' method except that it returns\r\n         * a promise object instead of invoking provided callback.\r\n         *\r\n         * @param {(String|Function|Object|Array)} query - Search query.\r\n         *      See 'get' method for the syntax examples.\r\n         * @returns {jQueryPromise}\r\n         */\r\n        promise: function (query) {\r\n            var defer    = $.Deferred(),\r\n                callback = defer.resolve.bind(defer);\r\n\r\n            this.get(query, callback);\r\n\r\n            return defer.promise();\r\n        },\r\n\r\n        /**\r\n         * Creates a wrapper function over the provided search query\r\n         * in order to provide somehow more convenient access to the\r\n         * registry's items.\r\n         *\r\n         * @param {(String|Object|Function)} query - Search criteria.\r\n         *      See 'get' method for the syntax examples.\r\n         * @returns {Function}\r\n         *\r\n         * @example Comparison with a 'get' method on retrieving items.\r\n         *      var module = registry.async('name');\r\n         *\r\n         *      module();\r\n         *      => registry.get('name');\r\n         *\r\n         * @example Asynchronous request.\r\n         *      module(function (component) {});\r\n         *      => registry.get('name', function (component) {});\r\n         *\r\n         * @example Requesting item and invoking it's method with specified parameters.\r\n         *      module('trigger', true);\r\n         *      => registry.get('name', function (component) {\r\n         *          component.trigger(true);\r\n         *      });\r\n         */\r\n        async: function (query) {\r\n            return async.bind(null, query, this);\r\n        },\r\n\r\n        /**\r\n         * Creates new instance of a Registry.\r\n         *\r\n         * @returns {Registry} New instance.\r\n         */\r\n        create: function () {\r\n            return new Registry;\r\n        },\r\n\r\n        /**\r\n         * Adds new request to the queue or resolves it immediately\r\n         * if all of the required items are available.\r\n         *\r\n         * @private\r\n         * @param {(Object|String|Function|Array)} queries - Search criteria.\r\n         *      See 'get' method for the syntax examples.\r\n         * @param {Function} callback - Callback that will be invoked when\r\n         *      all of the requested items are available.\r\n         * @returns {Registry}\r\n         */\r\n        _addRequest: function (queries, callback) {\r\n            var request;\r\n\r\n            if (!Array.isArray(queries)) {\r\n                queries = queries ? [queries] : [];\r\n            }\r\n\r\n            request = {\r\n                queries: queries.map(explode),\r\n                callback: callback\r\n            };\r\n\r\n            this._canResolve(request) ?\r\n                this._resolveRequest(request) :\r\n                getRequests(this).push(request);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Updates requests list resolving applicable items.\r\n         *\r\n         * @private\r\n         * @returns {Registry} Chainable.\r\n         */\r\n        _updateRequests: function () {\r\n            getRequests(this)\r\n                .filter(this._canResolve, this)\r\n                .forEach(this._resolveRequest, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Resolves provided request invoking it's callback\r\n         * with items specified in query parameters.\r\n         *\r\n         * @private\r\n         * @param {Object} request - Request object.\r\n         * @returns {Registry} Chainable.\r\n         */\r\n        _resolveRequest: function (request) {\r\n            var requests = getRequests(this),\r\n                items    = request.queries.map(this.get, this),\r\n                index    = requests.indexOf(request);\r\n\r\n            request.callback.apply(null, items);\r\n\r\n            if (~index) {\r\n                requests.splice(index, 1);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if provided request can be resolved.\r\n         *\r\n         * @private\r\n         * @param {Object} request - Request object.\r\n         * @returns {Boolean}\r\n         */\r\n        _canResolve: function (request) {\r\n            var queries = request.queries;\r\n\r\n            return queries.every(this.has, this);\r\n        }\r\n    };\r\n\r\n    return new Registry;\r\n});\r\n","Magento_Ui/js/lib/validation/rules.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    './utils',\r\n    'moment',\r\n    'tinycolor',\r\n    'jquery/validate',\r\n    'mage/translate'\r\n], function ($, _, utils, moment, tinycolor) {\r\n    'use strict';\r\n\r\n    /**\r\n     * validate credit card number using mod10\r\n     * @param {String} s\r\n     * @return {Boolean}\r\n     */\r\n    function validateCreditCard(s) {\r\n        // remove non-numerics\r\n        var v = '0123456789',\r\n            w = '',\r\n            i, j, k, m, c, a, x;\r\n\r\n        for (i = 0; i < s.length; i++) {\r\n            x = s.charAt(i);\r\n\r\n            if (v.indexOf(x, 0) !== -1) {\r\n                w += x;\r\n            }\r\n        }\r\n        // validate number\r\n        j = w.length / 2;\r\n        k = Math.floor(j);\r\n        m = Math.ceil(j) - k;\r\n        c = 0;\r\n\r\n        for (i = 0; i < k; i++) {\r\n            a = w.charAt(i * 2 + m) * 2;\r\n            c += a > 9 ? Math.floor(a / 10 + a % 10) : a;\r\n        }\r\n\r\n        for (i = 0; i < k + m; i++) {\r\n            c += w.charAt(i * 2 + 1 - m) * 1;\r\n        }\r\n\r\n        return c % 10 === 0;\r\n    }\r\n\r\n    /**\r\n     * Collection of validation rules including rules from additional-methods.js\r\n     * @type {Object}\r\n     */\r\n    return _.mapObject({\r\n        'min_text_length': [\r\n            function (value, params) {\r\n                return _.isUndefined(value) || value.length === 0 || value.length >= +params;\r\n            },\r\n            $.mage.__('Please enter more or equal than {0} symbols.')\r\n        ],\r\n        'max_text_length': [\r\n            function (value, params) {\r\n                return !_.isUndefined(value) && value.length <= +params;\r\n            },\r\n            $.mage.__('Please enter less or equal than {0} symbols.')\r\n        ],\r\n        'max-words': [\r\n            function (value, params) {\r\n                return utils.isEmpty(value) || utils.stripHtml(value).match(/\\b\\w+\\b/g).length < params;\r\n            },\r\n            $.mage.__('Please enter {0} words or less.')\r\n        ],\r\n        'min-words': [\r\n            function (value, params) {\r\n                return utils.isEmpty(value) || utils.stripHtml(value).match(/\\b\\w+\\b/g).length >= params;\r\n            },\r\n            $.mage.__('Please enter at least {0} words.')\r\n        ],\r\n        'range-words': [\r\n            function (value, params) {\r\n                var match = utils.stripHtml(value).match(/\\b\\w+\\b/g) || [];\r\n\r\n                return utils.isEmpty(value) || match.length >= params[0] &&\r\n                    match.length <= params[1];\r\n            },\r\n            $.mage.__('Please enter between {0} and {1} words.')\r\n        ],\r\n        'letters-with-basic-punc': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^[a-z\\-.,()\\u0027\\u0022\\s]+$/i.test(value);\r\n            },\r\n            $.mage.__('Letters or punctuation only please')\r\n        ],\r\n        'alphanumeric': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^\\w+$/i.test(value);\r\n            },\r\n            $.mage.__('Letters, numbers, spaces or underscores only please')\r\n        ],\r\n        'letters-only': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^[a-z]+$/i.test(value);\r\n            },\r\n            $.mage.__('Letters only please')\r\n        ],\r\n        'no-whitespace': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^\\S+$/i.test(value);\r\n            },\r\n            $.mage.__('No white space please')\r\n        ],\r\n        'no-marginal-whitespace': [\r\n            function (value) {\r\n                return !/^\\s+|\\s+$/i.test(value);\r\n            },\r\n            $.mage.__('No marginal white space please')\r\n        ],\r\n        'zip-range': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^90[2-5]-\\d{2}-\\d{4}$/.test(value);\r\n            },\r\n            $.mage.__('Your ZIP-code must be in the range 902xx-xxxx to 905-xx-xxxx')\r\n        ],\r\n        'integer': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^-?\\d+$/.test(value);\r\n            },\r\n            $.mage.__('A positive or negative non-decimal number please')\r\n        ],\r\n        'vinUS': [\r\n            function (value) {\r\n                if (utils.isEmpty(value)) {\r\n                    return true;\r\n                }\r\n\r\n                if (value.length !== 17) {\r\n                    return false;\r\n                }\r\n                var i, n, d, f, cd, cdv,//eslint-disable-line vars-on-top\r\n                    LL = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],//eslint-disable-line max-len\r\n                    VL = [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 7, 9, 2, 3, 4, 5, 6, 7, 8, 9],\r\n                    FL = [8, 7, 6, 5, 4, 3, 2, 10, 0, 9, 8, 7, 6, 5, 4, 3, 2],\r\n                    rs = 0;\r\n\r\n                for (i = 0; i < 17; i++) {\r\n                    f = FL[i];\r\n                    d = value.slice(i, i + 1);\r\n\r\n                    if (i === 8) {\r\n                        cdv = d;\r\n                    }\r\n\r\n                    if (!isNaN(d)) {\r\n                        d *= f;\r\n                    } else {\r\n                        for (n = 0; n < LL.length; n++) {//eslint-disable-line max-depth\r\n                            if (d.toUpperCase() === LL[n]) {//eslint-disable-line max-depth\r\n                                d = VL[n];\r\n                                d *= f;\r\n\r\n                                if (isNaN(cdv) && n === 8) {//eslint-disable-line max-depth\r\n                                    cdv = LL[n];\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    rs += d;\r\n                }\r\n                cd = rs % 11;\r\n\r\n                if (cd === 10) {\r\n                    cd = 'X';\r\n                }\r\n\r\n                if (cd === cdv) {\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n            },\r\n            $.mage.__('The specified vehicle identification number (VIN) is invalid.')\r\n        ],\r\n        'dateITA': [\r\n            function (value) {\r\n                var check = false,\r\n                    re = /^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/,\r\n                    adata, gg, mm, aaaa, xdata;\r\n\r\n                if (re.test(value)) {\r\n                    adata = value.split('/');\r\n                    gg = parseInt(adata[0], 10);\r\n                    mm = parseInt(adata[1], 10);\r\n                    aaaa = parseInt(adata[2], 10);\r\n                    xdata = new Date(aaaa, mm - 1, gg);\r\n\r\n                    if (xdata.getFullYear() === aaaa &&\r\n                        xdata.getMonth() === mm - 1 &&\r\n                        xdata.getDate() === gg\r\n                    ) {\r\n                        check = true;\r\n                    } else {\r\n                        check = false;\r\n                    }\r\n                } else {\r\n                    check = false;\r\n                }\r\n\r\n                return check;\r\n            },\r\n            $.mage.__('Please enter a correct date')\r\n        ],\r\n        'dateNL': [\r\n            function (value) {\r\n                return /^\\d\\d?[\\.\\/-]\\d\\d?[\\.\\/-]\\d\\d\\d?\\d?$/.test(value);\r\n            },\r\n            $.mage.__('Vul hier een geldige datum in.')\r\n        ],\r\n        'time': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^([01]\\d|2[0-3])(:[0-5]\\d){0,2}$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid time, between 00:00 and 23:59')\r\n        ],\r\n        'time12h': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^((0?[1-9]|1[012])(:[0-5]\\d){0,2}(\\s[AP]M))$/i.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid time, between 00:00 am and 12:00 pm')\r\n        ],\r\n        'phoneUS': [\r\n            function (value) {\r\n                value = value.replace(/\\s+/g, '');\r\n\r\n                return utils.isEmpty(value) || value.length > 9 &&\r\n                    value.match(/^(1-?)?(\\([2-9]\\d{2}\\)|[2-9]\\d{2})-?[2-9]\\d{2}-?\\d{4}$/);\r\n            },\r\n            $.mage.__('Please specify a valid phone number')\r\n        ],\r\n        'phoneUK': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || value.length > 9 &&\r\n                    value.match(/^(\\(?(0|\\+44)[1-9]{1}\\d{1,4}?\\)?\\s?\\d{3,4}\\s?\\d{3,4})$/);\r\n            },\r\n            $.mage.__('Please specify a valid phone number')\r\n        ],\r\n        'mobileUK': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || value.length > 9 && value.match(/^((0|\\+44)7\\d{3}\\s?\\d{6})$/);\r\n            },\r\n            $.mage.__('Please specify a valid mobile number')\r\n        ],\r\n        'stripped-min-length': [\r\n            function (value, param) {\r\n                return _.isUndefined(value) || value.length === 0 || utils.stripHtml(value).length >= param;\r\n            },\r\n            $.mage.__('Please enter at least {0} characters')\r\n        ],\r\n        'email2': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^((([a-z]|\\d|[!#\\$%&\\u0027\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&\\u0027\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\u0022)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\u0022)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)*(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?$/i.test(value);//eslint-disable-line max-len\r\n            },\r\n            $.validator.messages.email\r\n        ],\r\n        'url2': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&\\u0027\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)*(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&\\u0027\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&\\u0027\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&\\u0027\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&\\u0027\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i.test(value);//eslint-disable-line max-len\r\n            },\r\n            $.validator.messages.url\r\n        ],\r\n        'credit-card-types': [\r\n            function (value, param) {\r\n                var validTypes;\r\n\r\n                if (utils.isEmpty(value)) {\r\n                    return true;\r\n                }\r\n\r\n                if (/[^0-9-]+/.test(value)) {\r\n                    return false;\r\n                }\r\n                value = value.replace(/\\D/g, '');\r\n                validTypes = 0x0000;\r\n\r\n                if (param.mastercard) {\r\n                    validTypes |= 0x0001;\r\n                }\r\n\r\n                if (param.visa) {\r\n                    validTypes |= 0x0002;\r\n                }\r\n\r\n                if (param.amex) {\r\n                    validTypes |= 0x0004;\r\n                }\r\n\r\n                if (param.dinersclub) {\r\n                    validTypes |= 0x0008;\r\n                }\r\n\r\n                if (param.enroute) {\r\n                    validTypes |= 0x0010;\r\n                }\r\n\r\n                if (param.discover) {\r\n                    validTypes |= 0x0020;\r\n                }\r\n\r\n                if (param.jcb) {\r\n                    validTypes |= 0x0040;\r\n                }\r\n\r\n                if (param.unknown) {\r\n                    validTypes |= 0x0080;\r\n                }\r\n\r\n                if (param.all) {\r\n                    validTypes = 0x0001 | 0x0002 | 0x0004 | 0x0008 | 0x0010 | 0x0020 | 0x0040 | 0x0080;\r\n                }\r\n\r\n                if (validTypes & 0x0001 && /^(51|52|53|54|55)/.test(value)) { //mastercard\r\n                    return value.length === 16;\r\n                }\r\n\r\n                if (validTypes & 0x0002 && /^(4)/.test(value)) { //visa\r\n                    return value.length === 16;\r\n                }\r\n\r\n                if (validTypes & 0x0004 && /^(34|37)/.test(value)) { //amex\r\n                    return value.length === 15;\r\n                }\r\n\r\n                if (validTypes & 0x0008 && /^(300|301|302|303|304|305|36|38)/.test(value)) { //dinersclub\r\n                    return value.length === 14;\r\n                }\r\n\r\n                if (validTypes & 0x0010 && /^(2014|2149)/.test(value)) { //enroute\r\n                    return value.length === 15;\r\n                }\r\n\r\n                if (validTypes & 0x0020 && /^(6011)/.test(value)) { //discover\r\n                    return value.length === 16;\r\n                }\r\n\r\n                if (validTypes & 0x0040 && /^(3)/.test(value)) { //jcb\r\n                    return value.length === 16;\r\n                }\r\n\r\n                if (validTypes & 0x0040 && /^(2131|1800)/.test(value)) { //jcb\r\n                    return value.length === 15;\r\n                }\r\n\r\n                if (validTypes & 0x0080) { //unknown\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n            },\r\n            $.mage.__('Please enter a valid credit card number.')\r\n        ],\r\n        'ipv4': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/i.test(value);//eslint-disable-line max-len\r\n            },\r\n            $.mage.__('Please enter a valid IP v4 address.')\r\n        ],\r\n        'ipv6': [\r\n            function (value) {\r\n                return utils.isEmpty(value) || /^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/i.test(value);//eslint-disable-line max-len\r\n            },\r\n            $.mage.__('Please enter a valid IP v6 address.')\r\n        ],\r\n        'pattern': [\r\n            function (value, param) {\r\n                return utils.isEmpty(value) || new RegExp(param).test(value);\r\n            },\r\n            $.mage.__('Invalid format.')\r\n        ],\r\n        'validate-no-html-tags': [\r\n            function (value) {\r\n                return !/<(\\/)?\\w+/.test(value);\r\n            },\r\n            $.mage.__('HTML tags are not allowed.')\r\n        ],\r\n        'validate-select': [\r\n            function (value) {\r\n                return value !== 'none' && value != null && value.length !== 0;\r\n            },\r\n            $.mage.__('Please select an option.')\r\n        ],\r\n        'validate-no-empty': [\r\n            function (value) {\r\n                return !utils.isEmpty(value);\r\n            },\r\n            $.mage.__('Empty Value.')\r\n        ],\r\n        'validate-alphanum-with-spaces': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^[a-zA-Z0-9 ]+$/.test(value);\r\n            },\r\n            $.mage.__('Please use only letters (a-z or A-Z), numbers (0-9) or spaces only in this field.')\r\n        ],\r\n        'validate-data': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^[A-Za-z]+[A-Za-z0-9_]+$/.test(value);\r\n            },\r\n            $.mage.__('Please use only letters (a-z or A-Z), numbers (0-9) or underscore (_) in this field, and the first character should be a letter.')//eslint-disable-line max-len\r\n        ],\r\n        'validate-street': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) ||\r\n                    /^[ \\w]{3,}([A-Za-z]\\.)?([ \\w]*\\#\\d+)?(\\r\\n| )[ \\w]{3,}/.test(value);\r\n            },\r\n            $.mage.__('Please use only letters (a-z or A-Z), numbers (0-9), spaces and \"#\" in this field.')\r\n        ],\r\n        'validate-phoneStrict': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^(\\()?\\d{3}(\\))?(-|\\s)?\\d{3}(-|\\s)\\d{4}$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid phone number. For example (123) 456-7890 or 123-456-7890.')\r\n        ],\r\n        'validate-phoneLax': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) ||\r\n                    /^((\\d[\\-. ]?)?((\\(\\d{3}\\))|\\d{3}))?[\\-. ]?\\d{3}[\\-. ]?\\d{4}$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid phone number. For example (123) 456-7890 or 123-456-7890.')\r\n        ],\r\n        'validate-fax': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^(\\()?\\d{3}(\\))?(-|\\s)?\\d{3}(-|\\s)\\d{4}$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid fax number (Ex: 123-456-7890).')\r\n        ],\r\n        'validate-email': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^([a-z0-9,!\\#\\$%&'\\*\\+\\/=\\?\\^_`\\{\\|\\}~-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z0-9,!\\#\\$%&'\\*\\+\\/=\\?\\^_`\\{\\|\\}~-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*@([a-z0-9-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z0-9-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*\\.(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]){2,})$/i.test(value);//eslint-disable-line max-len\r\n            },\r\n            $.mage.__('Please enter a valid email address (Ex: johndoe@domain.com).')\r\n        ],\r\n        'validate-emailSender': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^[\\S ]+$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid email address (Ex: johndoe@domain.com).')\r\n        ],\r\n        'validate-password': [\r\n            function (value) {\r\n                var pass;\r\n\r\n                if (value == null) {\r\n                    return false;\r\n                }\r\n\r\n                pass = value.trim();\r\n\r\n                if (!pass.length) {\r\n                    return true;\r\n                }\r\n\r\n                return !(pass.length > 0 && pass.length < 6);\r\n            },\r\n            $.mage.__('Please enter 6 or more characters. Leading and trailing spaces will be ignored.')\r\n        ],\r\n        'validate-admin-password': [\r\n            function (value) {\r\n                var pass;\r\n\r\n                if (value == null) {\r\n                    return false;\r\n                }\r\n\r\n                pass = value.trim();\r\n\r\n                if (pass.length === 0) {\r\n                    return true;\r\n                }\r\n\r\n                if (!/[a-z]/i.test(value) || !/[0-9]/.test(value)) {\r\n                    return false;\r\n                }\r\n\r\n                if (pass.length < 7) {\r\n                    return false;\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter 7 or more characters, using both numeric and alphabetic.')\r\n        ],\r\n        'validate-customer-password': [\r\n            function (v, elm) {\r\n                var validator = this,\r\n                    counter = 0,\r\n                    passwordMinLength = $(elm).data('password-min-length'),\r\n                    passwordMinCharacterSets = $(elm).data('password-min-character-sets'),\r\n                    pass = v.trim(),\r\n                    result = pass.length >= passwordMinLength;\r\n\r\n                if (result === false) {\r\n                    validator.passwordErrorMessage = $.mage.__('Minimum length of this field must be equal or greater than %1 symbols. Leading and trailing spaces will be ignored.').replace('%1', passwordMinLength);//eslint-disable-line max-len\r\n\r\n                    return result;\r\n                }\r\n\r\n                if (pass.match(/\\d+/)) {\r\n                    counter++;\r\n                }\r\n\r\n                if (pass.match(/[a-z]+/)) {\r\n                    counter++;\r\n                }\r\n\r\n                if (pass.match(/[A-Z]+/)) {\r\n                    counter++;\r\n                }\r\n\r\n                if (pass.match(/[^a-zA-Z0-9]+/)) {\r\n                    counter++;\r\n                }\r\n\r\n                if (counter < passwordMinCharacterSets) {\r\n                    result = false;\r\n                    validator.passwordErrorMessage = $.mage.__('Minimum of different classes of characters in password is %1. Classes of characters: Lower Case, Upper Case, Digits, Special Characters.').replace('%1', passwordMinCharacterSets);//eslint-disable-line max-len\r\n                }\r\n\r\n                return result;\r\n            }, function () {\r\n                return this.passwordErrorMessage;\r\n            }\r\n        ],\r\n        'validate-url': [\r\n            function (value) {\r\n                if (utils.isEmptyNoTrim(value)) {\r\n                    return true;\r\n                }\r\n                value = (value || '').replace(/^\\s+/, '').replace(/\\s+$/, '');\r\n\r\n                return (/^(http|https|ftp):\\/\\/(([A-Z0-9]([A-Z0-9_-]*[A-Z0-9]|))(\\.[A-Z0-9]([A-Z0-9_-]*[A-Z0-9]|))*)(:(\\d+))?(\\/[A-Z0-9~](([A-Z0-9_~-]|\\.)*[A-Z0-9~]|))*\\/?(.*)?$/i).test(value);//eslint-disable-line max-len\r\n\r\n            },\r\n            $.mage.__('Please enter a valid URL. Protocol is required (http://, https:// or ftp://).')\r\n        ],\r\n        'validate-clean-url': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^(http|https|ftp):\\/\\/(([A-Z0-9][A-Z0-9_-]*)(\\.[A-Z0-9][A-Z0-9_-]*)+.(com|org|net|dk|at|us|tv|info|uk|co.uk|biz|se)$)(:(\\d+))?\\/?/i.test(value) || /^(www)((\\.[A-Z0-9][A-Z0-9_-]*)+.(com|org|net|dk|at|us|tv|info|uk|co.uk|biz|se)$)(:(\\d+))?\\/?/i.test(value);//eslint-disable-line max-len\r\n\r\n            },\r\n            $.mage.__('Please enter a valid URL. For example http://www.example.com or www.example.com.')\r\n        ],\r\n        'validate-xml-identifier': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^[A-Z][A-Z0-9_\\/-]*$/i.test(value);\r\n\r\n            },\r\n            $.mage.__('Please enter a valid XML-identifier (Ex: something_1, block5, id-4).')\r\n        ],\r\n        'validate-ssn': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^\\d{3}-?\\d{2}-?\\d{4}$/.test(value);\r\n\r\n            },\r\n            $.mage.__('Please enter a valid social security number (Ex: 123-45-6789).')\r\n        ],\r\n        'validate-zip-us': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /(^\\d{5}$)|(^\\d{5}-\\d{4}$)/.test(value);\r\n\r\n            },\r\n            $.mage.__('Please enter a valid zip code (Ex: 90602 or 90602-1234).')\r\n        ],\r\n        'validate-date-au': [\r\n            function (value) {\r\n                var regex = /^(\\d{2})\\/(\\d{2})\\/(\\d{4})$/,\r\n                    d;\r\n\r\n                if (utils.isEmptyNoTrim(value)) {\r\n                    return true;\r\n                }\r\n\r\n                if (utils.isEmpty(value) || !regex.test(value)) {\r\n                    return false;\r\n                }\r\n                d = new Date(value.replace(regex, '$2/$1/$3'));\r\n\r\n                return parseInt(RegExp.$2, 10) === 1 + d.getMonth() &&\r\n                    parseInt(RegExp.$1, 10) === d.getDate() &&\r\n                    parseInt(RegExp.$3, 10) === d.getFullYear();\r\n\r\n            },\r\n            $.mage.__('Please use this date format: dd/mm/yyyy. For example 17/03/2006 for the 17th of March, 2006.')\r\n        ],\r\n        'validate-currency-dollar': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^\\$?\\-?([1-9]{1}[0-9]{0,2}(\\,[0-9]{3})*(\\.[0-9]{0,2})?|[1-9]{1}\\d*(\\.[0-9]{0,2})?|0(\\.[0-9]{0,2})?|(\\.[0-9]{1,2})?)$/.test(value);//eslint-disable-line max-len\r\n\r\n            },\r\n            $.mage.__('Please enter a valid $ amount. For example $100.00.')\r\n        ],\r\n        'validate-not-negative-number': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || !isNaN(utils.parseNumber(value))\r\n                    && value >= 0 && (/^\\s*-?\\d+([,.]\\d+)*\\s*%?\\s*$/).test(value);\r\n\r\n            },\r\n            $.mage.__('Please enter a number 0 or greater, without comma in this field.')\r\n        ],\r\n        // validate-not-negative-number should be replaced in all places with this one and then removed\r\n        'validate-zero-or-greater': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || !isNaN(utils.parseNumber(value))\r\n                    && value >= 0 && (/^\\s*-?\\d+([,.]\\d+)*\\s*%?\\s*$/).test(value);\r\n            },\r\n            $.mage.__('Please enter a number 0 or greater, without comma in this field.')\r\n        ],\r\n        'validate-greater-than-zero': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || !isNaN(utils.parseNumber(value))\r\n                    && value > 0 && (/^\\s*-?\\d+([,.]\\d+)*\\s*%?\\s*$/).test(value);\r\n            },\r\n            $.mage.__('Please enter a number greater than 0, without comma in this field.')\r\n        ],\r\n        'validate-css-length': [\r\n            function (value) {\r\n                if (value !== '') {\r\n                    return (/^[0-9]*\\.*[0-9]+(px|pc|pt|ex|em|mm|cm|in|%)?$/).test(value);\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('Please input a valid CSS-length (Ex: 100px, 77pt, 20em, .5ex or 50%).')\r\n        ],\r\n        'validate-number': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) ||\r\n                    !isNaN(utils.parseNumber(value)) &&\r\n                    /^\\s*-?\\d*(?:[.,|'|\\s]\\d+)*(?:[.,|'|\\s]\\d{2})?-?\\s*$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid number in this field.')\r\n        ],\r\n        'validate-integer': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || !isNaN(utils.parseNumber(value)) && /^\\s*-?\\d*\\s*$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid integer in this field.')\r\n        ],\r\n        'validate-number-range': [\r\n            function (value, param) {\r\n                var numValue, dataAttrRange, result, range, m;\r\n\r\n                if (utils.isEmptyNoTrim(value)) {\r\n                    return true;\r\n                }\r\n\r\n                numValue = utils.parseNumber(value);\r\n\r\n                if (isNaN(numValue)) {\r\n                    return false;\r\n                }\r\n\r\n                dataAttrRange = /^(-?[\\d.,]+)?-(-?[\\d.,]+)?$/;\r\n                result = true;\r\n                range = param;\r\n\r\n                if (range) {\r\n                    m = dataAttrRange.exec(range);\r\n\r\n                    if (m) {\r\n                        result = result && utils.isBetween(numValue, m[1], m[2]);\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            },\r\n            $.mage.__('The value is not within the specified range.')\r\n        ],\r\n        'validate-positive-percent-decimal': [\r\n            function (value) {\r\n                var numValue;\r\n\r\n                if (utils.isEmptyNoTrim(value) || !/^\\s*-?\\d*(\\.\\d*)?\\s*$/.test(value)) {\r\n                    return false;\r\n                }\r\n\r\n                numValue = utils.parseNumber(value);\r\n\r\n                if (isNaN(numValue)) {\r\n                    return false;\r\n                }\r\n\r\n                return utils.isBetween(numValue, 0.01, 100);\r\n            },\r\n            $.mage.__('Please enter a valid percentage discount value greater than 0.')\r\n        ],\r\n        'validate-digits': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || !/[^\\d]/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid number in this field.')\r\n        ],\r\n        'validate-digits-range': [\r\n            function (value, param) {\r\n                var numValue, dataAttrRange, result, range, m;\r\n\r\n                if (utils.isEmptyNoTrim(value)) {\r\n                    return true;\r\n                }\r\n\r\n                numValue = utils.parseNumber(value);\r\n\r\n                if (isNaN(numValue)) {\r\n                    return false;\r\n                }\r\n\r\n                dataAttrRange = /^(-?\\d+)?-(-?\\d+)?$/;\r\n                result = true;\r\n                range = param;\r\n\r\n                if (range) {\r\n                    m = dataAttrRange.exec(range);\r\n\r\n                    if (m) {\r\n                        result = result && utils.isBetween(numValue, m[1], m[2]);\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            },\r\n            $.mage.__('The value is not within the specified range.')\r\n        ],\r\n        'validate-range': [\r\n            function (value) {\r\n                var minValue, maxValue, ranges;\r\n\r\n                if (utils.isEmptyNoTrim(value)) {\r\n                    return true;\r\n                } else if ($.validator.methods['validate-digits'] && $.validator.methods['validate-digits'](value)) {\r\n                    minValue = maxValue = utils.parseNumber(value);\r\n                } else {\r\n                    ranges = /^(-?\\d+)?-(-?\\d+)?$/.exec(value);\r\n\r\n                    if (ranges) {\r\n                        minValue = utils.parseNumber(ranges[1]);\r\n                        maxValue = utils.parseNumber(ranges[2]);\r\n\r\n                        if (minValue > maxValue) {//eslint-disable-line max-depth\r\n                            return false;\r\n                        }\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                }\r\n            },\r\n            $.mage.__('The value is not within the specified range.')\r\n        ],\r\n        'validate-alpha': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^[a-zA-Z]+$/.test(value);\r\n            },\r\n            $.mage.__('Please use letters only (a-z or A-Z) in this field.')\r\n        ],\r\n        'validate-code': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^[a-z]+[a-z0-9_]+$/.test(value);\r\n            },\r\n            $.mage.__('Please use only lowercase letters (a-z), numbers (0-9) or underscore (_) in this field, and the first character should be a letter.')//eslint-disable-line max-len\r\n        ],\r\n        'validate-alphanum': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^[a-zA-Z0-9]+$/.test(value);\r\n            },\r\n            $.mage.__('Please use only letters (a-z or A-Z) or numbers (0-9) in this field. No spaces or other characters are allowed.')//eslint-disable-line max-len\r\n        ],\r\n        'validate-not-number-first': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^[^0-9-\\.].*$/.test(value.trim());\r\n            },\r\n            $.mage.__('First character must be letter.')\r\n        ],\r\n        'validate-date': [\r\n            function (value, params, additionalParams) {\r\n                var test = moment(value, additionalParams.dateFormat);\r\n\r\n                return utils.isEmptyNoTrim(value) || test.isValid();\r\n            },\r\n            $.mage.__('Please enter a valid date.')\r\n        ],\r\n        'validate-date-range': [\r\n            function (value, params) {\r\n                var fromDate = $('input[name*=\"' + params + '\"]').val();\r\n\r\n                return moment.utc(value).unix() >= moment.utc(fromDate).unix() || isNaN(moment.utc(value).unix());\r\n            },\r\n            $.mage.__('Make sure the To Date is later than or the same as the From Date.')\r\n        ],\r\n        'validate-identifier': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^[a-z0-9][a-z0-9_\\/-]+(\\.[a-z0-9_-]+)?$/.test(value);\r\n            },\r\n            $.mage.__('Please enter a valid URL Key (Ex: \"example-page\", \"example-page.html\" or \"anotherlevel/example-page\").')//eslint-disable-line max-len\r\n        ],\r\n        'validate-trailing-hyphen': [\r\n            function (value) {\r\n                return utils.isEmptyNoTrim(value) || /^(?!-)(?!.*-$).+$/.test(value);\r\n            },\r\n            $.mage.__('Trailing hyphens are not allowed.')\r\n        ],\r\n        'validate-zip-international': [\r\n\r\n            /*function(v) {\r\n            // @TODO: Cleanup\r\n            return Validation.get('IsEmpty').test(v) || /(^[A-z0-9]{2,10}([\\s]{0,1}|[\\-]{0,1})[A-z0-9]{2,10}$)/.test(v);\r\n            }*/\r\n            function () {\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter a valid zip code.')\r\n        ],\r\n        'validate-state': [\r\n            function (value) {\r\n                return value !== 0;\r\n            },\r\n            $.mage.__('Please select State/Province.')\r\n        ],\r\n        'less-than-equals-to': [\r\n            function (value, params) {\r\n                value = utils.parseNumber(value);\r\n\r\n                if (isNaN(parseFloat(params))) {\r\n                    params = $(params).val();\r\n                }\r\n\r\n                params = utils.parseNumber(params);\r\n\r\n                if (!isNaN(params) && !isNaN(value)) {\r\n                    this.lteToVal = params;\r\n\r\n                    return value <= params;\r\n                }\r\n\r\n                return true;\r\n            },\r\n            function () {\r\n                return $.mage.__('Please enter a value less than or equal to %s.').replace('%s', this.lteToVal);\r\n            }\r\n        ],\r\n        'greater-than-equals-to': [\r\n            function (value, params) {\r\n                value = utils.parseNumber(value);\r\n\r\n                if (isNaN(parseFloat(params))) {\r\n                    params = $(params).val();\r\n                }\r\n\r\n                params = utils.parseNumber(params);\r\n\r\n                if (!isNaN(params) && !isNaN(value)) {\r\n                    this.gteToVal = params;\r\n\r\n                    return value >= params;\r\n                }\r\n\r\n                return true;\r\n            },\r\n            function () {\r\n                return $.mage.__('Please enter a value greater than or equal to %s.').replace('%s', this.gteToVal);\r\n            }\r\n        ],\r\n        'validate-emails': [\r\n            function (value) {\r\n                var validRegexp, emails, i;\r\n\r\n                if (utils.isEmpty(value)) {\r\n                    return true;\r\n                }\r\n                validRegexp = /^[a-z0-9\\._-]{1,30}@([a-z0-9_-]{1,30}\\.){1,5}[a-z]{2,4}$/i;\r\n                emails = value.split(/[\\s\\n\\,]+/g);\r\n\r\n                for (i = 0; i < emails.length; i++) {\r\n                    if (!validRegexp.test(emails[i].strip())) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter valid email addresses, separated by commas. For example, johndoe@domain.com, johnsmith@domain.com.')//eslint-disable-line max-len\r\n        ],\r\n        'validate-cc-number': [\r\n\r\n            /**\r\n             * Validate credit card number based on mod 10.\r\n             *\r\n             * @param {String} value - credit card number\r\n             * @return {Boolean}\r\n             */\r\n            function (value) {\r\n                if (value) {\r\n                    return validateCreditCard(value);\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter a valid credit card number.')\r\n        ],\r\n        'validate-cc-ukss': [\r\n\r\n            /**\r\n             * Validate Switch/Solo/Maestro issue number and start date is filled.\r\n             *\r\n             * @param {String} value - input field value\r\n             * @return {*}\r\n             */\r\n            function (value) {\r\n                return value;\r\n            },\r\n            $.mage.__('Please enter issue number or start date for switch/solo card type.')\r\n        ],\r\n        'required-entry': [\r\n            function (value) {\r\n                return !utils.isEmpty(value);\r\n            },\r\n            $.mage.__('This is a required field.')\r\n        ],\r\n        'checked': [\r\n            function (value) {\r\n                return value;\r\n            },\r\n            $.mage.__('This is a required field.')\r\n        ],\r\n        'not-negative-amount': [\r\n            function (value) {\r\n                if (value.length) {\r\n                    return (/^\\s*\\d+([,.]\\d+)*\\s*%?\\s*$/).test(value);\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter positive number in this field.')\r\n        ],\r\n        'validate-per-page-value-list': [\r\n            function (value) {\r\n                var isValid = true,\r\n                    values = value.split(','),\r\n                    i;\r\n\r\n                if (utils.isEmpty(value)) {\r\n                    return isValid;\r\n                }\r\n\r\n                for (i = 0; i < values.length; i++) {\r\n                    if (!/^[0-9]+$/.test(values[i])) {\r\n                        isValid = false;\r\n                    }\r\n                }\r\n\r\n                return isValid;\r\n            },\r\n            $.mage.__('Please enter a valid value, ex: 10,20,30')\r\n        ],\r\n        'validate-new-password': [\r\n            function (value) {\r\n                if ($.validator.methods['validate-password'] && !$.validator.methods['validate-password'](value)) {\r\n                    return false;\r\n                }\r\n\r\n                if (utils.isEmpty(value) && value !== '') {\r\n                    return false;\r\n                }\r\n\r\n                return true;\r\n            },\r\n            $.mage.__('Please enter 6 or more characters. Leading and trailing spaces will be ignored.')\r\n        ],\r\n        'validate-item-quantity': [\r\n            function (value, params) {\r\n                var validator = this,\r\n                    result = false,\r\n                    // obtain values for validation\r\n                    qty = utils.parseNumber(value),\r\n                    isMinAllowedValid = typeof params.minAllowed === 'undefined' ||\r\n                        qty >= utils.parseNumber(params.minAllowed),\r\n                    isMaxAllowedValid = typeof params.maxAllowed === 'undefined' ||\r\n                        qty <= utils.parseNumber(params.maxAllowed),\r\n                    isQtyIncrementsValid = typeof params.qtyIncrements === 'undefined' ||\r\n                        qty % utils.parseNumber(params.qtyIncrements) === 0;\r\n\r\n                result = qty > 0;\r\n\r\n                if (result === false) {\r\n                    validator.itemQtyErrorMessage = $.mage.__('Please enter a quantity greater than 0.');//eslint-disable-line max-len\r\n\r\n                    return result;\r\n                }\r\n\r\n                result = isMinAllowedValid;\r\n\r\n                if (result === false) {\r\n                    validator.itemQtyErrorMessage = $.mage.__('The fewest you may purchase is %1.').replace('%1', params.minAllowed);//eslint-disable-line max-len\r\n\r\n                    return result;\r\n                }\r\n\r\n                result = isMaxAllowedValid;\r\n\r\n                if (result === false) {\r\n                    validator.itemQtyErrorMessage = $.mage.__('The maximum you may purchase is %1.').replace('%1', params.maxAllowed);//eslint-disable-line max-len\r\n\r\n                    return result;\r\n                }\r\n\r\n                result = isQtyIncrementsValid;\r\n\r\n                if (result === false) {\r\n                    validator.itemQtyErrorMessage = $.mage.__('You can buy this product only in quantities of %1 at a time.').replace('%1', params.qtyIncrements);//eslint-disable-line max-len\r\n\r\n                    return result;\r\n                }\r\n\r\n                return result;\r\n            }, function () {\r\n                return this.itemQtyErrorMessage;\r\n            }\r\n        ],\r\n        'equalTo': [\r\n            function (value, param) {\r\n                return value === $(param).val();\r\n            },\r\n            $.validator.messages.equalTo\r\n        ],\r\n        'validate-file-type': [\r\n            function (name, types) {\r\n                var extension = name.split('.').pop().toLowerCase();\r\n\r\n                if (types && typeof types === 'string') {\r\n                    types = types.split(' ');\r\n                }\r\n\r\n                return !types || !types.length || ~types.indexOf(extension);\r\n            },\r\n            $.mage.__('We don\\'t recognize or support this file extension type.')\r\n        ],\r\n        'validate-max-size': [\r\n            function (size, maxSize) {\r\n                return maxSize === false || size < maxSize;\r\n            },\r\n            $.mage.__('File you are trying to upload exceeds maximum file size limit.')\r\n        ],\r\n        'validate-if-tag-script-exist': [\r\n            function (value) {\r\n                return !value || (/<script\\b[^>]*>([\\s\\S]*?)<\\/script>$/ig).test(value);\r\n            },\r\n            $.mage.__('Please use tag SCRIPT with SRC attribute or with proper content to include JavaScript to the document.')//eslint-disable-line max-len\r\n        ],\r\n        'date_range_min': [\r\n            function (value, minValue, params) {\r\n                return moment.utc(value, params.dateFormat).unix() >= minValue;\r\n            },\r\n            $.mage.__('The date is not within the specified range.')\r\n        ],\r\n        'date_range_max': [\r\n            function (value, maxValue, params) {\r\n                return moment.utc(value, params.dateFormat).unix() <= maxValue;\r\n            },\r\n            $.mage.__('The date is not within the specified range.')\r\n        ],\r\n        'validate-color': [\r\n            function (value) {\r\n                if (value === '') {\r\n                    return true;\r\n                }\r\n\r\n                return tinycolor(value).isValid();\r\n            },\r\n            $.mage.__('Wrong color format. Please specify color in HEX, RGBa, HSVa, HSLa or use color name.')\r\n        ],\r\n        'blacklist-url': [\r\n            function (value, param) {\r\n                return new RegExp(param).test(value);\r\n            },\r\n            $.mage.__('This link is not allowed.')\r\n        ],\r\n        'validate-dob': [\r\n            function (value, param, params) {\r\n                if (value === '') {\r\n                    return true;\r\n                }\r\n\r\n                return moment.utc(value, params.dateFormat).isSameOrBefore(moment.utc());\r\n            },\r\n            $.mage.__('The Date of Birth should not be greater than today.')\r\n        ],\r\n        'validate-no-utf8mb4-characters': [\r\n            function (value) {\r\n                var validator = this,\r\n                    message = $.mage.__('Please remove invalid characters: {0}.'),\r\n                    matches = value.match(/(?:[\\uD800-\\uDBFF][\\uDC00-\\uDFFF])/g),\r\n                    result = matches === null;\r\n\r\n                if (!result) {\r\n                    validator.charErrorMessage = message.replace('{0}', matches.join());\r\n                }\r\n\r\n                return result;\r\n            }, function () {\r\n                return this.charErrorMessage;\r\n            }\r\n        ]\r\n    }, function (data) {\r\n        return {\r\n            handler: data[0],\r\n            message: data[1]\r\n        };\r\n    });\r\n});\r\n","Magento_Ui/js/lib/validation/utils.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine(function () {\r\n    'use strict';\r\n\r\n    var utils = {\r\n        /**\r\n         * Check if string is empty with trim.\r\n         *\r\n         * @param {String} value\r\n         * @return {Boolean}\r\n         */\r\n        isEmpty: function (value) {\r\n            return value === '' || value == null || value.length === 0 || /^\\s+$/.test(value);\r\n        },\r\n\r\n        /**\r\n         * Check if string is empty no trim.\r\n         *\r\n         * @param {String} value\r\n         * @return {Boolean}\r\n         */\r\n        isEmptyNoTrim: function (value) {\r\n            return value === '' || value == null || value.length === 0;\r\n        },\r\n\r\n        /**\r\n         * Checks if {value} is between numbers {from} and {to}.\r\n         *\r\n         * @param {String} value\r\n         * @param {String} from\r\n         * @param {String} to\r\n         * @return {Boolean}\r\n         */\r\n        isBetween: function (value, from, to) {\r\n            return (from === null || from === '' || value >= utils.parseNumber(from)) &&\r\n                   (to === null || to === '' || value <= utils.parseNumber(to));\r\n        },\r\n\r\n        /**\r\n         * Parse price string.\r\n         *\r\n         * @param {String} value\r\n         * @return {Number}\r\n         */\r\n        parseNumber: function (value) {\r\n            var isDot, isComa;\r\n\r\n            if (typeof value !== 'string') {\r\n                return parseFloat(value);\r\n            }\r\n            isDot = value.indexOf('.');\r\n            isComa = value.indexOf(',');\r\n\r\n            if (isDot !== -1 && isComa !== -1) {\r\n                if (isComa > isDot) {\r\n                    value = value.replace('.', '').replace(',', '.');\r\n                } else {\r\n                    value = value.replace(',', '');\r\n                }\r\n            } else if (isComa !== -1) {\r\n                value = value.replace(',', '.');\r\n            }\r\n\r\n            return parseFloat(value);\r\n        },\r\n\r\n        /**\r\n         * Removes HTML tags and space characters, numbers and punctuation.\r\n         *\r\n         * @param {String} value -  Value being stripped.\r\n         * @return {String}\r\n         */\r\n        stripHtml: function (value) {\r\n            return value.replace(/<.[^<>]*?>/g, ' ').replace(/&nbsp;|&#160;/gi, ' ')\r\n                .replace(/[0-9.(),;:!?%#$'\"_+=\\/-]*/g, '');\r\n        }\r\n    };\r\n\r\n    return utils;\r\n});\r\n","Magento_Ui/js/lib/validation/validator.js":"/*\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    './rules'\r\n], function (_, rulesList) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Validates provided value be the specified rule.\r\n     *\r\n     * @param {String} id - Rule identifier.\r\n     * @param {*} value - Value to be checked.\r\n     * @param {*} [params]\r\n     * @param {*} additionalParams - additional validation params set by method caller\r\n     * @returns {Object}\r\n     */\r\n    function validate(id, value, params, additionalParams) {\r\n        var rule,\r\n            message,\r\n            valid,\r\n            result = {\r\n                rule: id,\r\n                passed: true,\r\n                message: ''\r\n            };\r\n\r\n        if (_.isObject(params)) {\r\n            message = params.message || '';\r\n        }\r\n\r\n        if (!rulesList[id]) {\r\n            return result;\r\n        }\r\n\r\n        rule    = rulesList[id];\r\n        message = message || rule.message;\r\n        valid   = rule.handler(value, params, additionalParams);\r\n\r\n        if (!valid) {\r\n            params = Array.isArray(params) ?\r\n                params :\r\n                [params];\r\n\r\n            if (typeof message === 'function') {\r\n                message = message.call(rule);\r\n            }\r\n\r\n            message = params.reduce(function (msg, param, idx) {\r\n                return msg.replace(new RegExp('\\\\{' + idx + '\\\\}', 'g'), param);\r\n            }, message);\r\n\r\n            result.passed = false;\r\n            result.message = message;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Validates provided value by a specified set of rules.\r\n     *\r\n     * @param {(String|Object)} rules - One or many validation rules.\r\n     * @param {*} value - Value to be checked.\r\n     * @param {*} additionalParams - additional validation params set by method caller\r\n     * @returns {Object}\r\n     */\r\n    function validator(rules, value, additionalParams) {\r\n        var result;\r\n\r\n        if (typeof rules === 'object') {\r\n            result = {\r\n                passed: true\r\n            };\r\n\r\n            _.every(rules, function (ruleParams, id) {\r\n                if (ruleParams.validate || ruleParams !== false || additionalParams) {\r\n                    result = validate(id, value, ruleParams, additionalParams);\r\n\r\n                    return result.passed;\r\n                }\r\n\r\n                return true;\r\n            });\r\n\r\n            return result;\r\n        }\r\n\r\n        return validate.apply(null, arguments);\r\n    }\r\n\r\n    /**\r\n     * Adds new validation rule.\r\n     *\r\n     * @param {String} id - Rule identifier.\r\n     * @param {Function} handler - Validation function.\r\n     * @param {String} message - Error message.\r\n     */\r\n    validator.addRule = function (id, handler, message) {\r\n        rulesList[id] = {\r\n            handler: handler,\r\n            message: message\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Returns rule object found by provided identifier.\r\n     *\r\n     * @param {String} id - Rule identifier.\r\n     * @returns {Object}\r\n     */\r\n    validator.getRule = function (id) {\r\n        return rulesList[id];\r\n    };\r\n\r\n    return validator;\r\n});\r\n","Magento_Ui/js/lib/view/utils/async.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'underscore',\r\n    'uiRegistry',\r\n    './dom-observer',\r\n    'Magento_Ui/js/lib/knockout/extender/bound-nodes',\r\n    './bindings'\r\n], function (ko, $, _, registry, domObserver, boundedNodes) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Checks if provided value is a dom element.\r\n     *\r\n     * @param {*} node - Value to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    function isDomElement(node) {\r\n        return typeof node === 'object' && node.tagName && node.nodeType;\r\n    }\r\n\r\n    /**\r\n     * Parses provided string and extracts\r\n     * component, context and selector data from it.\r\n     *\r\n     * @param {String} str - String to be processed.\r\n     * @returns {Object} Data retrieved from string.\r\n     *\r\n     * @example Sample format.\r\n     *      '{{component}}:{{ctx}} -> {{selector}}'\r\n     *\r\n     *      component - Name of component.\r\n     *      ctx - Selector of the root node upon which component is binded.\r\n     *      selector - Selector of DOM elements located\r\n     *          inside of a previously specified context.\r\n     */\r\n    function parseSelector(str) {\r\n        var data    = str.trim().split('->'),\r\n            result  = {},\r\n            componentData;\r\n\r\n        if (data.length === 1) {\r\n            if (!~data[0].indexOf(':')) {\r\n                result.selector = data[0];\r\n            } else {\r\n                componentData = data[0];\r\n            }\r\n        } else {\r\n            componentData   = data[0];\r\n            result.selector = data[1];\r\n        }\r\n\r\n        if (componentData) {\r\n            componentData = componentData.split(':');\r\n\r\n            result.component = componentData[0];\r\n            result.ctx = componentData[1];\r\n        }\r\n\r\n        _.each(result, function (value, key) {\r\n            result[key] = value.trim();\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Internal method used to normalize argumnets passed\r\n     * to 'async' module methods.\r\n     *\r\n     * @param {(String|Object)} selector\r\n     * @param {(HTMLElement|Object|String)} [ctx]\r\n     * @returns {Object}\r\n     */\r\n    function parseData(selector, ctx) {\r\n        var data = {};\r\n\r\n        if (arguments.length === 2) {\r\n            data.selector = selector;\r\n\r\n            if (isDomElement(ctx)) {\r\n                data.ctx = ctx;\r\n            } else {\r\n                data.component = ctx;\r\n                data.ctx = '*';\r\n            }\r\n        } else {\r\n            data = _.isString(selector) ?\r\n                parseSelector(selector) :\r\n                selector;\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Creates promise that will be resolved\r\n     * when requested component is registred.\r\n     *\r\n     * @param {String} name - Name of component.\r\n     * @returns {jQueryPromise}\r\n     */\r\n    function waitComponent(name) {\r\n        var deffer = $.Deferred();\r\n\r\n        if (_.isString(name)) {\r\n            registry.get(name, function (component) {\r\n                deffer.resolve(component);\r\n            });\r\n        } else {\r\n            deffer.resolve(name);\r\n        }\r\n\r\n        return deffer.promise();\r\n    }\r\n\r\n    /**\r\n     * Creates listener for the nodes binded to provided component.\r\n     *\r\n     * @param {Object} data - Listener data.\r\n     * @param {Object} component - Associated with nodes component.\r\n     */\r\n    function setRootListener(data, component) {\r\n        boundedNodes.get(component, function (root) {\r\n            if (!$(root).is(data.ctx || '*')) {\r\n                return;\r\n            }\r\n\r\n            data.selector ?\r\n                domObserver.get(data.selector, data.fn, root) :\r\n                data.fn(root);\r\n        });\r\n    }\r\n\r\n    /*eslint-disable no-unused-vars*/\r\n    /**\r\n     * Sets listener for the appearance of elements which\r\n     * matches specified selector data.\r\n     *\r\n     * @param {(String|Object)} selector - Valid css selector or a string\r\n     *      in format acceptable by 'parseSelector' method or an object with\r\n     *      'component', 'selector' and 'ctx' properties.\r\n     * @param {(HTMLElement|Object|String)} [ctx] - Optional context parameter\r\n     *      which might be a DOM element, component instance or components' name.\r\n     * @param {Function} fn - Callback that will be invoked\r\n     *      when required DOM element appears.\r\n     *\r\n     * @example\r\n     *      Creating listener of the 'span' nodes appearance,\r\n     *      located inside of 'div' nodes, which are binded to 'cms_page_listing' component:\r\n     *\r\n     *      $.async('cms_page_listing:div -> span', function (node) {});\r\n     *\r\n     * @example Another syntaxes of the previous example.\r\n     *      $.async({\r\n     *          component: 'cms_page_listing',\r\n     *          ctx: 'div',\r\n     *          selector: 'span'\r\n     *       }, function (node) {});\r\n     *\r\n     * @example Listens for appearance of any child node inside of specified component.\r\n     *      $.async('> *', 'cms_page_lsiting', function (node) {});\r\n     *\r\n     * @example Listens for appearance of 'span' nodes inside of specific context.\r\n     *      $.async('span', document.getElementById('test'), function (node) {});\r\n     */\r\n    $.async = function (selector, ctx, fn) {\r\n        var args = _.toArray(arguments),\r\n            data = parseData.apply(null, _.initial(args));\r\n\r\n        data.fn = _.last(args);\r\n\r\n        if (data.component) {\r\n            waitComponent(data.component)\r\n                .then(setRootListener.bind(null, data));\r\n        } else {\r\n            domObserver.get(data.selector, data.fn, data.ctx);\r\n        }\r\n    };\r\n\r\n    /*eslint-enable no-unused-vars*/\r\n\r\n    _.extend($.async, {\r\n\r\n        /*eslint-disable no-unused-vars*/\r\n        /**\r\n         * Returns collection of elements found by provided selector data.\r\n         *\r\n         * @param {(String|Object)} selector - See 'async' definition.\r\n         * @param {(HTMLElement|Object|String)} [ctx] - See 'async' definition.\r\n         * @returns {Array} An array of DOM elements.\r\n         */\r\n        get: function (selector, ctx) {\r\n            var data        = parseData.apply(null, arguments),\r\n                component   = data.component,\r\n                nodes;\r\n\r\n            if (!component) {\r\n                return $(data.selector, data.ctx).toArray();\r\n            } else if (_.isString(component)) {\r\n                component = registry.get(component);\r\n            }\r\n\r\n            if (!component) {\r\n                return [];\r\n            }\r\n\r\n            nodes = boundedNodes.get(component);\r\n            nodes = $(nodes).filter(data.ctx).toArray();\r\n\r\n            return data.selector ?\r\n                $(data.selector, nodes).toArray() :\r\n                nodes;\r\n        },\r\n\r\n        /*eslint-enable no-unused-vars*/\r\n\r\n        /**\r\n         * Sets removal listener of the specified nodes.\r\n         *\r\n         * @param {(HTMLElement|Array|ArrayLike)} nodes - Nodes whose removal to track.\r\n         * @param {Function} fn - Callback that will be invoked when node is removed.\r\n         */\r\n        remove: function (nodes, fn) {\r\n            domObserver.remove(nodes, fn);\r\n        },\r\n\r\n        parseSelector: parseSelector\r\n    });\r\n\r\n    return $;\r\n});\r\n","Magento_Ui/js/lib/view/utils/bindings.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'underscore'\r\n], function (ko, $, _) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Checks if provided  value is a dom element.\r\n     *\r\n     * @param {*} node - Value to be checked.\r\n     * @returns {Boolean}\r\n     */\r\n    function isDomElement(node) {\r\n        return typeof node === 'object' && node.tagName && node.nodeType;\r\n    }\r\n\r\n    /**\r\n     * Removes from the provided array all non-root nodes located inside\r\n     * of the comment element as long as the closing comment tags.\r\n     *\r\n     * @param {(Array|ArrayLike)} nodes - An array of nodes to be processed.\r\n     * @returns {Array}\r\n     */\r\n    function normalize(nodes) {\r\n        var result;\r\n\r\n        nodes   = _.toArray(nodes);\r\n        result  = nodes.slice();\r\n\r\n        nodes.forEach(function (node) {\r\n            if (node.nodeType === 8) {\r\n                result = !ko.virtualElements.hasBindingValue(node) ?\r\n                    _.without(result, node) :\r\n                    _.difference(result, ko.virtualElements.childNodes(node));\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Extends binding context of each item in the collection.\r\n     *\r\n     * @param {...Object} extenders - Multiple extender objects to be applied to the context.\r\n     * @returns {jQueryCollection} Chainable.\r\n     */\r\n    $.fn.extendCtx = function () {\r\n        var nodes       = normalize(this),\r\n            extenders   = _.toArray(arguments);\r\n\r\n        nodes.forEach(function (node) {\r\n            var ctx  = ko.contextFor(node),\r\n                data = [ctx].concat(extenders);\r\n\r\n            _.extend.apply(_, data);\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Evaluates bindings specified in each DOM element of collection.\r\n     *\r\n     * @param {(HTMLElement|Object)} [ctx] - Context to use for bindings evaluation.\r\n     *      If not specified then current context of a collections' item will be used.\r\n     * @returns {jQueryCollection} Chainable.\r\n     */\r\n    $.fn.applyBindings = function (ctx) {\r\n        var nodes = normalize(this),\r\n            nodeCtx;\r\n\r\n        if (isDomElement(ctx)) {\r\n            ctx = ko.contextFor(ctx);\r\n        }\r\n\r\n        nodes.forEach(function (node) {\r\n            nodeCtx = ctx || ko.contextFor(node);\r\n\r\n            ko.applyBindings(nodeCtx, node);\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Adds specified bindings to each DOM element in\r\n     * collection and evaluates them with provided context.\r\n     *\r\n     * @param {(Object|Function)} data - Either bindings object or a function\r\n     *      which returns bindings data for each element in collection.\r\n     * @param {(HTMLElement|Object)} [ctx] - Context to use for bindings evaluation.\r\n     *      If not specified then current context of a collections' item will be used.\r\n     * @returns {jQueryCollection} Chainable.\r\n     */\r\n    $.fn.bindings = function (data, ctx) {\r\n        var nodes    = normalize(this),\r\n            bindings = data,\r\n            nodeCtx;\r\n\r\n        if (isDomElement(ctx)) {\r\n            ctx = ko.contextFor(ctx);\r\n        }\r\n\r\n        nodes.forEach(function (node) {\r\n            nodeCtx = ctx || ko.contextFor(node);\r\n\r\n            if (_.isFunction(data)) {\r\n                bindings = data(nodeCtx, node);\r\n            }\r\n\r\n            ko.applyBindingsToNode(node, bindings, nodeCtx);\r\n        });\r\n\r\n        return this;\r\n    };\r\n});\r\n","Magento_Ui/js/lib/view/utils/dom-observer.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'domReady!'\r\n], function ($, _) {\r\n    'use strict';\r\n\r\n    var counter = 1,\r\n        watchers,\r\n        globalObserver,\r\n        disabledNodes = [];\r\n\r\n    watchers = {\r\n        selectors: {},\r\n        nodes: {}\r\n    };\r\n\r\n    /**\r\n     * Checks if node represents an element node (nodeType === 1).\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @returns {Boolean}\r\n     */\r\n    function isElementNode(node) {\r\n        return node.nodeType === 1;\r\n    }\r\n\r\n    /**\r\n     * Extracts all child descendant\r\n     * elements of a specified node.\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @returns {Array}\r\n     */\r\n    function extractChildren(node) {\r\n        var children = node.querySelectorAll('*');\r\n\r\n        return _.toArray(children);\r\n    }\r\n\r\n    /**\r\n     * Extracts node identifier. If ID is not specified,\r\n     * then it will be created for the provided node.\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @returns {Number}\r\n     */\r\n    function getNodeId(node) {\r\n        var id = node._observeId;\r\n\r\n        if (!id) {\r\n            id = node._observeId = counter++;\r\n        }\r\n\r\n        return id;\r\n    }\r\n\r\n    /**\r\n     * Invokes callback passing node to it.\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @param {Object} data\r\n     */\r\n    function trigger(node, data) {\r\n        var id = getNodeId(node),\r\n            ids = data.invoked;\r\n\r\n        if (_.contains(ids, id)) {\r\n            return;\r\n        }\r\n\r\n        data.callback(node);\r\n        data.invoked.push(id);\r\n    }\r\n\r\n    /**\r\n     * Adds node to the observer list.\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @returns {Object}\r\n     */\r\n    function createNodeData(node) {\r\n        var nodes   = watchers.nodes,\r\n            id      = getNodeId(node);\r\n\r\n        nodes[id] = nodes[id] || {};\r\n\r\n        return nodes[id];\r\n    }\r\n\r\n    /**\r\n     * Returns data associated with a specified node.\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @returns {Object|Undefined}\r\n     */\r\n    function getNodeData(node) {\r\n        var nodeId = node._observeId;\r\n\r\n        return watchers.nodes[nodeId];\r\n    }\r\n\r\n    /**\r\n     * Removes data associated with a specified node.\r\n     *\r\n     * @param {HTMLElement} node\r\n     */\r\n    function removeNodeData(node) {\r\n        var nodeId = node._observeId;\r\n\r\n        delete watchers.nodes[nodeId];\r\n    }\r\n\r\n    /**\r\n     * Adds removal listener for a specified node.\r\n     *\r\n     * @param {HTMLElement} node\r\n     * @param {Object} data\r\n     */\r\n    function addRemovalListener(node, data) {\r\n        var nodeData = createNodeData(node);\r\n\r\n        (nodeData.remove = nodeData.remove || []).push(data);\r\n    }\r\n\r\n    /**\r\n     * Adds listener for the nodes which matches specified selector.\r\n     *\r\n     * @param {String} selector - CSS selector.\r\n     * @param {Object} data\r\n     */\r\n    function addSelectorListener(selector, data) {\r\n        var storage = watchers.selectors;\r\n\r\n        (storage[selector] = storage[selector] || []).push(data);\r\n    }\r\n\r\n    /**\r\n     * Calls handlers associated with an added node.\r\n     * Adds listeners for the node removal.\r\n     *\r\n     * @param {HTMLElement} node - Added node.\r\n     */\r\n    function processAdded(node) {\r\n        _.each(watchers.selectors, function (listeners, selector) {\r\n            listeners.forEach(function (data) {\r\n                if (!data.ctx.contains(node) || !$(node, data.ctx).is(selector)) {\r\n                    return;\r\n                }\r\n\r\n                if (data.type === 'add') {\r\n                    trigger(node, data);\r\n                } else if (data.type === 'remove') {\r\n                    addRemovalListener(node, data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calls handlers associated with a removed node.\r\n     *\r\n     * @param {HTMLElement} node - Removed node.\r\n     */\r\n    function processRemoved(node) {\r\n        var nodeData    = getNodeData(node),\r\n            listeners   = nodeData && nodeData.remove;\r\n\r\n        if (!listeners) {\r\n            return;\r\n        }\r\n\r\n        listeners.forEach(function (data) {\r\n            trigger(node, data);\r\n        });\r\n\r\n        removeNodeData(node);\r\n    }\r\n\r\n    /**\r\n     * Removes all non-element nodes from provided array\r\n     * and appends to it descendant elements.\r\n     *\r\n     * @param {Array} nodes\r\n     * @returns {Array}\r\n     */\r\n    function formNodesList(nodes) {\r\n        var result = [],\r\n            children;\r\n\r\n        nodes = _.toArray(nodes).filter(isElementNode);\r\n\r\n        nodes.forEach(function (node) {\r\n            result.push(node);\r\n\r\n            children = extractChildren(node);\r\n            result   = result.concat(children);\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Collects all removed and added nodes from\r\n     * mutation records into separate arrays\r\n     * while removing duplicates between both types of changes.\r\n     *\r\n     * @param {Array} mutations - An array of mutation records.\r\n     * @returns {Object} Object with 'removed' and 'added' nodes arrays.\r\n     */\r\n    function formChangesLists(mutations) {\r\n        var removed = [],\r\n            added = [];\r\n\r\n        mutations.forEach(function (record) {\r\n            removed = removed.concat(_.toArray(record.removedNodes));\r\n            added   = added.concat(_.toArray(record.addedNodes));\r\n        });\r\n\r\n        removed = removed.filter(function (node) {\r\n            var addIndex = added.indexOf(node),\r\n                wasAdded = !!~addIndex;\r\n\r\n            if (wasAdded) {\r\n                added.splice(addIndex, 1);\r\n            }\r\n\r\n            return !wasAdded;\r\n        });\r\n\r\n        return {\r\n            removed: formNodesList(removed),\r\n            added: formNodesList(added)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Verify if the DOM node is a child of a defined disabled node, if so we shouldn't observe provided mutation.\r\n     *\r\n     * @param {Object} mutation - a single mutation\r\n     * @returns {Boolean}\r\n     */\r\n    function shouldObserveMutation(mutation) {\r\n        var isDisabled;\r\n\r\n        if (disabledNodes.length > 0) {\r\n            // Iterate through the disabled nodes and determine if this mutation is occurring inside one of them\r\n            isDisabled = _.find(disabledNodes, function (node) {\r\n                return node === mutation.target || $.contains(node, mutation.target);\r\n            });\r\n\r\n            // If we find a matching node we should not observe the mutation\r\n            return !isDisabled;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Should we observe these mutations? Check the first and last mutation to determine if this is a disabled mutation,\r\n     * we check both the first and last in case one has been removed from the DOM during the process of the mutation.\r\n     *\r\n     * @param {Array} mutations - An array of mutation records.\r\n     * @returns {Boolean}\r\n     */\r\n    function shouldObserveMutations(mutations) {\r\n        var firstMutation,\r\n            lastMutation;\r\n\r\n        if (mutations.length > 0) {\r\n            firstMutation = mutations[0];\r\n            lastMutation = mutations[mutations.length - 1];\r\n\r\n            return shouldObserveMutation(firstMutation) && shouldObserveMutation(lastMutation);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    globalObserver = new MutationObserver(function (mutations) {\r\n        var changes;\r\n\r\n        if (shouldObserveMutations(mutations)) {\r\n            changes = formChangesLists(mutations);\r\n\r\n            changes.removed.forEach(processRemoved);\r\n            changes.added.forEach(processAdded);\r\n        }\r\n    });\r\n\r\n    globalObserver.observe(document.body, {\r\n        subtree: true,\r\n        childList: true\r\n    });\r\n\r\n    return {\r\n        /**\r\n         * Disable a node from being observed by the mutations, you may want to disable specific aspects of the\r\n         * application which are heavy on DOM changes. The observer running on some actions could cause significant\r\n         * delays and degrade the performance of that specific part of the application exponentially.\r\n         *\r\n         * @param {HTMLElement} node - a HTML node within the document\r\n         */\r\n        disableNode: function (node) {\r\n            disabledNodes.push(node);\r\n        },\r\n\r\n        /**\r\n         * Adds listener for the appearance of nodes that matches provided\r\n         * selector and which are inside of the provided context. Callback will be\r\n         * also invoked on elements which a currently present.\r\n         *\r\n         * @param {String} selector - CSS selector.\r\n         * @param {Function} callback - Function that will invoked when node appears.\r\n         * @param {HTMLElement} [ctx=document.body] - Context inside of which to search for the node.\r\n         */\r\n        get: function (selector, callback, ctx) {\r\n            var data,\r\n                nodes;\r\n\r\n            data = {\r\n                ctx: ctx || document.body,\r\n                type: 'add',\r\n                callback: callback,\r\n                invoked: []\r\n            };\r\n\r\n            nodes = $(selector, data.ctx).toArray();\r\n\r\n            nodes.forEach(function (node) {\r\n                trigger(node, data);\r\n            });\r\n\r\n            addSelectorListener(selector, data);\r\n        },\r\n\r\n        /**\r\n         * Adds listener for the nodes removal.\r\n         *\r\n         * @param {(jQueryObject|HTMLElement|Array|String)} selector\r\n         * @param {Function} callback - Function that will invoked when node is removed.\r\n         * @param {HTMLElement} [ctx=document.body] - Context inside of which to search for the node.\r\n         */\r\n        remove: function (selector, callback, ctx) {\r\n            var nodes = [],\r\n                data;\r\n\r\n            data = {\r\n                ctx: ctx || document.body,\r\n                type: 'remove',\r\n                callback: callback,\r\n                invoked: []\r\n            };\r\n\r\n            if (typeof selector === 'object') {\r\n                nodes = !_.isUndefined(selector.length) ?\r\n                    _.toArray(selector) :\r\n                    [selector];\r\n            } else if (_.isString(selector)) {\r\n                nodes = $(selector, ctx).toArray();\r\n\r\n                addSelectorListener(selector, data);\r\n            }\r\n\r\n            nodes.forEach(function (node) {\r\n                addRemovalListener(node, data);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Removes listeners.\r\n         *\r\n         * @param {String} selector\r\n         * @param {Function} [fn]\r\n         */\r\n        off: function (selector, fn) {\r\n            var selectors = watchers.selectors,\r\n                listeners = selectors[selector];\r\n\r\n            if (selector && !fn) {\r\n                delete selectors[selector];\r\n            } else if (listeners && fn) {\r\n                selectors[selector] = listeners.filter(function (data) {\r\n                    return data.callback !== fn;\r\n                });\r\n            }\r\n        }\r\n    };\r\n});\r\n","Magento_Ui/js/lib/view/utils/raf.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    var processMap = new WeakMap(),\r\n        origRaf,\r\n        raf;\r\n\r\n    origRaf = window.requestAnimationFrame ||\r\n        window.webkitRequestAnimationFrame ||\r\n        window.mozRequestAnimationFrame ||\r\n        window.onRequestAnimationFrame ||\r\n        window.msRequestAnimationFrame ||\r\n        function (callback) {\r\n            if (typeof callback != 'function') {\r\n                throw new Error('raf argument \"callback\" must be of type function');\r\n            }\r\n            window.setTimeout(callback, 1000 / 60);\r\n        };\r\n\r\n    /**\r\n     * Creates new process object or extracts the\r\n     * the existing one.\r\n     *\r\n     * @param {*} id - Process identifier.\r\n     * @param {Number} fps - Required FPS count.\r\n     * @returns {Object}\r\n     */\r\n    function getProcess(id, fps) {\r\n        var process = processMap.get(id);\r\n\r\n        if (!process) {\r\n            process = {};\r\n            processMap.set(id, process);\r\n        }\r\n\r\n        if (process.fps !== fps) {\r\n            process.fps        = fps;\r\n            process.interval   = 1000 / fps;\r\n            process.update     = Date.now();\r\n        }\r\n\r\n        return process;\r\n    }\r\n\r\n    /**\r\n     * Proxy method which delegates call to the 'requestAnimationFrame'\r\n     * function and optionally can keep track of the FPS with which\r\n     * provided function is called.\r\n     *\r\n     * @param {Function} callback - Callback function to be passed to 'requestAnimationFrame'.\r\n     * @param {Number} [fps] - If specified, will update FPS counter for the provided function.\r\n     * @returns {Number|Boolean} ID of request or a flag which indicates\r\n     *      whether callback fits specified FPS.\r\n     */\r\n    raf = function (callback, fps) {\r\n        var rafId = origRaf(callback);\r\n\r\n        return fps ? raf.tick(callback, fps) : rafId;\r\n    };\r\n\r\n    /**\r\n     * Updates FPS counter for the specified process\r\n     * and returns a flag which indicates whether\r\n     * counter value is equal or greater than the required FPS.\r\n     *\r\n     * @param {*} id - Process identifier.\r\n     * @param {Number} fps - Required FPS count.\r\n     * @returns {Boolean}\r\n     */\r\n    raf.tick = function (id, fps) {\r\n        var process  = getProcess(id, fps),\r\n            now      = Date.now(),\r\n            delta    = now - process.update,\r\n            interval = process.interval;\r\n\r\n        if (fps >= 60 || delta >= interval) {\r\n            process.update = now - delta % interval;\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    return raf;\r\n});\r\n","Magento_Ui/js/modal/alert.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'jquery-ui-modules/widget',\r\n    'Magento_Ui/js/modal/confirm',\r\n    'mage/translate'\r\n], function ($, _) {\r\n    'use strict';\r\n\r\n    $.widget('mage.alert', $.mage.confirm, {\r\n        options: {\r\n            modalClass: 'confirm',\r\n            title: $.mage.__('Attention'),\r\n            actions: {\r\n\r\n                /**\r\n                 * Callback always - called on all actions.\r\n                 */\r\n                always: function () {}\r\n            },\r\n            buttons: [{\r\n                text: $.mage.__('OK'),\r\n                class: 'action-primary action-accept',\r\n\r\n                /**\r\n                 * Click handler.\r\n                 */\r\n                click: function () {\r\n                    this.closeModal(true);\r\n                }\r\n            }]\r\n        },\r\n\r\n        /**\r\n         * Close modal window.\r\n         */\r\n        closeModal: function () {\r\n            this.options.actions.always();\r\n            this.element.on('alertclosed', _.bind(this._remove, this));\r\n\r\n            return this._super();\r\n        }\r\n    });\r\n\r\n    return function (config) {\r\n        return $('<div></div>').html(config.content).alert(config);\r\n    };\r\n});\r\n","Magento_Ui/js/modal/confirm.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mage/translate',\r\n    'jquery-ui-modules/widget',\r\n    'Magento_Ui/js/modal/modal'\r\n], function ($, _, $t) {\r\n    'use strict';\r\n\r\n    $.widget('mage.confirm', $.mage.modal, {\r\n        options: {\r\n            modalClass: 'confirm',\r\n            title: '',\r\n            focus: '.action-accept',\r\n            actions: {\r\n\r\n                /**\r\n                 * Callback always - called on all actions.\r\n                 */\r\n                always: function () {},\r\n\r\n                /**\r\n                 * Callback confirm.\r\n                 */\r\n                confirm: function () {},\r\n\r\n                /**\r\n                 * Callback cancel.\r\n                 */\r\n                cancel: function () {}\r\n            },\r\n            buttons: [{\r\n                text: $t('Cancel'),\r\n                class: 'action-secondary action-dismiss',\r\n\r\n                /**\r\n                 * Click handler.\r\n                 */\r\n                click: function (event) {\r\n                    this.closeModal(event);\r\n                }\r\n            }, {\r\n                text: $t('OK'),\r\n                class: 'action-primary action-accept',\r\n\r\n                /**\r\n                 * Click handler.\r\n                 */\r\n                click: function (event) {\r\n                    this.closeModal(event, true);\r\n                }\r\n            }]\r\n        },\r\n\r\n        /**\r\n         * Create widget.\r\n         */\r\n        _create: function () {\r\n            this._super();\r\n            this.modal.find(this.options.modalCloseBtn).off().on('click', _.bind(this.closeModal, this));\r\n            this.openModal();\r\n        },\r\n\r\n        /**\r\n         * Remove modal window.\r\n         */\r\n        _remove: function () {\r\n            this.modal.remove();\r\n        },\r\n\r\n        /**\r\n         * Open modal window.\r\n         */\r\n        openModal: function () {\r\n            return this._super();\r\n        },\r\n\r\n        /**\r\n         * Close modal window.\r\n         */\r\n        closeModal: function (event, result) {\r\n            result = result || false;\r\n\r\n            if (result) {\r\n                this.options.actions.confirm(event);\r\n            } else {\r\n                this.options.actions.cancel(event);\r\n            }\r\n            this.options.actions.always(event);\r\n            this.element.on('confirmclosed', _.bind(this._remove, this));\r\n\r\n            return this._super();\r\n        }\r\n    });\r\n\r\n    return function (config) {\r\n        return $('<div></div>').html(config.content).confirm(config);\r\n    };\r\n});\r\n","Magento_Ui/js/modal/modal-component.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'Magento_Ui/js/lib/view/utils/async',\r\n    'uiCollection',\r\n    'uiRegistry',\r\n    'underscore',\r\n    './modal'\r\n], function ($, Collection, registry, _) {\r\n    'use strict';\r\n\r\n    return Collection.extend({\r\n        defaults: {\r\n            template: 'ui/modal/modal-component',\r\n            title: '',\r\n            subTitle: '',\r\n            options: {\r\n                modalClass: '',\r\n                title: '',\r\n                subTitle: '',\r\n                buttons: [],\r\n                keyEventHandlers: {}\r\n            },\r\n            valid: true,\r\n            links: {\r\n                title: 'options.title',\r\n                subTitle: 'options.subTitle'\r\n            },\r\n            listens: {\r\n                state: 'onState',\r\n                title: 'setTitle',\r\n                'options.subTitle': 'setSubTitle'\r\n            },\r\n            modalClass: 'modal-component',\r\n            onCancel: 'closeModal'\r\n        },\r\n\r\n        /**\r\n         * Initializes component.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super();\r\n            _.bindAll(this,\r\n                'initModal',\r\n                'openModal',\r\n                'closeModal',\r\n                'toggleModal',\r\n                'setPrevValues',\r\n                'validate');\r\n            this.initializeContent();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes modal configuration\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initConfig: function () {\r\n            return this._super()\r\n                .initSelector()\r\n                .initModalEvents();\r\n        },\r\n\r\n        /**\r\n         * Configure modal selector\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initSelector: function () {\r\n            var modalClass = this.name.replace(/\\./g, '_');\r\n\r\n            this.contentSelector = '.' + this.modalClass;\r\n            this.options.modalClass = this.options.modalClass + ' ' + modalClass;\r\n            this.rootSelector = '.' + modalClass;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Configure modal keyboard handlers\r\n         * and outer click\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initModalEvents: function () {\r\n            this.options.keyEventHandlers.escapeKey = this.options.outerClickHandler = this[this.onCancel].bind(this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initialize modal's content components\r\n         */\r\n        initializeContent: function () {\r\n            $.async({\r\n                component: this.name\r\n            }, this.initModal);\r\n        },\r\n\r\n        /**\r\n         * Init toolbar section so other components will be able to place something in it\r\n         */\r\n        initToolbarSection: function () {\r\n            this.set('toolbarSection', this.modal.data('mage-modal').modal.find('header').get(0));\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties.\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super();\r\n            this.observe(['state', 'focused']);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Wrap content in a modal of certain type\r\n         *\r\n         * @param {HTMLElement} element\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initModal: function (element) {\r\n            if (!this.modal) {\r\n                this.overrideModalButtonCallback();\r\n                this.options.modalCloseBtnHandler = this[this.onCancel].bind(this);\r\n                this.modal = $(element).modal(this.options);\r\n                this.initToolbarSection();\r\n\r\n                if (this.waitCbk) {\r\n                    this.waitCbk();\r\n                    this.waitCbk = null;\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Open modal\r\n         */\r\n        openModal: function () {\r\n            if (this.modal) {\r\n                this.state(true);\r\n            } else {\r\n                this.waitCbk = this.openModal;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Close modal\r\n         */\r\n        closeModal: function () {\r\n            if (this.modal) {\r\n                this.state(false);\r\n            } else {\r\n                this.waitCbk = this.closeModal;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Toggle modal\r\n         */\r\n        toggleModal: function () {\r\n            if (this.modal) {\r\n                this.state(!this.state());\r\n            } else {\r\n                this.waitCbk = this.toggleModal;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Sets title for modal\r\n         *\r\n         * @param {String} title\r\n         */\r\n        setTitle: function (title) {\r\n            if (this.title !== title) {\r\n                this.title = title;\r\n            }\r\n\r\n            if (this.modal) {\r\n                this.modal.modal('setTitle', title);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Sets subTitle for modal\r\n         *\r\n         * @param {String} subTitle\r\n         */\r\n        setSubTitle: function (subTitle) {\r\n            if (this.subTitle !== subTitle) {\r\n                this.subTitle = subTitle;\r\n            }\r\n\r\n            if (this.modal) {\r\n                this.modal.modal('setSubTitle', subTitle);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Wrap content in a modal of certain type\r\n         *\r\n         * @param {Boolean} state\r\n         */\r\n        onState: function (state) {\r\n            if (state) {\r\n                this.modal.modal('openModal');\r\n                this.applyData();\r\n            } else {\r\n                this.modal.modal('closeModal');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Validate everything validatable in modal\r\n         */\r\n        validate: function (elem) {\r\n            if (typeof elem === 'undefined') {\r\n                return;\r\n            }\r\n\r\n            if (typeof elem.validate === 'function') {\r\n                this.valid &= elem.validate().valid;\r\n            } else if (elem.elems) {\r\n                elem.elems().forEach(this.validate, this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Reset data from provider\r\n         */\r\n        resetData: function () {\r\n            this.elems().forEach(this.resetValue, this);\r\n        },\r\n\r\n        /**\r\n         * Update 'applied' property with data from modal content\r\n         */\r\n        applyData: function () {\r\n            var applied = {};\r\n\r\n            this.elems().forEach(this.gatherValues.bind(this, applied), this);\r\n            this.applied = applied;\r\n        },\r\n\r\n        /**\r\n         * Gather values from modal content\r\n         *\r\n         * @param {Array} applied\r\n         * @param {HTMLElement} elem\r\n         */\r\n        gatherValues: function (applied, elem) {\r\n            if (typeof elem.value === 'function') {\r\n                applied[elem.name] = elem.value();\r\n            } else if (elem.elems) {\r\n                elem.elems().forEach(this.gatherValues.bind(this, applied), this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set to previous values from modal content\r\n         *\r\n         * @param {HTMLElement} elem\r\n         */\r\n        setPrevValues: function (elem) {\r\n            if (typeof elem.value === 'function') {\r\n                this.modal.focus();\r\n                elem.value(this.applied[elem.name]);\r\n            } else if (elem.elems) {\r\n                elem.elems().forEach(this.setPrevValues, this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Triggers some method in every modal child elem, if this method is defined\r\n         *\r\n         * @param {Object} action - action configuration,\r\n         * must contain actionName and targetName and\r\n         * can contain params\r\n         */\r\n        triggerAction: function (action) {\r\n            var targetName = action.targetName,\r\n                params = action.params || [],\r\n                actionName = action.actionName,\r\n                target;\r\n\r\n            target = registry.async(targetName);\r\n\r\n            if (target && typeof target === 'function' && actionName) {\r\n                params.unshift(actionName);\r\n                target.apply(target, params);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Override modal buttons callback placeholders with real callbacks\r\n         */\r\n        overrideModalButtonCallback: function () {\r\n            var buttons = this.options.buttons;\r\n\r\n            if (buttons && buttons.length) {\r\n                buttons.forEach(function (button) {\r\n                    button.click = this.getButtonClickHandler(button.actions);\r\n                }, this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Generate button click handler based on button's 'actions' configuration\r\n         */\r\n        getButtonClickHandler: function (actionsConfig) {\r\n            var actions = actionsConfig.map(\r\n                function (actionConfig) {\r\n                    if (_.isObject(actionConfig)) {\r\n                        return this.triggerAction.bind(this, actionConfig);\r\n                    }\r\n\r\n                    return this[actionConfig] ? this[actionConfig].bind(this) : function () {};\r\n                }, this);\r\n\r\n            return function () {\r\n                actions.forEach(\r\n                    function (action) {\r\n                        action();\r\n                    }\r\n                );\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Cancels changes in modal:\r\n         * returning elems values to the previous state,\r\n         * and close modal\r\n         */\r\n        actionCancel: function () {\r\n            this.elems().forEach(this.setPrevValues, this);\r\n            this.closeModal();\r\n        },\r\n\r\n        /**\r\n         * Accept changes in modal by not preventing them.\r\n         * Can be extended by exporting 'gatherValues' result somewhere\r\n         */\r\n        actionDone: function () {\r\n            this.valid = true;\r\n            this.elems().forEach(this.validate, this);\r\n\r\n            if (this.valid) {\r\n                this.closeModal();\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/modal/modal.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mage/template',\r\n    'text!ui/template/modal/modal-popup.html',\r\n    'text!ui/template/modal/modal-slide.html',\r\n    'text!ui/template/modal/modal-custom.html',\r\n    'Magento_Ui/js/lib/key-codes',\r\n    'jquery-ui-modules/widget',\r\n    'jquery-ui-modules/core',\r\n    'mage/translate',\r\n    'jquery/z-index'\r\n], function ($, _, template, popupTpl, slideTpl, customTpl, keyCodes) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Detect browser transition end event.\r\n     * @return {String|undefined} - transition event.\r\n     */\r\n    var transitionEvent = (function () {\r\n        var transition,\r\n            elementStyle = document.createElement('div').style,\r\n            transitions = {\r\n                'transition': 'transitionend',\r\n                'OTransition': 'oTransitionEnd',\r\n                'MozTransition': 'transitionend',\r\n                'WebkitTransition': 'webkitTransitionEnd'\r\n            };\r\n\r\n        for (transition in transitions) {\r\n            if (elementStyle[transition] !== undefined && transitions.hasOwnProperty(transition)) {\r\n                return transitions[transition];\r\n            }\r\n        }\r\n    })();\r\n\r\n    /**\r\n     * Modal Window Widget\r\n     */\r\n    $.widget('mage.modal', {\r\n        options: {\r\n            id: null,\r\n            type: 'popup',\r\n            title: '',\r\n            subTitle: '',\r\n            modalClass: '',\r\n            focus: '[data-role=\"closeBtn\"]',\r\n            autoOpen: false,\r\n            clickableOverlay: true,\r\n            popupTpl: popupTpl,\r\n            slideTpl: slideTpl,\r\n            customTpl: customTpl,\r\n            modalVisibleClass: '_show',\r\n            parentModalClass: '_has-modal',\r\n            innerScrollClass: '_inner-scroll',\r\n            responsive: false,\r\n            innerScroll: false,\r\n            modalTitle: '[data-role=\"title\"]',\r\n            modalSubTitle: '[data-role=\"subTitle\"]',\r\n            modalBlock: '[data-role=\"modal\"]',\r\n            modalCloseBtn: '[data-role=\"closeBtn\"]',\r\n            modalContent: '[data-role=\"content\"]',\r\n            modalAction: '[data-role=\"action\"]',\r\n            focusableScope: '[data-role=\"focusable-scope\"]',\r\n            focusableStart: '[data-role=\"focusable-start\"]',\r\n            focusableEnd: '[data-role=\"focusable-end\"]',\r\n            appendTo: 'body',\r\n            wrapperClass: 'modals-wrapper',\r\n            overlayClass: 'modals-overlay',\r\n            responsiveClass: 'modal-slide',\r\n            trigger: '',\r\n            modalLeftMargin: 45,\r\n            closeText: $.mage.__('Close'),\r\n            buttons: [{\r\n                text: $.mage.__('Ok'),\r\n                class: '',\r\n                attr: {},\r\n\r\n                /**\r\n                 * Default action on button click\r\n                 */\r\n                click: function (event) {\r\n                    this.closeModal(event);\r\n                }\r\n            }],\r\n            keyEventHandlers: {\r\n\r\n                /**\r\n                 * Tab key press handler,\r\n                 * set focus to elements\r\n                 */\r\n                tabKey: function () {\r\n                    if (document.activeElement === this.modal[0]) {\r\n                        this._setFocus('start');\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Escape key press handler,\r\n                 * close modal window\r\n                 * @param {Object} event - event\r\n                 */\r\n                escapeKey: function (event) {\r\n                    if (this.options.isOpen && this.modal.find(document.activeElement).length ||\r\n                        this.options.isOpen && this.modal[0] === document.activeElement) {\r\n                        this.closeModal(event);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Creates modal widget.\r\n         */\r\n        _create: function () {\r\n            _.bindAll(\r\n                this,\r\n                'keyEventSwitcher',\r\n                '_tabSwitcher',\r\n                'closeModal'\r\n            );\r\n\r\n            this.options.id = this.uuid;\r\n            this.options.transitionEvent = transitionEvent;\r\n            this._createWrapper();\r\n            this._renderModal();\r\n            this._createButtons();\r\n\r\n            if (this.options.trigger) {\r\n                $(document).on('click', this.options.trigger, _.bind(this.toggleModal, this));\r\n            }\r\n            this._on(this.modal.find(this.options.modalCloseBtn), {\r\n                'click': this.options.modalCloseBtnHandler ? this.options.modalCloseBtnHandler : this.closeModal\r\n            });\r\n            this._on(this.element, {\r\n                'openModal': this.openModal,\r\n                'closeModal': this.closeModal\r\n            });\r\n            this.options.autoOpen ? this.openModal() : false;\r\n        },\r\n\r\n        /**\r\n         * Returns element from modal node.\r\n         * @return {Object} - element.\r\n         */\r\n        _getElem: function (elem) {\r\n            return this.modal.find(elem);\r\n        },\r\n\r\n        /**\r\n         * Gets visible modal count.\r\n         * * @return {Number} - visible modal count.\r\n         */\r\n        _getVisibleCount: function () {\r\n            var modals = this.modalWrapper.find(this.options.modalBlock);\r\n\r\n            return modals.filter('.' + this.options.modalVisibleClass).length;\r\n        },\r\n\r\n        /**\r\n         * Gets count of visible modal by slide type.\r\n         * * @return {Number} - visible modal count.\r\n         */\r\n        _getVisibleSlideCount: function () {\r\n            var elems = this.modalWrapper.find('[data-type=\"slide\"]');\r\n\r\n            return elems.filter('.' + this.options.modalVisibleClass).length;\r\n        },\r\n\r\n        /**\r\n         * Listener key events.\r\n         * Call handler function if it exists\r\n         */\r\n        keyEventSwitcher: function (event) {\r\n            var key = keyCodes[event.keyCode];\r\n\r\n            if (this.options.keyEventHandlers.hasOwnProperty(key)) {\r\n                this.options.keyEventHandlers[key].apply(this, arguments);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set title for modal.\r\n         *\r\n         * @param {String} title\r\n         */\r\n        setTitle: function (title) {\r\n            var $title = this.modal.find(this.options.modalTitle),\r\n                $subTitle = this.modal.find(this.options.modalSubTitle);\r\n\r\n            $title.text(title);\r\n            $title.append($subTitle);\r\n        },\r\n\r\n        /**\r\n         * Set sub title for modal.\r\n         *\r\n         * @param {String} subTitle\r\n         */\r\n        setSubTitle: function (subTitle) {\r\n            this.options.subTitle = subTitle;\r\n            this.modal.find(this.options.modalSubTitle).html(subTitle);\r\n        },\r\n\r\n        /**\r\n         * Toggle modal.\r\n         * * @return {Element} - current element.\r\n         */\r\n        toggleModal: function () {\r\n            if (this.options.isOpen === true) {\r\n                this.closeModal();\r\n            } else {\r\n                this.openModal();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Open modal.\r\n         * * @return {Element} - current element.\r\n         */\r\n        openModal: function () {\r\n            this.options.isOpen = true;\r\n            this.focussedElement = document.activeElement;\r\n            this._createOverlay();\r\n            this._setActive();\r\n            this._setKeyListener();\r\n            this.modal.one(this.options.transitionEvent, _.bind(this._setFocus, this, 'end', 'opened'));\r\n            this.modal.one(this.options.transitionEvent, _.bind(this._trigger, this, 'opened'));\r\n            this.modal.addClass(this.options.modalVisibleClass);\r\n\r\n            if (!this.options.transitionEvent) {\r\n                this._trigger('opened');\r\n            }\r\n\r\n            return this.element;\r\n        },\r\n\r\n        /**\r\n         * Set focus to element.\r\n         * @param {String} position - can be \"start\" and \"end\"\r\n         *      positions.\r\n         *      If position is \"end\" - sets focus to first\r\n         *      focusable element in modal window scope.\r\n         *      If position is \"start\" - sets focus to last\r\n         *      focusable element in modal window scope\r\n         *\r\n         *  @param {String} type - can be \"opened\" or false\r\n         *      If type is \"opened\" - looks to \"this.options.focus\"\r\n         *      property and sets focus\r\n         */\r\n        _setFocus: function (position, type) {\r\n            var focusableElements,\r\n                infelicity;\r\n\r\n            if (type === 'opened' && this.options.focus) {\r\n                this.modal.find($(this.options.focus)).trigger('focus');\r\n            } else if (type === 'opened' && !this.options.focus) {\r\n                this.modal.find(this.options.focusableScope).trigger('focus');\r\n            } else if (position === 'end') {\r\n                this.modal.find(this.options.modalCloseBtn).trigger('focus');\r\n            } else if (position === 'start') {\r\n                infelicity = 2; //Constant for find last focusable element\r\n                focusableElements = this.modal.find(':focusable');\r\n                focusableElements.eq(focusableElements.length - infelicity).trigger('focus');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set events listener when modal is opened.\r\n         */\r\n        _setKeyListener: function () {\r\n            this.modal.find(this.options.focusableStart).on('focusin', this._tabSwitcher);\r\n            this.modal.find(this.options.focusableEnd).on('focusin', this._tabSwitcher);\r\n            this.modal.on('keydown', this.keyEventSwitcher);\r\n        },\r\n\r\n        /**\r\n         * Remove events listener when modal is closed.\r\n         */\r\n        _removeKeyListener: function () {\r\n            this.modal.find(this.options.focusableStart).off('focusin', this._tabSwitcher);\r\n            this.modal.find(this.options.focusableEnd).off('focusin', this._tabSwitcher);\r\n            this.modal.off('keydown', this.keyEventSwitcher);\r\n        },\r\n\r\n        /**\r\n         * Switcher for focus event.\r\n         * @param {Object} e - event\r\n         */\r\n        _tabSwitcher: function (e) {\r\n            var target = $(e.target);\r\n\r\n            if (target.is(this.options.focusableStart)) {\r\n                this._setFocus('start');\r\n            } else if (target.is(this.options.focusableEnd)) {\r\n                this._setFocus('end');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Close modal.\r\n         * * @return {Element} - current element.\r\n         */\r\n        closeModal: function () {\r\n            var that = this;\r\n\r\n            this._removeKeyListener();\r\n            this.options.isOpen = false;\r\n            this.modal.one(this.options.transitionEvent, function () {\r\n                that._close();\r\n            });\r\n            this.modal.removeClass(this.options.modalVisibleClass);\r\n\r\n            if (!this.options.transitionEvent) {\r\n                that._close();\r\n            }\r\n\r\n            return this.element;\r\n        },\r\n\r\n        /**\r\n         * Helper for closeModal function.\r\n         */\r\n        _close: function () {\r\n            var trigger = _.bind(this._trigger, this, 'closed', this.modal);\r\n\r\n            $(this.focussedElement).trigger('focus');\r\n            this._destroyOverlay();\r\n            this._unsetActive();\r\n            _.defer(trigger, this);\r\n        },\r\n\r\n        /**\r\n         * Set z-index and margin for modal and overlay.\r\n         */\r\n        _setActive: function () {\r\n            var zIndex = this.modal.zIndex(),\r\n                baseIndex = zIndex + this._getVisibleCount();\r\n\r\n            if (this.modal.data('active')) {\r\n                return;\r\n            }\r\n\r\n            this.modal.data('active', true);\r\n\r\n            this.overlay.zIndex(++baseIndex);\r\n            this.prevOverlayIndex = this.overlay.zIndex();\r\n            this.modal.zIndex(this.overlay.zIndex() + 1);\r\n\r\n            if (this._getVisibleSlideCount()) {\r\n                this.modal.css('marginLeft', this.options.modalLeftMargin * this._getVisibleSlideCount());\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Unset styles for modal and set z-index for previous modal.\r\n         */\r\n        _unsetActive: function () {\r\n            this.modal.removeAttr('style');\r\n            this.modal.data('active', false);\r\n\r\n            if (this.overlay) {\r\n                this.overlay.zIndex(this.prevOverlayIndex - 1);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Creates wrapper to hold all modals.\r\n         */\r\n        _createWrapper: function () {\r\n            this.modalWrapper = $(this.options.appendTo).find('.' + this.options.wrapperClass);\r\n\r\n            if (!this.modalWrapper.length) {\r\n                this.modalWrapper = $('<div></div>')\r\n                    .addClass(this.options.wrapperClass)\r\n                    .appendTo(this.options.appendTo);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Compile template and append to wrapper.\r\n         */\r\n        _renderModal: function () {\r\n            $(template(\r\n                this.options[this.options.type + 'Tpl'],\r\n                {\r\n                    data: this.options\r\n                })).appendTo(this.modalWrapper);\r\n            this.modal = this.modalWrapper.find(this.options.modalBlock).last();\r\n            this.element.appendTo(this._getElem(this.options.modalContent));\r\n\r\n            if (this.element.is(':hidden')) {\r\n                this.element.show();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Creates buttons pane.\r\n         */\r\n        _createButtons: function () {\r\n            this.buttons = this._getElem(this.options.modalAction);\r\n            _.each(this.options.buttons, function (btn, key) {\r\n                var button = this.buttons[key];\r\n\r\n                if (btn.attr) {\r\n                    $(button).attr(btn.attr);\r\n                }\r\n\r\n                if (btn.class) {\r\n                    $(button).addClass(btn.class);\r\n                }\r\n\r\n                if (!btn.click) {\r\n                    btn.click = this.closeModal;\r\n                }\r\n                $(button).on('click', _.bind(btn.click, this));\r\n            }, this);\r\n        },\r\n\r\n        /**\r\n         * Creates overlay, append it to wrapper, set previous click event on overlay.\r\n         */\r\n        _createOverlay: function () {\r\n            var events,\r\n                outerClickHandler = this.options.outerClickHandler || this.closeModal;\r\n\r\n            this.overlay = $('.' + this.options.overlayClass);\r\n\r\n            if (!this.overlay.length) {\r\n                $(this.options.appendTo).addClass(this.options.parentModalClass);\r\n                this.overlay = $('<div></div>')\r\n                    .addClass(this.options.overlayClass)\r\n                    .appendTo(this.modalWrapper);\r\n            }\r\n            events = $._data(this.overlay.get(0), 'events');\r\n            events ? this.prevOverlayHandler = events.click[0].handler : false;\r\n            this.options.clickableOverlay ? this.overlay.off().on('click', outerClickHandler) : false;\r\n        },\r\n\r\n        /**\r\n         * Destroy overlay.\r\n         */\r\n        _destroyOverlay: function () {\r\n            if (this._getVisibleCount()) {\r\n                this.overlay.off().on('click', this.prevOverlayHandler);\r\n            } else {\r\n                $(this.options.appendTo).removeClass(this.options.parentModalClass);\r\n                this.overlay.remove();\r\n                this.overlay = null;\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.modal;\r\n});\r\n","Magento_Ui/js/modal/modalToggle.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/modal'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    return function (config, el) {\r\n        var widget,\r\n            content;\r\n\r\n        if (config.contentSelector) {\r\n            content = $(config.contentSelector);\r\n        } else if (config.content) {\r\n            content = $('<div></div>').html(config.content);\r\n        } else {\r\n            content = $('<div></div>');\r\n        }\r\n\r\n        widget = content.modal(config);\r\n\r\n        $(el).on(config.toggleEvent, function () {\r\n            var state = widget.data('mage-modal').options.isOpen;\r\n\r\n            if (state) {\r\n                widget.modal('closeModal');\r\n            } else {\r\n                widget.modal('openModal');\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return widget;\r\n    };\r\n});\r\n","Magento_Ui/js/modal/prompt.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'mage/template',\r\n    'text!ui/template/modal/modal-prompt-content.html',\r\n    'jquery-ui-modules/widget',\r\n    'Magento_Ui/js/modal/modal',\r\n    'mage/translate'\r\n], function ($, _, template, promptContentTmpl) {\r\n    'use strict';\r\n\r\n    $.widget('mage.prompt', $.mage.modal, {\r\n        options: {\r\n            modalClass: 'prompt',\r\n            promptContentTmpl: promptContentTmpl,\r\n            promptField: '[data-role=\"promptField\"]',\r\n            attributesForm: {},\r\n            attributesField: {},\r\n            value: '',\r\n            validation: false,\r\n            validationRules: [],\r\n            keyEventHandlers: {\r\n\r\n                /**\r\n                 * Enter key press handler,\r\n                 * submit result and close modal window\r\n                 * @param {Object} event - event\r\n                 */\r\n                enterKey: function (event) {\r\n                    if (this.options.isOpen && this.modal.find(document.activeElement).length ||\r\n                        this.options.isOpen && this.modal[0] === document.activeElement) {\r\n                        this.closeModal(true);\r\n                        event.preventDefault();\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Tab key press handler,\r\n                 * set focus to elements\r\n                 */\r\n                tabKey: function () {\r\n                    if (document.activeElement === this.modal[0]) {\r\n                        this._setFocus('start');\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Escape key press handler,\r\n                 * cancel and close modal window\r\n                 * @param {Object} event - event\r\n                 */\r\n                escapeKey: function (event) {\r\n                    if (this.options.isOpen && this.modal.find(document.activeElement).length ||\r\n                        this.options.isOpen && this.modal[0] === document.activeElement) {\r\n                        this.closeModal();\r\n                        event.preventDefault();\r\n                    }\r\n                }\r\n            },\r\n            actions: {\r\n\r\n                /**\r\n                 * Callback always - called on all actions.\r\n                 */\r\n                always: function () {},\r\n\r\n                /**\r\n                 * Callback confirm.\r\n                 */\r\n                confirm: function () {},\r\n\r\n                /**\r\n                 * Callback cancel.\r\n                 */\r\n                cancel: function () {}\r\n            },\r\n            buttons: [{\r\n                text: $.mage.__('Cancel'),\r\n                class: 'action-secondary action-dismiss',\r\n\r\n                /**\r\n                 * Click handler.\r\n                 */\r\n                click: function () {\r\n                    this.closeModal();\r\n                }\r\n            }, {\r\n                text: $.mage.__('OK'),\r\n                class: 'action-primary action-accept',\r\n\r\n                /**\r\n                 * Click handler.\r\n                 */\r\n                click: function () {\r\n                    this.closeModal(true);\r\n                }\r\n            }]\r\n        },\r\n\r\n        /**\r\n         * Create widget.\r\n         */\r\n        _create: function () {\r\n            this.options.focus = this.options.promptField;\r\n            this.options.validation = this.options.validation && this.options.validationRules.length;\r\n            this.options.outerClickHandler = this.options.outerClickHandler || _.bind(this.closeModal, this, false);\r\n            this._super();\r\n            this.modal.find(this.options.modalContent).append(this.getFormTemplate());\r\n            this.modal.find(this.options.modalCloseBtn).off().on('click',  _.bind(this.closeModal, this, false));\r\n\r\n            if (this.options.validation) {\r\n                this.setValidationClasses();\r\n            }\r\n\r\n            this.openModal();\r\n        },\r\n\r\n        /**\r\n         * Form template getter.\r\n         *\r\n         * @returns {Object} Form template.\r\n         */\r\n        getFormTemplate: function () {\r\n            var formTemplate,\r\n                formAttr = '',\r\n                inputAttr = '',\r\n                attributeName;\r\n\r\n            for (attributeName in this.options.attributesForm) {\r\n                if (this.options.attributesForm.hasOwnProperty(attributeName)) {\r\n                    formAttr = formAttr + ' ' + attributeName + '=\"' +\r\n                        this.options.attributesForm[attributeName] + '\"';\r\n                }\r\n            }\r\n\r\n            for (attributeName in this.options.attributesField) {\r\n                if (this.options.attributesField.hasOwnProperty(attributeName)) {\r\n                    inputAttr = inputAttr + ' ' + attributeName + '=\"' +\r\n                        this.options.attributesField[attributeName] + '\"';\r\n                }\r\n            }\r\n\r\n            formTemplate = $(template(this.options.promptContentTmpl, {\r\n                data: this.options,\r\n                formAttr: formAttr,\r\n                inputAttr: inputAttr\r\n            }));\r\n\r\n            return formTemplate;\r\n        },\r\n\r\n        /**\r\n         * Remove widget\r\n         */\r\n        _remove: function () {\r\n            this.modal.remove();\r\n        },\r\n\r\n        /**\r\n         * Validate prompt field\r\n         */\r\n        validate: function () {\r\n            return $.validator.validateSingleElement(this.options.promptField);\r\n        },\r\n\r\n        /**\r\n         * Add validation classes to prompt field\r\n         */\r\n        setValidationClasses: function () {\r\n            this.modal.find(this.options.promptField).attr('class', $.proxy(function (i, val) {\r\n                return val + ' ' + this.options.validationRules.join(' ');\r\n            }, this));\r\n        },\r\n\r\n        /**\r\n         * Open modal window\r\n         */\r\n        openModal: function () {\r\n            this._super();\r\n            this.modal.find(this.options.promptField).val(this.options.value);\r\n        },\r\n\r\n        /**\r\n         * Close modal window\r\n         */\r\n        closeModal: function (result) {\r\n            var value;\r\n\r\n            if (result) {\r\n                if (this.options.validation && !this.validate()) {\r\n                    return false;\r\n                }\r\n\r\n                value = this.modal.find(this.options.promptField).val();\r\n                this.options.actions.confirm.call(this, value);\r\n            } else {\r\n                this.options.actions.cancel.call(this, result);\r\n            }\r\n\r\n            this.options.actions.always();\r\n            this.element.on('promptclosed', _.bind(this._remove, this));\r\n\r\n            return this._super();\r\n        }\r\n    });\r\n\r\n    return function (config) {\r\n        return $('<div class=\"prompt-message\"></div>').html(config.content).prompt(config);\r\n    };\r\n});\r\n","Magento_Ui/js/model/messageList.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    './messages'\r\n], function (Messages) {\r\n    'use strict';\r\n\r\n    return new Messages();\r\n});\r\n","Magento_Ui/js/model/messages.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'ko',\r\n    'uiClass'\r\n], function (ko, Class) {\r\n    'use strict';\r\n\r\n    return Class.extend({\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            this._super()\r\n                .initObservable();\r\n\r\n            return this;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initObservable: function () {\r\n            this.errorMessages = ko.observableArray([]);\r\n            this.successMessages = ko.observableArray([]);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Add  message to list.\r\n         * @param {Object} messageObj\r\n         * @param {Object} type\r\n         * @returns {Boolean}\r\n         */\r\n        add: function (messageObj, type) {\r\n            var expr = /([%])\\w+/g,\r\n                message;\r\n\r\n            if (!messageObj.hasOwnProperty('parameters')) {\r\n                this.clear();\r\n                type.push(messageObj.message);\r\n\r\n                return true;\r\n            }\r\n            message = messageObj.message.replace(expr, function (varName) {\r\n                varName = varName.substr(1);\r\n\r\n                if (!isNaN(varName)) {\r\n                    varName--;\r\n                }\r\n\r\n                if (messageObj.parameters.hasOwnProperty(varName)) {\r\n                    return messageObj.parameters[varName];\r\n                }\r\n\r\n                return messageObj.parameters.shift();\r\n            });\r\n            this.clear();\r\n            type.push(message);\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Add success message.\r\n         *\r\n         * @param {Object} message\r\n         * @return {*|Boolean}\r\n         */\r\n        addSuccessMessage: function (message) {\r\n            return this.add(message, this.successMessages);\r\n        },\r\n\r\n        /**\r\n         * Add error message.\r\n         *\r\n         * @param {Object} message\r\n         * @return {*|Boolean}\r\n         */\r\n        addErrorMessage: function (message) {\r\n            return this.add(message, this.errorMessages);\r\n        },\r\n\r\n        /**\r\n         * Get error messages.\r\n         *\r\n         * @return {Array}\r\n         */\r\n        getErrorMessages: function () {\r\n            return this.errorMessages;\r\n        },\r\n\r\n        /**\r\n         * Get success messages.\r\n         *\r\n         * @return {Array}\r\n         */\r\n        getSuccessMessages: function () {\r\n            return this.successMessages;\r\n        },\r\n\r\n        /**\r\n         * Checks if an instance has stored messages.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        hasMessages: function () {\r\n            return this.errorMessages().length > 0 || this.successMessages().length > 0;\r\n        },\r\n\r\n        /**\r\n         * Removes stored messages.\r\n         */\r\n        clear: function () {\r\n            this.errorMessages.removeAll();\r\n            this.successMessages.removeAll();\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/timeline/timeline-view.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'ko',\r\n    'Magento_Ui/js/lib/view/utils/async',\r\n    'underscore',\r\n    'Magento_Ui/js/lib/view/utils/raf',\r\n    'uiRegistry',\r\n    'uiClass'\r\n], function (ko, $, _, raf, registry, Class) {\r\n    'use strict';\r\n\r\n    var hasClassList = (function () {\r\n        var list = document.createElement('_').classList;\r\n\r\n        return !!list && !list.toggle('_test', false);\r\n    })();\r\n\r\n    /**\r\n     * Polyfill of the 'classList.toggle' method.\r\n     *\r\n     * @param {HTMLElement} elem\r\n     */\r\n    function toggleClass(elem) {\r\n        var classList   = elem.classList,\r\n            args        = Array.prototype.slice.call(arguments, 1),\r\n            $elem;\r\n\r\n        if (hasClassList) {\r\n            classList.toggle.apply(classList, args);\r\n        } else {\r\n            $elem = $(elem);\r\n            $elem.toggleClass.apply($elem, args);\r\n        }\r\n    }\r\n\r\n    return Class.extend({\r\n        defaults: {\r\n            selectors: {\r\n                content: '.timeline-content',\r\n                timeUnit: '.timeline-unit',\r\n                item: '.timeline-item:not([data-role=no-data-msg])',\r\n                event: '.timeline-event'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes TimelineView component.\r\n         *\r\n         * @returns {TimelineView} Chainable.\r\n         */\r\n        initialize: function () {\r\n            _.bindAll(\r\n                this,\r\n                'refresh',\r\n                'initContent',\r\n                'initItem',\r\n                'initTimeUnit',\r\n                'getItemBindings',\r\n                'updateItemsPosition',\r\n                'onScaleChange',\r\n                'onEventElementRender',\r\n                'onWindowResize',\r\n                'onContentScroll',\r\n                'onDataReloaded',\r\n                'onToStartClick',\r\n                'onToEndClick'\r\n            );\r\n\r\n            this._super()\r\n                .initModel()\r\n                .waitContent();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Applies listeners for the model properties changes.\r\n         *\r\n         * @returns {TimelineView} Chainable.\r\n         */\r\n        initModel: function () {\r\n            var model = registry.get(this.model);\r\n\r\n            model.on('scale', this.onScaleChange);\r\n            model.source.on('reloaded', this.onDataReloaded);\r\n\r\n            this.model = model;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Applies DOM watcher for the\r\n         * content element rendering.\r\n         *\r\n         * @returns {TimelineView} Chainable.\r\n         */\r\n        waitContent: function () {\r\n            $.async({\r\n                selector: this.selectors.content,\r\n                component: this.model\r\n            }, this.initContent);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes timelines' content element.\r\n         *\r\n         * @param {HTMLElement} content\r\n         * @returns {TimelineView} Chainable.\r\n         */\r\n        initContent: function (content) {\r\n            this.$content = content;\r\n\r\n            $(content).on('scroll', this.onContentScroll);\r\n            $(window).on('resize', this.onWindowResize);\r\n\r\n            $.async(this.selectors.item, content, this.initItem);\r\n            $.async(this.selectors.event, content, this.onEventElementRender);\r\n            $.async(this.selectors.timeUnit, content, this.initTimeUnit);\r\n\r\n            this.refresh();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes timeline item element,\r\n         * e.g. establishes event listeners and applies data bindings.\r\n         *\r\n         * @param {HTMLElement} elem\r\n         * @returns {TimelineView} Chainable.\r\n         */\r\n        initItem: function (elem) {\r\n            $(elem)\r\n                .bindings(this.getItemBindings)\r\n                .on('click', '._toend', this.onToEndClick)\r\n                .on('click', '._tostart', this.onToStartClick);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes timeline unit element.\r\n         *\r\n         * @param {HTMLElement} elem\r\n         * @returns {TimelineView} Chainable.\r\n         */\r\n        initTimeUnit: function (elem) {\r\n            $(elem).bindings(this.getTimeUnitBindings());\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Updates items positions in a\r\n         * loop if state of a view has changed.\r\n         */\r\n        refresh: function () {\r\n            raf(this.refresh);\r\n\r\n            if (this._update) {\r\n                this._update = false;\r\n\r\n                this.updateItemsPosition();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns object width additional bindings\r\n         * for a timeline unit element.\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        getTimeUnitBindings: function () {\r\n            return {\r\n                style: {\r\n                    width: ko.computed(function () {\r\n                        return this.getTimeUnitWidth() + '%';\r\n                    }.bind(this))\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Returns object with additional\r\n         * bindings for a timeline item element.\r\n         *\r\n         * @param {Object} ctx\r\n         * @returns {Object}\r\n         */\r\n        getItemBindings: function (ctx) {\r\n            return {\r\n                style: {\r\n                    width: ko.computed(function () {\r\n                        return this.getItemWidth(ctx.$row()) + '%';\r\n                    }.bind(this)),\r\n\r\n                    'margin-left': ko.computed(function () {\r\n                        return this.getItemMargin(ctx.$row()) + '%';\r\n                    }.bind(this))\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Calculates width in percents of a timeline unit element.\r\n         *\r\n         * @returns {Number}\r\n         */\r\n        getTimeUnitWidth: function () {\r\n            return 100 / this.model.scale;\r\n        },\r\n\r\n        /**\r\n         * Calculates width of a record in percents.\r\n         *\r\n         * @param {Object} record\r\n         * @returns {String}\r\n         */\r\n        getItemWidth: function (record) {\r\n            var days = 0;\r\n\r\n            if (record) {\r\n                days = this.model.getDaysLength(record);\r\n            }\r\n\r\n            return this.getTimeUnitWidth()  * days;\r\n        },\r\n\r\n        /**\r\n         * Calculates left margin value for provided record.\r\n         *\r\n         * @param {Object} record\r\n         * @returns {String}\r\n         */\r\n        getItemMargin: function (record) {\r\n            var offset = 0;\r\n\r\n            if (record) {\r\n                offset = this.model.getStartDelta(record);\r\n            }\r\n\r\n            return this.getTimeUnitWidth() * offset;\r\n        },\r\n\r\n        /**\r\n         * Returns collection of currently available\r\n         * timeline item elements.\r\n         *\r\n         * @returns {Array<HTMLElement>}\r\n         */\r\n        getItems: function () {\r\n            var items = this.$content.querySelectorAll(this.selectors.item);\r\n\r\n            return _.toArray(items);\r\n        },\r\n\r\n        /**\r\n         * Updates positions of timeline elements.\r\n         *\r\n         * @returns {TimelineView} Chainable.\r\n         */\r\n        updateItemsPosition: function () {\r\n            this.getItems()\r\n                .forEach(this.updatePositionFor, this);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Updates position of provided timeline element.\r\n         *\r\n         * @param {HTMLElement} $elem\r\n         * @returns {TimelineView} Chainable.\r\n         */\r\n        updatePositionFor: function ($elem) {\r\n            var $event      = $elem.querySelector(this.selectors.event),\r\n                leftEdge    = this.getLeftEdgeFor($elem),\r\n                rightEdge   = this.getRightEdgeFor($elem);\r\n\r\n            if ($event) {\r\n                $event.style.left = Math.max(-leftEdge, 0) + 'px';\r\n                $event.style.right = Math.max(rightEdge, 0) + 'px';\r\n            }\r\n\r\n            toggleClass($elem, '_scroll-start', leftEdge < 0);\r\n            toggleClass($elem, '_scroll-end', rightEdge > 0);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Scrolls content area to the start of provided element.\r\n         *\r\n         * @param {HTMLElement} elem\r\n         * @returns {TimelineView}\r\n         */\r\n        toStartOf: function (elem) {\r\n            var leftEdge = this.getLeftEdgeFor(elem);\r\n\r\n            this.$content.scrollLeft += leftEdge;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Scrolls content area to the end of provided element.\r\n         *\r\n         * @param {HTMLElement} elem\r\n         * @returns {TimelineView}\r\n         */\r\n        toEndOf: function (elem) {\r\n            var rightEdge = this.getRightEdgeFor(elem);\r\n\r\n            this.$content.scrollLeft += rightEdge + 1;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Calculates location of the left edge of an element\r\n         * relative to the contents' left edge.\r\n         *\r\n         * @param {HTMLElement} elem\r\n         * @returns {Number}\r\n         */\r\n        getLeftEdgeFor: function (elem) {\r\n            var leftOffset = elem.getBoundingClientRect().left;\r\n\r\n            return leftOffset - this.$content.getBoundingClientRect().left;\r\n        },\r\n\r\n        /**\r\n         * Calculates location of the right edge of an element\r\n         * relative to the contents' right edge.\r\n         *\r\n         * @param {HTMLElement} elem\r\n         * @returns {Number}\r\n         */\r\n        getRightEdgeFor: function (elem) {\r\n            var elemWidth   = elem.offsetWidth,\r\n                leftEdge    = this.getLeftEdgeFor(elem);\r\n\r\n            return leftEdge + elemWidth - this.$content.offsetWidth;\r\n        },\r\n\r\n        /**\r\n         * 'To Start' button 'click' event handler.\r\n         *\r\n         * @param {jQueryEvent} event\r\n         */\r\n        onToStartClick: function (event) {\r\n            var elem = event.originalEvent.currentTarget;\r\n\r\n            event.stopPropagation();\r\n\r\n            this.toStartOf(elem);\r\n        },\r\n\r\n        /**\r\n         * 'To End' button 'click' event handler.\r\n         *\r\n         * @param {jQueryEvent} event\r\n         */\r\n        onToEndClick: function (event) {\r\n            var elem = event.originalEvent.currentTarget;\r\n\r\n            event.stopPropagation();\r\n\r\n            this.toEndOf(elem);\r\n        },\r\n\r\n        /**\r\n         * Handler of the scale value 'change' event.\r\n         */\r\n        onScaleChange: function () {\r\n            this._update = true;\r\n        },\r\n\r\n        /**\r\n         * Callback function which is invoked\r\n         * when event element was rendered.\r\n         */\r\n        onEventElementRender: function () {\r\n            this._update = true;\r\n        },\r\n\r\n        /**\r\n         * Window 'resize' event handler.\r\n         */\r\n        onWindowResize: function () {\r\n            this._update = true;\r\n        },\r\n\r\n        /**\r\n         * Content container 'scroll' event handler.\r\n         */\r\n        onContentScroll: function () {\r\n            this._update = true;\r\n        },\r\n\r\n        /**\r\n         * Data 'reload' event handler.\r\n         */\r\n        onDataReloaded: function () {\r\n            this._update = true;\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/timeline/timeline.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'underscore',\r\n    'moment',\r\n    'uiLayout',\r\n    'Magento_Ui/js/grid/listing'\r\n], function (_, moment, layout, Listing) {\r\n    'use strict';\r\n\r\n    var ONE_DAY = 86400000;\r\n\r\n    return Listing.extend({\r\n        defaults: {\r\n            recordTmpl: 'ui/timeline/record',\r\n            dateFormat: 'YYYY-MM-DD HH:mm:ss',\r\n            headerFormat: 'ddd MM/DD',\r\n            detailsFormat: 'DD/MM/YYYY HH:mm:ss',\r\n            scale: 7,\r\n            scaleStep: 1,\r\n            minScale: 7,\r\n            maxScale: 28,\r\n            minDays: 28,\r\n            displayMode: 'timeline',\r\n            displayModes: {\r\n                timeline: {\r\n                    label: 'Timeline',\r\n                    value: 'timeline',\r\n                    template: 'ui/timeline/timeline'\r\n                }\r\n            },\r\n            viewConfig: {\r\n                component: 'Magento_Ui/js/timeline/timeline-view',\r\n                name: '${ $.name }_view',\r\n                model: '${ $.name }'\r\n            },\r\n            tracks: {\r\n                scale: true\r\n            },\r\n            statefull: {\r\n                scale: true\r\n            },\r\n            range: {}\r\n        },\r\n\r\n        /**\r\n         * Initializes Timeline component.\r\n         *\r\n         * @returns {Timeline} Chainable.\r\n         */\r\n        initialize: function () {\r\n            this._super()\r\n                .initView()\r\n                .updateRange();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes components configuration.\r\n         *\r\n         * @returns {Timeline} Chainable.\r\n         */\r\n        initConfig: function () {\r\n            this._super();\r\n\r\n            this.maxScale = Math.min(this.minDays, this.maxScale);\r\n            this.minScale = Math.min(this.maxScale, this.minScale);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties.\r\n         *\r\n         * @returns {Timeline} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe.call(this.range, true, 'hasToday');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes TimelineView component.\r\n         *\r\n         * @returns {Timeline} Chainable.\r\n         */\r\n        initView: function () {\r\n            layout([this.viewConfig]);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if provided event record is active,\r\n         * i.e. it has already started.\r\n         *\r\n         * @param {Object} record\r\n         * @returns {Boolean}\r\n         */\r\n        isActive: function (record) {\r\n            return Number(record.status) === 1;\r\n        },\r\n\r\n        /**\r\n         * Checks if provided event record is upcoming,\r\n         * i.e. it will start later on.\r\n         *\r\n         * @param {Object} record\r\n         * @returns {Boolean}\r\n         */\r\n        isUpcoming: function (record) {\r\n            return Number(record.status) === 2;\r\n        },\r\n\r\n        /**\r\n         * Checks if provided event record is permanent,\r\n         * i.e. it has no ending time.\r\n         *\r\n         * @param {Object} record\r\n         * @returns {Boolean}\r\n         */\r\n        isPermanent: function (record) {\r\n            return !this.getEndDate(record);\r\n        },\r\n\r\n        /**\r\n         * Checks if provided date indicates current day.\r\n         *\r\n         * @param {(Number|Moment)} date\r\n         * @returns {Boolenan}\r\n         */\r\n        isToday: function (date) {\r\n            return moment().isSame(date, 'day');\r\n        },\r\n\r\n        /**\r\n         * Checks if range object contains todays date.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        hasToday: function () {\r\n            return this.range.hasToday;\r\n        },\r\n\r\n        /**\r\n         * Returns start date of provided record.\r\n         *\r\n         * @param {Object} record\r\n         * @returns {String}\r\n         */\r\n        getStartDate: function (record) {\r\n            return record['start_time'];\r\n        },\r\n\r\n        /**\r\n         * Returns end date of provided record.\r\n         *\r\n         * @param {Object} record\r\n         * @returns {String}\r\n         */\r\n        getEndDate: function (record) {\r\n            return record['end_time'];\r\n        },\r\n\r\n        /**\r\n         * Returns difference in days between records' start date\r\n         * and a first day of a range.\r\n         *\r\n         * @param {Object} record\r\n         * @returns {Number}\r\n         */\r\n        getStartDelta: function (record) {\r\n            var start    = this.createDate(this.getStartDate(record)),\r\n                firstDay = this.range.firstDay;\r\n\r\n            return start.diff(firstDay, 'days', true);\r\n        },\r\n\r\n        /**\r\n         * Calculates the amount of days that provided event lasts.\r\n         *\r\n         * @param {Object} record\r\n         * @returns {Number}\r\n         */\r\n        getDaysLength: function (record) {\r\n            var start   = this.createDate(this.getStartDate(record)),\r\n                end     = this.createDate(this.getEndDate(record));\r\n\r\n            if (!end.isValid()) {\r\n                end = this.range.lastDay.endOf('day');\r\n            }\r\n\r\n            return end.diff(start, 'days', true);\r\n        },\r\n\r\n        /**\r\n         * Creates new date object based on provided date string value.\r\n         *\r\n         * @param {String} dateStr\r\n         * @returns {Moment}\r\n         */\r\n        createDate: function (dateStr) {\r\n            return moment(dateStr, this.dateFormat);\r\n        },\r\n\r\n        /**\r\n         * Converts days to weeks.\r\n         *\r\n         * @param {Number} days\r\n         * @returns {Number}\r\n         */\r\n        daysToWeeks: function (days) {\r\n            var weeks = days / 7;\r\n\r\n            if (weeks % 1) {\r\n                weeks = weeks.toFixed(1);\r\n            }\r\n\r\n            return weeks;\r\n        },\r\n\r\n        /**\r\n         * Updates data of a range object,\r\n         * e.g. total days, first day and last day, etc.\r\n         *\r\n         * @returns {Object} Range instance.\r\n         */\r\n        updateRange: function () {\r\n            var firstDay    = this._getFirstDay(),\r\n                lastDay     = this._getLastDay(),\r\n                totalDays   = lastDay.diff(firstDay, 'days'),\r\n                days        = [],\r\n                i           = -1;\r\n\r\n            if (totalDays < this.minDays) {\r\n                totalDays += this.minDays - totalDays - 1;\r\n            }\r\n\r\n            while (++i <= totalDays) {\r\n                days.push(+firstDay + ONE_DAY * i);\r\n            }\r\n\r\n            return _.extend(this.range, {\r\n                days:       days,\r\n                totalDays:  totalDays,\r\n                firstDay:   firstDay,\r\n                lastDay:    moment(_.last(days)),\r\n                hasToday:   this.isToday(firstDay)\r\n            });\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @private\r\n         * @param {String} key\r\n         * @returns {Array<Moment>}\r\n         */\r\n        _getDates: function (key) {\r\n            var dates = [];\r\n\r\n            this.rows.forEach(function (record) {\r\n                if (record[key]) {\r\n                    dates.push(this.createDate(record[key]));\r\n                }\r\n            }, this);\r\n\r\n            return dates;\r\n        },\r\n\r\n        /**\r\n         * Returns date which is closest to the current day.\r\n         *\r\n         * @private\r\n         * @returns {Moment}\r\n         */\r\n        _getFirstDay: function () {\r\n            var dates = this._getDates('start_time'),\r\n                first = moment.min(dates).subtract(1, 'day'),\r\n                today = moment();\r\n\r\n            if (!first.isValid() || first < today) {\r\n                first = today;\r\n            }\r\n\r\n            return first.startOf('day');\r\n        },\r\n\r\n        /**\r\n         * Returns the most distant date\r\n         * specified in available records.\r\n         *\r\n         * @private\r\n         * @returns {Moment}\r\n         */\r\n        _getLastDay: function () {\r\n            var startDates  = this._getDates('start_time'),\r\n                endDates    = this._getDates('end_time'),\r\n                last        = moment.max(startDates.concat(endDates));\r\n\r\n            return last.add(1, 'day').startOf('day');\r\n        },\r\n\r\n        /**\r\n         * TODO: remove after integration with date binding.\r\n         *\r\n         * @param {Number} timestamp\r\n         * @returns {String}\r\n         */\r\n        formatHeader: function (timestamp) {\r\n            return moment(timestamp).format(this.headerFormat);\r\n        },\r\n\r\n        /**\r\n         * TODO: remove after integration with date binding.\r\n         *\r\n         * @param {String} date\r\n         * @returns {String}\r\n         */\r\n        formatDetails: function (date) {\r\n            return moment(date).format(this.detailsFormat);\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/view/messages.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'ko',\r\n    'jquery',\r\n    'uiComponent',\r\n    '../model/messageList',\r\n    'jquery-ui-modules/effect-blind'\r\n], function (ko, $, Component, globalMessages) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Ui/messages',\r\n            selector: '[data-role=checkout-messages]',\r\n            isHidden: false,\r\n            hideTimeout: 5000,\r\n            hideSpeed: 500,\r\n            listens: {\r\n                isHidden: 'onHiddenChange'\r\n            }\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initialize: function (config, messageContainer) {\r\n            this._super()\r\n                .initObservable();\r\n\r\n            this.messageContainer = messageContainer || config.messageContainer || globalMessages;\r\n\r\n            return this;\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        initObservable: function () {\r\n            this._super()\r\n                .observe('isHidden');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks visibility.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        isVisible: function () {\r\n            return this.isHidden(this.messageContainer.hasMessages());\r\n        },\r\n\r\n        /**\r\n         * Remove all messages.\r\n         */\r\n        removeAll: function () {\r\n            this.messageContainer.clear();\r\n        },\r\n\r\n        /**\r\n         * @param {Boolean} isHidden\r\n         */\r\n        onHiddenChange: function (isHidden) {\r\n            // Hide message block if needed\r\n            if (isHidden) {\r\n                setTimeout(function () {\r\n                    $(this.selector).hide('slow');\r\n\r\n                    //commented because effect-blind.js(1.13.1) is having show & hide issue\r\n                    // $(this.selector).hide('blind', {}, this.hideSpeed);\r\n                }.bind(this), this.hideTimeout);\r\n            }\r\n        }\r\n    });\r\n});\r\n","Magento_Ups/js/model/shipping-rates-validation-rules.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return {\r\n        /**\r\n         * @return {Object}\r\n         */\r\n        getRules: function () {\r\n            return {\r\n                'postcode': {\r\n                    'required': true\r\n                },\r\n                'country_id': {\r\n                    'required': true\r\n                }\r\n            };\r\n        }\r\n    };\r\n});\r\n","Magento_Ups/js/model/shipping-rates-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mageUtils',\r\n    'Magento_Ups/js/model/shipping-rates-validation-rules',\r\n    'mage/translate'\r\n], function ($, utils, validationRules, $t) {\r\n    'use strict';\r\n\r\n    return {\r\n        validationErrors: [],\r\n\r\n        /**\r\n         * @param {Object} address\r\n         * @return {Boolean}\r\n         */\r\n        validate: function (address) {\r\n            var self = this;\r\n\r\n            this.validationErrors = [];\r\n            $.each(validationRules.getRules(), function (field, rule) {\r\n                var message;\r\n\r\n                if (rule.required && utils.isEmpty(address[field])) {\r\n                    message = $t('Field ') + field + $t(' is required.');\r\n                    self.validationErrors.push(message);\r\n                }\r\n            });\r\n\r\n            return !this.validationErrors.length;\r\n        }\r\n    };\r\n});\r\n","Magento_Ups/js/view/shipping-rates-validation.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/shipping-rates-validator',\r\n    'Magento_Checkout/js/model/shipping-rates-validation-rules',\r\n    'Magento_Ups/js/model/shipping-rates-validator',\r\n    'Magento_Ups/js/model/shipping-rates-validation-rules'\r\n], function (\r\n    Component,\r\n    defaultShippingRatesValidator,\r\n    defaultShippingRatesValidationRules,\r\n    upsShippingRatesValidator,\r\n    upsShippingRatesValidationRules\r\n) {\r\n    'use strict';\r\n\r\n    defaultShippingRatesValidator.registerValidator('ups', upsShippingRatesValidator);\r\n    defaultShippingRatesValidationRules.registerRules('ups', upsShippingRatesValidationRules);\r\n\r\n    return Component;\r\n});\r\n","Magento_Usps/js/model/shipping-rates-validation-rules.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([], function () {\r\n    'use strict';\r\n\r\n    return {\r\n        /**\r\n         * @return {Object}\r\n         */\r\n        getRules: function () {\r\n            return {\r\n                'country_id': {\r\n                    'required': true\r\n                },\r\n                'postcode': {\r\n                    'required': false\r\n                }\r\n            };\r\n        }\r\n    };\r\n});\r\n","Magento_Usps/js/model/shipping-rates-validator.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mageUtils',\r\n    './shipping-rates-validation-rules',\r\n    'mage/translate'\r\n], function ($, utils, validationRules, $t) {\r\n    'use strict';\r\n\r\n    var checkoutConfig = window.checkoutConfig;\r\n\r\n    return {\r\n        validationErrors: [],\r\n\r\n        /**\r\n         * @param {Object} address\r\n         * @return {Boolean}\r\n         */\r\n        validate: function (address) {\r\n            var rules = validationRules.getRules(),\r\n                self = this;\r\n\r\n            $.each(rules, function (field, rule) {\r\n                var message;\r\n\r\n                if (rule.required && utils.isEmpty(address[field])) {\r\n                    message = $t('Field ') + field + $t(' is required.');\r\n                    self.validationErrors.push(message);\r\n                }\r\n            });\r\n\r\n            if (!this.validationErrors.length) {\r\n                if (address['country_id'] == checkoutConfig.originCountryCode) { //eslint-disable-line eqeqeq\r\n                    return !utils.isEmpty(address.postcode);\r\n                }\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n    };\r\n});\r\n","Magento_Usps/js/view/shipping-rates-validation.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/shipping-rates-validator',\r\n    'Magento_Checkout/js/model/shipping-rates-validation-rules',\r\n    '../model/shipping-rates-validator',\r\n    '../model/shipping-rates-validation-rules'\r\n], function (\r\n    Component,\r\n    defaultShippingRatesValidator,\r\n    defaultShippingRatesValidationRules,\r\n    uspsShippingRatesValidator,\r\n    uspsShippingRatesValidationRules\r\n) {\r\n    'use strict';\r\n\r\n    defaultShippingRatesValidator.registerValidator('usps', uspsShippingRatesValidator);\r\n    defaultShippingRatesValidationRules.registerRules('usps', uspsShippingRatesValidationRules);\r\n\r\n    return Component;\r\n});\r\n","Magento_Variable/js/grid/columns/radioselect.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'underscore',\r\n    'mage/translate',\r\n    'Magento_Ui/js/grid/columns/column',\r\n    'jquery'\r\n], function (_, $t, Column, jQuery) {\r\n    'use strict';\r\n\r\n    return Column.extend({\r\n        defaults: {\r\n            bodyTmpl: 'Magento_Variable/grid/cells/radioselect',\r\n            draggable: false,\r\n            sortable: false,\r\n            selectedVariableCode: null,\r\n            selectedVariableType: null\r\n        },\r\n\r\n        /**\r\n         * Calls 'initObservable' of parent\r\n         *\r\n         * @returns {Object} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super().observe(['selectedVariableCode']);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Remove disable class from Insert Variable button after Variable has been chosen.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        selectVariable: function () {\r\n            if (jQuery('#insert_variable').hasClass('disabled')) {\r\n                jQuery('#insert_variable').removeClass('disabled');\r\n            }\r\n\r\n            return true;\r\n        }\r\n    });\r\n});\r\n","Magento_Vault/js/customer_account/deleteWidget.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Ui/js/modal/modalToggle',\r\n    'mage/translate'\r\n], function ($, modalToggle) {\r\n    'use strict';\r\n\r\n    return function (config, deleteButton) {\r\n        config.buttons = [\r\n            {\r\n                text: $.mage.__('Cancel'),\r\n                class: 'action secondary cancel'\r\n            }, {\r\n                text: $.mage.__('Delete'),\r\n                class: 'action primary',\r\n\r\n                /**\r\n                 * Default action on button click\r\n                 */\r\n                click: function (event) { //eslint-disable-line no-unused-vars\r\n                    $(deleteButton.form).trigger('submit');\r\n                }\r\n            }\r\n        ];\r\n\r\n        modalToggle(config, deleteButton);\r\n    };\r\n});\r\n","Magento_Vault/js/view/payment/vault-enabler.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n\r\n/* @api */\r\ndefine(\r\n    [\r\n        'uiElement'\r\n    ],\r\n    function (\r\n        Component\r\n    ) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n            defaults: {\r\n                isActivePaymentTokenEnabler: true\r\n            },\r\n\r\n            /**\r\n             * @param {String} paymentCode\r\n             */\r\n            setPaymentCode: function (paymentCode) {\r\n                this.paymentCode = paymentCode;\r\n            },\r\n\r\n            /**\r\n             * @returns {Object}\r\n             */\r\n            initObservable: function () {\r\n                this._super()\r\n                    .observe([\r\n                        'isActivePaymentTokenEnabler'\r\n                    ]);\r\n\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * @param {Object} data\r\n             */\r\n            visitAdditionalData: function (data) {\r\n                if (!this.isVaultEnabled()) {\r\n                    return;\r\n                }\r\n\r\n                if (!('additional_data' in data)) {\r\n                    data['additional_data'] = {};\r\n                }\r\n\r\n                data['additional_data']['is_active_payment_token_enabler'] = this.isActivePaymentTokenEnabler();\r\n            },\r\n\r\n            /**\r\n             * @returns {Boolean}\r\n             */\r\n            isVaultEnabled: function () {\r\n                return typeof window.checkoutConfig.vault[this.paymentCode] !== 'undefined' &&\r\n                    window.checkoutConfig.vault[this.paymentCode]['is_enabled'] === true;\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Vault/js/view/payment/vault.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n\r\n/* @api */\r\ndefine([\r\n    'underscore',\r\n    'uiComponent',\r\n    'Magento_Checkout/js/model/payment/renderer-list',\r\n    'uiLayout',\r\n    'uiRegistry'\r\n], function (_, Component, rendererList, layout, registry) {\r\n    'use strict';\r\n\r\n    var vaultGroupName = 'vaultGroup';\r\n\r\n    layout([{\r\n        name: vaultGroupName,\r\n        component: 'Magento_Checkout/js/model/payment/method-group',\r\n        alias: 'vault',\r\n        sortOrder: 10\r\n    }]);\r\n\r\n    registry.get(vaultGroupName, function (vaultGroup) {\r\n        _.each(window.checkoutConfig.payment.vault, function (config, index) {\r\n            rendererList.push(\r\n                {\r\n                    type: index,\r\n                    config: config.config,\r\n                    component: config.component,\r\n                    group: vaultGroup,\r\n\r\n                    /**\r\n                     * Custom payment method types comparator\r\n                     * @param {String} typeA\r\n                     * @param {String} typeB\r\n                     * @return {Boolean}\r\n                     */\r\n                    typeComparatorCallback: function (typeA, typeB) {\r\n                        // vault token items have the same name as vault payment without index\r\n                        return typeA.substring(0, typeA.lastIndexOf('_')) === typeB;\r\n                    }\r\n                }\r\n            );\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Add view logic here if needed\r\n     */\r\n    return Component.extend({});\r\n});\r\n","Magento_Vault/js/view/payment/method-renderer/vault.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n/*browser:true*/\r\n\r\ndefine(\r\n    [\r\n        'Magento_Checkout/js/view/payment/default',\r\n        'Magento_Checkout/js/action/select-payment-method',\r\n        'Magento_Checkout/js/checkout-data'\r\n    ],\r\n    function (Component, selectPaymentMethod, checkoutData) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Magento_Vault/payment/form'\r\n            },\r\n\r\n            /**\r\n             * @returns {exports.initObservable}\r\n             */\r\n            initObservable: function () {\r\n                this._super()\r\n                    .observe([]);\r\n\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * @returns\r\n             */\r\n            selectPaymentMethod: function () {\r\n                selectPaymentMethod(\r\n                    {\r\n                        method: this.getId()\r\n                    }\r\n                );\r\n                checkoutData.setSelectedPaymentMethod(this.getId());\r\n\r\n                return true;\r\n            },\r\n\r\n            /**\r\n             * @returns {String}\r\n             */\r\n            getTitle: function () {\r\n                return '';\r\n            },\r\n\r\n            /**\r\n             * @returns {String}\r\n             */\r\n            getToken: function () {\r\n                return '';\r\n            },\r\n\r\n            /**\r\n             * @returns {String}\r\n             */\r\n            getId: function () {\r\n                return this.index;\r\n            },\r\n\r\n            /**\r\n             * @returns {String}\r\n             */\r\n            getCode: function () {\r\n                return this.code;\r\n            },\r\n\r\n            /**\r\n             * Get last 4 digits of card\r\n             * @returns {String}\r\n             */\r\n            getMaskedCard: function () {\r\n                return '';\r\n            },\r\n\r\n            /**\r\n             * Get expiration date\r\n             * @returns {String}\r\n             */\r\n            getExpirationDate: function () {\r\n                return '';\r\n            },\r\n\r\n            /**\r\n             * Get card type\r\n             * @returns {String}\r\n             */\r\n            getCardType: function () {\r\n                return '';\r\n            },\r\n\r\n            /**\r\n             * @param {String} type\r\n             * @returns {Boolean}\r\n             */\r\n            getIcons: function (type) {\r\n                return window.checkoutConfig.payment.ccform.icons.hasOwnProperty(type) ?\r\n                    window.checkoutConfig.payment.ccform.icons[type]\r\n                    : false;\r\n            },\r\n\r\n            /**\r\n             * Return state of place order button.\r\n             *\r\n             * @return {Boolean}\r\n             */\r\n            isButtonActive: function () {\r\n                return this.isActive() && this.isPlaceOrderActionAllowed();\r\n            },\r\n\r\n            /**\r\n             * Check if payment is active.\r\n             *\r\n             * @return {Boolean}\r\n             */\r\n            isActive: function () {\r\n                return this.isChecked() === this.getId();\r\n            },\r\n\r\n            /**\r\n             * @returns {*}\r\n             */\r\n            getData: function () {\r\n                var data = {\r\n                    method: this.getCode()\r\n                };\r\n\r\n                data['additional_data'] = {};\r\n                data['additional_data']['public_hash'] = this.getToken();\r\n\r\n                return data;\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magento_Weee/js/tax-toggle.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * @param {Object} config\r\n     * @param {jQuery.Event} e\r\n     */\r\n    function onToggle(config, e) {\r\n        var elem = $(e.currentTarget),\r\n            expandedClassName = config.expandedClassName || 'cart-tax-total-expanded';\r\n\r\n        elem.toggleClass(expandedClassName);\r\n\r\n        $(config.itemTaxId).toggle();\r\n    }\r\n\r\n    return function (data, el) {\r\n        $(el).on('click', onToggle.bind(null, data));\r\n    };\r\n});\r\n","Magento_Weee/js/price/adjustment.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\ndefine([\r\n    'Magento_Ui/js/grid/columns/column'\r\n], function (Element) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            bodyTmpl: 'Magento_Weee/price/adjustment',\r\n            dataSource: '${ $.parentName }.provider',\r\n            //Weee configuration constants can be configured from backend\r\n            inclFptWithDesc: 1,//show FPT and description\r\n            inclFpt: 0, //show FPT attribute\r\n            exclFpt: 2, //do not show FPT\r\n            bothFptPrices: 3 //show price without FPT and with FPT and with description\r\n        },\r\n\r\n        /**\r\n         * Get Weee attributes.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} Weee html\r\n         */\r\n        getWeeeAttributes: function (row) {\r\n            return row['price_info']['extension_attributes']['weee_attributes'];\r\n        },\r\n\r\n        /**\r\n         * Get Weee without Tax attributes.\r\n         *\r\n         * @param {Object} taxAmount\r\n         * @return {HTMLElement} Weee html\r\n         */\r\n        getWeeeTaxWithoutTax: function (taxAmount) {\r\n            return taxAmount['amount_excl_tax'];\r\n        },\r\n\r\n        /**\r\n         * UnsanitizedHtml version of getWeeeTaxWithoutTax.\r\n         *\r\n         * @param {Object} taxAmount\r\n         * @return {HTMLElement} Weee html\r\n         */\r\n        getWeeeTaxWithoutTaxUnsanitizedHtml: function (taxAmount) {\r\n            return this.getWeeeTaxWithoutTax(taxAmount);\r\n        },\r\n\r\n        /**\r\n         * Get Weee with Tax attributes.\r\n         *\r\n         * @param {Object} taxAmount\r\n         * @return {HTMLElement} Weee html\r\n         */\r\n        getWeeeTaxWithTax: function (taxAmount) {\r\n            return taxAmount['tax_amount_incl_tax'];\r\n        },\r\n\r\n        /**\r\n         * UnsanitizedHtml version of getWeeeTaxWithTax.\r\n         *\r\n         * @param {Object} taxAmount\r\n         * @return {HTMLElement} Weee html\r\n         */\r\n        getWeeeTaxWithTaxUnsanitizedHtml: function (taxAmount) {\r\n            return this.getWeeeTaxWithTax(taxAmount);\r\n        },\r\n\r\n        /**\r\n         * Get Weee Tax name.\r\n         *\r\n         * @param {String} taxAmount\r\n         * @return {String} Weee name\r\n         */\r\n        getWeeTaxAttributeName: function (taxAmount) {\r\n            return taxAmount['attribute_code'];\r\n        },\r\n\r\n        /**\r\n         * Set price type.\r\n         *\r\n         * @param {String} priceType\r\n         * @return {Object}\r\n         */\r\n        setPriceType: function (priceType) {\r\n            this.taxPriceType = priceType;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Check if Weee Tax must be shown.\r\n         *\r\n         * @param {Object} row\r\n         * @return {Boolean}\r\n         */\r\n        isShown: function (row) {\r\n            return row['price_info']['extension_attributes']['weee_attributes'].length;\r\n        },\r\n\r\n        /**\r\n         * Get Weee final price.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} Weee final price html\r\n         */\r\n        getWeeeAdjustment: function (row) {\r\n            return row['price_info']['extension_attributes']['weee_adjustment'];\r\n        },\r\n\r\n        /**\r\n         * UnsanitizedHtml version of getWeeeAdjustment.\r\n         *\r\n         * @param {Object} row\r\n         * @return {HTMLElement} Weee final price html\r\n         */\r\n        getWeeeAdjustmentUnsanitizedHtml: function (row) {\r\n            return this.getWeeeAdjustment(row);\r\n        },\r\n\r\n        /**\r\n         * Return whether display setting is to display price including FPT only.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        displayPriceInclFpt: function () {\r\n            return +this.source.data.displayWeee === this.inclFpt;\r\n        },\r\n\r\n        /**\r\n         * Return whether display setting is to display\r\n         * price including FPT and FPT description.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        displayPriceInclFptDescr: function () {\r\n            return +this.source.data.displayWeee === this.inclFptWithDesc;\r\n        },\r\n\r\n        /**\r\n         * Return whether display setting is to display price\r\n         * excluding FPT but including FPT description and final price.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        displayPriceExclFptDescr: function () {\r\n            return +this.source.data.displayWeee === this.exclFpt;\r\n        },\r\n\r\n        /**\r\n         * Return whether display setting is to display price excluding FPT.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        displayPriceExclFpt: function () {\r\n            return +this.source.data.displayWeee === this.bothFptPrices;\r\n        },\r\n\r\n        /**\r\n         * Return whether display setting is to display price excluding tax.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        displayPriceExclTax: function () {\r\n            return +this.source.data.displayTaxes === this.inclFptWithDesc;\r\n        },\r\n\r\n        /**\r\n         * Return whether display setting is to display price including tax.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        displayPriceInclTax: function () {\r\n            return +this.source.data.displayTaxes === this.exclFpt;\r\n        },\r\n\r\n        /**\r\n         * Return whether display setting is to display\r\n         * both price including tax and price excluding tax.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        displayBothPricesTax: function () {\r\n            return +this.source.data.displayTaxes === this.bothFptPrices;\r\n        }\r\n    });\r\n});\r\n","Magento_Weee/js/view/cart/totals/weee.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Weee/js/view/checkout/summary/weee'\r\n], function (Component) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n\r\n        /**\r\n         * @override\r\n         */\r\n        isFullMode: function () {\r\n            return true;\r\n        }\r\n    });\r\n});\r\n","Magento_Weee/js/view/checkout/summary/weee.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\n\r\ndefine([\r\n    'Magento_Checkout/js/view/summary/abstract-total',\r\n    'Magento_Checkout/js/model/quote',\r\n    'Magento_Checkout/js/model/totals',\r\n    'Magento_Catalog/js/price-utils'\r\n], function (Component, quote, totals) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        defaults: {\r\n            template: 'Magento_Weee/checkout/summary/weee'\r\n        },\r\n        isIncludedInSubtotal: window.checkoutConfig.isIncludedInSubtotal,\r\n        totals: totals.totals,\r\n\r\n        /**\r\n         * @returns {Number}\r\n         */\r\n        getWeeeTaxSegment: function () {\r\n            var weee = totals.getSegment('weee_tax') || totals.getSegment('weee');\r\n\r\n            if (weee !== null && weee.hasOwnProperty('value')) {\r\n                return weee.value;\r\n            }\r\n\r\n            return 0;\r\n        },\r\n\r\n        /**\r\n         * Get weee value\r\n         * @returns {String}\r\n         */\r\n        getValue: function () {\r\n            return this.getFormattedPrice(this.getWeeeTaxSegment());\r\n        },\r\n\r\n        /**\r\n         * Weee display flag\r\n         * @returns {Boolean}\r\n         */\r\n        isDisplayed: function () {\r\n            return this.isFullMode() && this.getWeeeTaxSegment() > 0;\r\n        }\r\n    });\r\n});\r\n","Magento_Weee/js/view/checkout/summary/item/price/row_excl_tax.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\n\r\ndefine([\r\n    'Magento_Weee/js/view/checkout/summary/item/price/weee'\r\n], function (weee) {\r\n    'use strict';\r\n\r\n    return weee.extend({\r\n        defaults: {\r\n            template: 'Magento_Weee/checkout/summary/item/price/row_excl_tax'\r\n        },\r\n\r\n        /**\r\n         * @param {Object} item\r\n         * @return {Number}\r\n         */\r\n        getFinalRowDisplayPriceExclTax: function (item) {\r\n            var rowTotalExclTax = parseFloat(item['row_total']);\r\n\r\n            if (!window.checkoutConfig.getIncludeWeeeFlag) {\r\n                rowTotalExclTax += parseFloat(item['qty']) *\r\n                    parseFloat(item['weee_tax_applied_amount']);\r\n            }\r\n\r\n            return rowTotalExclTax;\r\n        },\r\n\r\n        /**\r\n         * @param {Object} item\r\n         * @return {Number}\r\n         */\r\n        getRowDisplayPriceExclTax: function (item) {\r\n            var rowTotalExclTax = parseFloat(item['row_total']);\r\n\r\n            if (window.checkoutConfig.getIncludeWeeeFlag) {\r\n                rowTotalExclTax += this.getRowWeeeTaxExclTax(item);\r\n            }\r\n\r\n            return rowTotalExclTax;\r\n        },\r\n\r\n        /**\r\n         * @param {Object} item\r\n         * @return {Number}\r\n         */\r\n        getRowWeeeTaxExclTax: function (item) {\r\n            var totalWeeeTaxExclTaxApplied = 0,\r\n                weeeTaxAppliedAmounts;\r\n\r\n            if (item['weee_tax_applied']) {\r\n                weeeTaxAppliedAmounts = JSON.parse(item['weee_tax_applied']);\r\n                weeeTaxAppliedAmounts.forEach(function (weeeTaxAppliedAmount) {\r\n                    totalWeeeTaxExclTaxApplied += parseFloat(Math.max(weeeTaxAppliedAmount['row_amount'], 0));\r\n                });\r\n            }\r\n\r\n            return totalWeeeTaxExclTaxApplied;\r\n        }\r\n\r\n    });\r\n});\r\n","Magento_Weee/js/view/checkout/summary/item/price/row_incl_tax.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\n\r\ndefine([\r\n    'Magento_Weee/js/view/checkout/summary/item/price/weee'\r\n], function (weee) {\r\n    'use strict';\r\n\r\n    return weee.extend({\r\n        defaults: {\r\n            template: 'Magento_Weee/checkout/summary/item/price/row_incl_tax',\r\n            displayArea: 'row_incl_tax'\r\n        },\r\n\r\n        /**\r\n         * @param {Object} item\r\n         * @return {Number}\r\n         */\r\n        getFinalRowDisplayPriceInclTax: function (item) {\r\n            var rowTotalInclTax = parseFloat(item['row_total_incl_tax']);\r\n\r\n            if (!window.checkoutConfig.getIncludeWeeeFlag) {\r\n                rowTotalInclTax += this.getRowWeeeTaxInclTax(item);\r\n            }\r\n\r\n            return rowTotalInclTax;\r\n        },\r\n\r\n        /**\r\n         * @param {Object} item\r\n         * @return {Number}\r\n         */\r\n        getRowDisplayPriceInclTax: function (item) {\r\n            var rowTotalInclTax = parseFloat(item['row_total_incl_tax']);\r\n\r\n            if (window.checkoutConfig.getIncludeWeeeFlag) {\r\n                rowTotalInclTax += this.getRowWeeeTaxInclTax(item);\r\n            }\r\n\r\n            return rowTotalInclTax;\r\n        },\r\n\r\n        /**\r\n         * @param {Object}item\r\n         * @return {Number}\r\n         */\r\n        getRowWeeeTaxInclTax: function (item) {\r\n            var totalWeeeTaxInclTaxApplied = 0,\r\n                weeeTaxAppliedAmounts;\r\n\r\n            if (item['weee_tax_applied']) {\r\n                weeeTaxAppliedAmounts = JSON.parse(item['weee_tax_applied']);\r\n                weeeTaxAppliedAmounts.forEach(function (weeeTaxAppliedAmount) {\r\n                    totalWeeeTaxInclTaxApplied += parseFloat(Math.max(weeeTaxAppliedAmount['row_amount_incl_tax'], 0));\r\n                });\r\n            }\r\n\r\n            return totalWeeeTaxInclTaxApplied;\r\n        }\r\n\r\n    });\r\n});\r\n","Magento_Weee/js/view/checkout/summary/item/price/weee.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\n\r\ndefine([\r\n    'Magento_Checkout/js/view/summary/abstract-total',\r\n    'Magento_Checkout/js/model/quote'\r\n], function (Component) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        /**\r\n         * @param {Object} item\r\n         * @return {Boolean}\r\n         */\r\n        isDisplayPriceWithWeeeDetails: function (item) {\r\n            if (!parseFloat(item['weee_tax_applied_amount']) || parseFloat(item['weee_tax_applied_amount'] <= 0)) {\r\n                return false;\r\n            }\r\n\r\n            return window.checkoutConfig.isDisplayPriceWithWeeeDetails;\r\n        },\r\n\r\n        /**\r\n         * @param {Object} item\r\n         * @return {Boolean}\r\n         */\r\n        isDisplayFinalPrice: function (item) {\r\n            if (!parseFloat(item['weee_tax_applied_amount'])) {\r\n                return false;\r\n            }\r\n\r\n            return window.checkoutConfig.isDisplayFinalPrice;\r\n        },\r\n\r\n        /**\r\n         * @param {Object} item\r\n         * @return {Array}\r\n         */\r\n        getWeeeTaxApplied: function (item) {\r\n            if (item['weee_tax_applied']) {\r\n                return JSON.parse(item['weee_tax_applied']);\r\n            }\r\n\r\n            return [];\r\n        }\r\n    });\r\n});\r\n","Magento_Wishlist/js/add-to-wishlist.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.addToWishlist', {\r\n        options: {\r\n            bundleInfo: 'div.control [name^=bundle_option]',\r\n            configurableInfo: '.super-attribute-select',\r\n            groupedInfo: '#super-product-table input',\r\n            downloadableInfo: '#downloadable-links-list input',\r\n            customOptionsInfo: '.product-custom-option',\r\n            qtyInfo: '#qty',\r\n            actionElement: '[data-action=\"add-to-wishlist\"]',\r\n            productListWrapper: '.product-item-info',\r\n            productPageWrapper: '.product-info-main'\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            this._bind();\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _bind: function () {\r\n            var options = this.options,\r\n                dataUpdateFunc = '_updateWishlistData',\r\n                validateProductQty = '_validateWishlistQty',\r\n                changeCustomOption = 'change ' + options.customOptionsInfo,\r\n                changeQty = 'change ' + options.qtyInfo,\r\n                updateWishlist = 'click ' + options.actionElement,\r\n                events = {},\r\n                key;\r\n\r\n            if ('productType' in options) {\r\n                if (typeof options.productType === 'string') {\r\n                    options.productType = [options.productType];\r\n                }\r\n            } else {\r\n                options.productType = [];\r\n            }\r\n\r\n            events[changeCustomOption] = dataUpdateFunc;\r\n            events[changeQty] = dataUpdateFunc;\r\n            events[updateWishlist] = validateProductQty;\r\n\r\n            for (key in options.productType) {\r\n                if (options.productType.hasOwnProperty(key) && options.productType[key] + 'Info' in options) {\r\n                    events['change ' + options[options.productType[key] + 'Info']] = dataUpdateFunc;\r\n                }\r\n            }\r\n            this._on(events);\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _updateWishlistData: function (event) {\r\n            var dataToAdd = {},\r\n                isFileUploaded = false,\r\n                handleObjSelector = null,\r\n                self = this;\r\n\r\n            if (event.handleObj.selector == this.options.qtyInfo) { //eslint-disable-line eqeqeq\r\n                this._updateAddToWishlistButton({}, event);\r\n                event.stopPropagation();\r\n\r\n                return;\r\n            }\r\n\r\n            handleObjSelector = $(event.currentTarget).closest('form').find(event.handleObj.selector);\r\n\r\n            handleObjSelector.each(function (index, element) {\r\n                if ($(element).is('input[type=text]') ||\r\n                    $(element).is('input[type=email]') ||\r\n                    $(element).is('input[type=number]') ||\r\n                    $(element).is('input[type=hidden]') ||\r\n                    $(element).is('input[type=checkbox]:checked') ||\r\n                    $(element).is('input[type=radio]:checked') ||\r\n                    $(element).is('textarea') ||\r\n                    $('#' + element.id + ' option:selected').length\r\n                ) {\r\n                    if ($(element).data('selector') || $(element).attr('name')) {\r\n                        dataToAdd = $.extend({}, dataToAdd, self._getElementData(element));\r\n                    }\r\n\r\n                    return;\r\n                }\r\n\r\n                if ($(element).is('input[type=file]') && $(element).val()) {\r\n                    isFileUploaded = true;\r\n                }\r\n            });\r\n\r\n            if (isFileUploaded) {\r\n                this.bindFormSubmit();\r\n            }\r\n            this._updateAddToWishlistButton(dataToAdd, event);\r\n            event.stopPropagation();\r\n        },\r\n\r\n        /**\r\n         * @param {Object} dataToAdd\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _updateAddToWishlistButton: function (dataToAdd, event) {\r\n            var self = this,\r\n                buttons = this._getAddToWishlistButton(event);\r\n\r\n            buttons.each(function (index, element) {\r\n                var params = $(element).data('post'),\r\n                    currentTarget = event.currentTarget,\r\n                    targetElement,\r\n                    targetValue;\r\n\r\n                if (!params) {\r\n                    params = {\r\n                        'data': {}\r\n                    };\r\n                } else if ($(currentTarget).data('selector') || $(currentTarget).attr('name')) {\r\n                    targetElement = self._getElementData(currentTarget);\r\n                    targetValue = Object.keys(targetElement)[0];\r\n\r\n                    if (params.data.hasOwnProperty(targetValue) && !dataToAdd.hasOwnProperty(targetValue)) {\r\n                        delete params.data[targetValue];\r\n                    }\r\n                }\r\n\r\n                params.data = $.extend({}, params.data, dataToAdd, {\r\n                    'qty': $(self.options.qtyInfo).val()\r\n                });\r\n                $(element).data('post', params);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _getAddToWishlistButton: function (event) {\r\n            var productListWrapper = $(event.currentTarget).closest(this.options.productListWrapper);\r\n\r\n            if (productListWrapper.length) {\r\n                return productListWrapper.find(this.options.actionElement);\r\n            }\r\n\r\n            return $(this.options.actionElement);\r\n        },\r\n\r\n        /**\r\n         * @param {Object} array1\r\n         * @param {Object} array2\r\n         * @return {Object}\r\n         * @private\r\n         * @deprecated\r\n         */\r\n        _arrayDiffByKeys: function (array1, array2) {\r\n            var result = {};\r\n\r\n            $.each(array1, function (key, value) {\r\n                if (key.indexOf('option') === -1) {\r\n                    return;\r\n                }\r\n\r\n                if (!array2[key]) {\r\n                    result[key] = value;\r\n                }\r\n            });\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * @param {HTMLElement} element\r\n         * @return {Object}\r\n         * @private\r\n         */\r\n        _getElementData: function (element) {\r\n            var data, elementName, elementValue;\r\n\r\n            element = $(element);\r\n            data = {};\r\n            elementName = element.data('selector') ? element.data('selector') : element.attr('name');\r\n            elementValue = element.val();\r\n\r\n            if (element.is('select[multiple]') && elementValue !== null) {\r\n                if (elementName.substr(elementName.length - 2) == '[]') { //eslint-disable-line eqeqeq\r\n                    elementName = elementName.substring(0, elementName.length - 2);\r\n                }\r\n                $.each(elementValue, function (key, option) {\r\n                    data[elementName + '[' + option + ']'] = option;\r\n                });\r\n            } else if (elementName.substr(elementName.length - 2) == '[]') { //eslint-disable-line eqeqeq, max-depth\r\n                elementName = elementName.substring(0, elementName.length - 2);\r\n\r\n                data[elementName + '[' + elementValue + ']'] = elementValue;\r\n            } else {\r\n                data[elementName] = elementValue;\r\n            }\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * @param {Object} params\r\n         * @param {Object} dataToAdd\r\n         * @private\r\n         * @deprecated\r\n         */\r\n        _removeExcessiveData: function (params, dataToAdd) {\r\n            var dataToRemove = this._arrayDiffByKeys(params.data, dataToAdd);\r\n\r\n            $.each(dataToRemove, function (key) {\r\n                delete params.data[key];\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Bind form submit.\r\n         */\r\n        bindFormSubmit: function () {\r\n            var self = this;\r\n\r\n            $('[data-action=\"add-to-wishlist\"]').on('click', function (event) {\r\n                var element, params, form, action;\r\n\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n\r\n                element = $('input[type=file]' + self.options.customOptionsInfo);\r\n                params = $(event.currentTarget).data('post');\r\n                form = $(element).closest('form');\r\n                action = params.action;\r\n\r\n                if (params.data.id) {\r\n                    $('<input>', {\r\n                        type: 'hidden',\r\n                        name: 'id',\r\n                        value: params.data.id\r\n                    }).appendTo(form);\r\n                }\r\n\r\n                if (params.data.uenc) {\r\n                    action += 'uenc/' + params.data.uenc;\r\n                }\r\n\r\n                $(form).attr('action', action).trigger('submit');\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Validate product quantity before updating Wish List\r\n         *\r\n         * @param {jQuery.Event} event\r\n         * @private\r\n         */\r\n        _validateWishlistQty: function (event) {\r\n            var element = $(this.options.qtyInfo);\r\n\r\n            if (!(element.validation() && element.validation('isValid'))) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n\r\n                return;\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.addToWishlist;\r\n});\r\n","Magento_Wishlist/js/search.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'jquery-ui-modules/widget'\r\n], function ($) {\r\n    'use strict';\r\n\r\n    $.widget('mage.wishlistSearch', {\r\n\r\n        /**\r\n         * Bind handlers to events\r\n         */\r\n        _create: function () {\r\n            this.element.on('change', $.proxy(this._toggleForm, this));\r\n        },\r\n\r\n        /**\r\n         * Toggle Form\r\n         * @private\r\n         */\r\n        _toggleForm: function () {\r\n            switch (this.element.val()) {\r\n                case 'name':\r\n                    $(this.options.emailFormSelector).hide();\r\n                    $(this.options.nameFormSelector).show();\r\n                    break;\r\n\r\n                case 'email':\r\n                    $(this.options.nameFormSelector).hide();\r\n                    $(this.options.emailFormSelector).show();\r\n                    break;\r\n                default:\r\n                    $(this.options.emailFormSelector).add(this.options.nameFormSelector).hide();\r\n            }\r\n        }\r\n    });\r\n\r\n    return $.mage.wishlistSearch;\r\n});\r\n","Magento_Wishlist/js/wishlist.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\n/**\r\n * @api\r\n */\r\ndefine([\r\n    'jquery',\r\n    'mage/template',\r\n    'Magento_Ui/js/modal/alert',\r\n    'jquery-ui-modules/widget',\r\n    'mage/validation/validation',\r\n    'mage/dataPost'\r\n], function ($, mageTemplate, alert) {\r\n    'use strict';\r\n\r\n    $.widget('mage.wishlist', {\r\n        options: {\r\n            dataAttribute: 'item-id',\r\n            nameFormat: 'qty[{0}]',\r\n            btnRemoveSelector: '[data-role=remove]',\r\n            qtySelector: '[data-role=qty]',\r\n            addToCartSelector: '[data-role=tocart]',\r\n            addAllToCartSelector: '[data-role=all-tocart]',\r\n            commentInputType: 'textarea',\r\n            infoList: false\r\n        },\r\n\r\n        /**\r\n         * Bind handlers to events.\r\n         */\r\n        _create: function () {\r\n            var _this = this;\r\n\r\n            if (!this.options.infoList) {\r\n                this.element\r\n                    .on('addToCart', function (event, context) {\r\n                        var urlParams;\r\n\r\n                        event.stopPropagation(event);\r\n                        $(context).data('stop-processing', true);\r\n                        urlParams = _this._getItemsToCartParams(\r\n                            $(context).parents('[data-row=product-item]').find(_this.options.addToCartSelector)\r\n                        );\r\n                        $.mage.dataPost().postData(urlParams);\r\n\r\n                        return false;\r\n                    })\r\n                    .on('click', this.options.btnRemoveSelector, $.proxy(function (event) {\r\n                        event.preventDefault();\r\n                        $.mage.dataPost().postData($(event.currentTarget).data('post-remove'));\r\n                    }, this))\r\n                    .on('click', this.options.addToCartSelector, $.proxy(this._beforeAddToCart, this))\r\n                    .on('click', this.options.addAllToCartSelector, $.proxy(this._addAllWItemsToCart, this))\r\n                    .on('focusin focusout', this.options.commentInputType, $.proxy(this._focusComment, this));\r\n            }\r\n\r\n            // Setup validation for the form\r\n            this.element.mage('validation', {\r\n                /** @inheritdoc */\r\n                errorPlacement: function (error, element) {\r\n                    error.insertAfter(element.next());\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Process data before add to cart\r\n         *\r\n         * - update item's qty value.\r\n         *\r\n         * @param {Event} event\r\n         * @private\r\n         */\r\n        _beforeAddToCart: function (event) {\r\n            var elem = $(event.currentTarget),\r\n                itemId = elem.data(this.options.dataAttribute),\r\n                qtyName = $.validator.format(this.options.nameFormat, itemId),\r\n                qtyValue = elem.parents().find('[name=\"' + qtyName + '\"]').val(),\r\n                params = elem.data('post');\r\n\r\n            if (params) {\r\n                params.data = $.extend({}, params.data, {\r\n                    'qty': qtyValue\r\n                });\r\n                elem.data('post', params);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Add wish list items to cart.\r\n         * @private\r\n         * @param {jQuery} elem - clicked 'add to cart' button\r\n         */\r\n        _getItemsToCartParams: function (elem) {\r\n            var itemId, url, qtyName, qtyValue;\r\n\r\n            if (elem.data(this.options.dataAttribute)) {\r\n                itemId = elem.data(this.options.dataAttribute);\r\n                url = this.options.addToCartUrl;\r\n                qtyName = $.validator.format(this.options.nameFormat, itemId);\r\n                qtyValue = elem.parents().find('[name=\"' + qtyName + '\"]').val();\r\n                url.data.item = itemId;\r\n                url.data.qty = qtyValue;\r\n\r\n                return url;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Add all wish list items to cart\r\n         * @private\r\n         */\r\n        _addAllWItemsToCart: function () {\r\n            var urlParams = this.options.addAllToCartUrl,\r\n                separator = urlParams.action.indexOf('?') >= 0 ? '&' : '?';\r\n\r\n            this.element.find(this.options.qtySelector).each(function (index, element) {\r\n                urlParams.action += separator + $(element).prop('name') + '=' + encodeURIComponent($(element).val());\r\n                separator = '&';\r\n            });\r\n            $.mage.dataPost().postData(urlParams);\r\n        },\r\n\r\n        /**\r\n         * Toggle comment string.\r\n         * @private\r\n         * @param {Event} e\r\n         */\r\n        _focusComment: function (e) {\r\n            var commentInput = e.currentTarget;\r\n\r\n            if (commentInput.value === '' || commentInput.value === this.options.commentString) {\r\n                commentInput.value = commentInput.value === this.options.commentString ?\r\n                    '' : this.options.commentString;\r\n            }\r\n        }\r\n    });\r\n\r\n    // Extension for mage.wishlist - Select All checkbox\r\n    $.widget('mage.wishlist', $.mage.wishlist, {\r\n        options: {\r\n            selectAllCheckbox: '#select-all',\r\n            parentContainer: '#wishlist-table'\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            var selectAllCheckboxParent, checkboxCount;\r\n\r\n            this._super();\r\n            selectAllCheckboxParent = $(this.options.selectAllCheckbox).parents(this.options.parentContainer);\r\n            checkboxCount = selectAllCheckboxParent\r\n                .find('input:checkbox:not(' + this.options.selectAllCheckbox + ')').length;\r\n            // If Select all checkbox is checked, check all item checkboxes, if unchecked, uncheck all item checkboxes\r\n            $(this.options.selectAllCheckbox).on('click', function () {\r\n                selectAllCheckboxParent.find('input:checkbox').attr('checked', $(this).is(':checked'));\r\n            });\r\n            // If all item checkboxes are checked, check select all checkbox,\r\n            // if not all item checkboxes are checked, uncheck select all checkbox\r\n            selectAllCheckboxParent.on(\r\n                'click',\r\n                'input:checkbox:not(' + this.options.selectAllCheckbox + ')',\r\n                $.proxy(function () {\r\n                    var checkedCount = selectAllCheckboxParent\r\n                        .find('input:checkbox:checked:not(' + this.options.selectAllCheckbox + ')').length;\r\n\r\n                    $(this.options.selectAllCheckbox).attr('checked', checkboxCount === checkedCount);\r\n                }, this)\r\n            );\r\n        }\r\n    });\r\n    // Extension for mage.wishlist info add to cart\r\n    $.widget('mage.wishlist', $.mage.wishlist, {\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            this._super();\r\n\r\n            if (this.options.infoList) {\r\n                this.element.on('addToCart', $.proxy(function (event, context) {\r\n                    this.element.find('input:checkbox').attr('checked', false);\r\n                    $(context).closest('tr').find('input:checkbox').attr('checked', true);\r\n                    this.element.trigger('submit');\r\n                }, this));\r\n                this._checkBoxValidate();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * validate checkbox selection.\r\n         * @private\r\n         */\r\n        _checkBoxValidate: function () {\r\n            this.element.validation({\r\n                submitHandler: $.proxy(function (form) {\r\n                    if ($(form).find('input:checkbox:checked').length) {\r\n                        form.submit();\r\n                    } else {\r\n                        alert({\r\n                            content: this.options.checkBoxValidationMessage\r\n                        });\r\n                    }\r\n                }, this)\r\n            });\r\n        }\r\n    });\r\n\r\n    // Extension for mage.wishlist - Add Wishlist item to Gift Registry\r\n    $.widget('mage.wishlist', $.mage.wishlist, {\r\n        options: {\r\n            formTmplSelector: '#form-tmpl',\r\n            formTmplId: '#wishlist-hidden-form'\r\n        },\r\n\r\n        /** @inheritdoc */\r\n        _create: function () {\r\n            var _this = this;\r\n\r\n            this._super();\r\n            this.element.on('click', '[data-wishlist-to-giftregistry]', function () {\r\n                var json = $(this).data('wishlist-to-giftregistry'),\r\n                    tmplJson = {\r\n                        item: json.itemId,\r\n                        entity: json.entity,\r\n                        url: json.url\r\n                    },\r\n                    html = mageTemplate(_this.options.formTmplSelector, {\r\n                        data: tmplJson\r\n                    });\r\n\r\n                $(html).appendTo('body');\r\n                $(_this.options.formTmplId).trigger('submit');\r\n            });\r\n        }\r\n    });\r\n\r\n    return $.mage.wishlist;\r\n});\r\n","Magento_Wishlist/js/product/addtowishlist-button.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'Magento_Ui/js/grid/columns/column',\r\n    'Magento_Catalog/js/product/uenc-processor',\r\n    'Magento_Catalog/js/product/list/column-status-validator'\r\n], function (Element, uencProcessor, columnStatusValidator) {\r\n    'use strict';\r\n\r\n    return Element.extend({\r\n        defaults: {\r\n            label: ''\r\n        },\r\n\r\n        /**\r\n         * Get request POST data.\r\n         *\r\n         * @param {Object} row\r\n         * @return {String}\r\n         */\r\n        getDataPost: function (row) {\r\n            return uencProcessor(row['extension_attributes']['wishlist_button'].url);\r\n        },\r\n\r\n        /**\r\n         * Check if component must be shown.\r\n         *\r\n         * @return {Boolean}\r\n         */\r\n        isAllowed: function () {\r\n            return columnStatusValidator.isValid(this.source(), 'add_to_wishlist', 'show_buttons');\r\n        },\r\n\r\n        /**\r\n         * Get button label.\r\n         *\r\n         * @return {String}\r\n         */\r\n        getLabel: function () {\r\n            return this.label;\r\n        }\r\n    });\r\n});\r\n","Magento_Wishlist/js/view/wishlist.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'uiComponent',\r\n    'Magento_Customer/js/customer-data'\r\n], function (Component, customerData) {\r\n    'use strict';\r\n\r\n    return Component.extend({\r\n        /** @inheritdoc */\r\n        initialize: function () {\r\n            this._super();\r\n\r\n            this.wishlist = customerData.get('wishlist');\r\n        }\r\n    });\r\n});\r\n","Mageplaza_AjaxLayer/js/action/submit-filter.js":"/**\r\n * Mageplaza\r\n *\r\n * NOTICE OF LICENSE\r\n *\r\n * This source file is subject to the Mageplaza.com license that is\r\n * available through the world-wide-web at this URL:\r\n * https://www.mageplaza.com/LICENSE.txt\r\n *\r\n * DISCLAIMER\r\n *\r\n * Do not edit or add to this file if you wish to upgrade this extension to newer\r\n * version in the future.\r\n *\r\n * @category    Mageplaza\r\n * @package     Mageplaza_AjaxLayer\r\n * @copyright   Copyright (c) Mageplaza (http://www.mageplaza.com/)\r\n * @license     https://www.mageplaza.com/LICENSE.txt\r\n */\r\n\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'mage/storage',\r\n        'Mageplaza_AjaxLayer/js/model/loader',\r\n        'mage/apply/main',\r\n        'ko'\r\n    ],\r\n    function ($, storage, loader, mage, ko) {\r\n        'use strict';\r\n\r\n        var productContainer   = $('#layer-product-list'),\r\n            layerContainer     = $('.layered-filter-block-container'),\r\n            quickViewContainer = $('#mpquickview-popup');\r\n\r\n        return function (submitUrl, isChangeUrl, method) {\r\n            /** save active state */\r\n            var actives = [],\r\n                data;\r\n            $('.filter-options-item').each(function (index) {\r\n                if ($(this).hasClass('active')) {\r\n                    actives.push($(this).attr('attribute'));\r\n                }\r\n            });\r\n            window.layerActiveTabs = actives;\r\n\r\n            /** start loader */\r\n            loader.startLoader();\r\n\r\n            /** change browser url */\r\n            if (typeof window.history.pushState === 'function' && (typeof isChangeUrl === 'undefined')) {\r\n                window.history.pushState({url: submitUrl}, '', submitUrl);\r\n            }\r\n            if (method === 'post') {// For 'add to wishlist' & 'add to compare' event\r\n                return storage.post(submitUrl).done(\r\n                ).fail(\r\n                    function () {\r\n                        window.location.reload();\r\n                    }\r\n                ).always(function () {\r\n                    loader.stopLoader();\r\n                });\r\n            }\r\n\r\n            return storage.get(submitUrl).done(\r\n                function (response) {\r\n                    if (response.backUrl) {\r\n                        window.location = response.backUrl;\r\n                        return;\r\n                    }\r\n                    if (response.navigation) {\r\n                        layerContainer.html(response.navigation);\r\n                    }\r\n                    if (response.products) {\r\n                        productContainer.html(response.products);\r\n                    }\r\n                    if (response.quickview) {\r\n                        quickViewContainer.html(response.quickview);\r\n                    }\r\n\r\n                    ko.cleanNode(productContainer[0]);\r\n                    productContainer.applyBindings();\r\n\r\n                    if (mage) {\r\n                        $(\"html, body\").animate({scrollTop: $('#layer-product-list').offset().top - 100}, \"slow\");\r\n                        mage.apply();\r\n                    }\r\n                }\r\n            ).fail(\r\n                function () {\r\n                    window.location.reload();\r\n                }\r\n            ).always(\r\n                function () {\r\n\r\n                    var colorAttr = $('.filter-options .filter-options-item .color .swatch-option-link-layered .swatch-option');\r\n\r\n                    colorAttr.each(function(){\r\n                        var el  = $(this),\r\n                            hex = el.attr('data-option-tooltip-value');\r\n                        if(typeof hex != \"undefined\"){\r\n                            if (hex.charAt(0) === '#') {\r\n                                hex = hex.substr(1);\r\n                            }\r\n                            if ((hex.length < 2) || (hex.length > 6)) {\r\n                                el.attr('style','background: '+el.attr('data-option-label')+';');\r\n                            }\r\n                            var values = hex.split(''),\r\n                                r,\r\n                                g,\r\n                                b;\r\n\r\n                            if (hex.length === 2) {\r\n                                r = parseInt(values[0].toString() + values[1].toString(), 16);\r\n                                g = r;\r\n                                b = r;\r\n                            } else if (hex.length === 3) {\r\n                                r = parseInt(values[0].toString() + values[0].toString(), 16);\r\n                                g = parseInt(values[1].toString() + values[1].toString(), 16);\r\n                                b = parseInt(values[2].toString() + values[2].toString(), 16);\r\n                            } else if (hex.length === 6) {\r\n                                r = parseInt(values[0].toString() + values[1].toString(), 16);\r\n                                g = parseInt(values[2].toString() + values[3].toString(), 16);\r\n                                b = parseInt(values[4].toString() + values[5].toString(), 16);\r\n                            } else {\r\n                                el.attr('style','background: '+el.attr('data-option-label')+';');\r\n                            }\r\n\r\n                            el.attr('style','background: center center no-repeat rgb('+[r, g, b]+');');\r\n                        }\r\n\r\n                    });\r\n\r\n                    //selected\r\n\r\n                    var filterCurrent = $('.layered-filter-block-container .filter-current .items .item .filter-value');\r\n\r\n                    filterCurrent.each(function(){\r\n                        var el         = $(this),\r\n                            colorLabel = el.html(),\r\n                            colorAttr  = $('.filter-options .filter-options-item .color .swatch-option-link-layered .swatch-option');\r\n\r\n                        colorAttr.each(function(){\r\n                            var elA = $(this);\r\n                            if(elA.attr('data-option-label') === colorLabel && !elA.hasClass('selected')){\r\n                                elA.addClass('selected');\r\n                            }\r\n                        });\r\n                    });\r\n\r\n                    loader.stopLoader();\r\n                }\r\n            );\r\n        };\r\n    }\r\n);\r\n","Mageplaza_AjaxLayer/js/model/loader.js":"/**\r\n * Mageplaza\r\n *\r\n * NOTICE OF LICENSE\r\n *\r\n * This source file is subject to the Mageplaza.com license that is\r\n * available through the world-wide-web at this URL:\r\n * https://www.mageplaza.com/LICENSE.txt\r\n *\r\n * DISCLAIMER\r\n *\r\n * Do not edit or add to this file if you wish to upgrade this extension to newer\r\n * version in the future.\r\n *\r\n * @category    Mageplaza\r\n * @package     Mageplaza_AjaxLayer\r\n * @copyright   Copyright (c) Mageplaza (http://www.mageplaza.com/)\r\n * @license     https://www.mageplaza.com/LICENSE.txt\r\n */\r\n\r\ndefine(['jquery'], function ($) {\r\n        'use strict';\r\n\r\n        return {\r\n            /**\r\n             * Start full page loader action\r\n             */\r\n            startLoader: function () {\r\n                $('.sidebar-overlay').click();\r\n                $('.ln_overlay').show();\r\n            },\r\n\r\n            /**\r\n             * Stop full page loader action\r\n             */\r\n            stopLoader: function () {\r\n                $('.ln_overlay').hide();\r\n                $('.swatch-option-tooltip').hide();\r\n            }\r\n        };\r\n    }\r\n);\r\n","Mageplaza_AjaxLayer/js/view/layer.js":"/**\r\n * Mageplaza\r\n *\r\n * NOTICE OF LICENSE\r\n *\r\n * This source file is subject to the Mageplaza.com license that is\r\n * available through the world-wide-web at this URL:\r\n * https://www.mageplaza.com/LICENSE.txt\r\n *\r\n * DISCLAIMER\r\n *\r\n * Do not edit or add to this file if you wish to upgrade this extension to newer\r\n * version in the future.\r\n *\r\n * @category    Mageplaza\r\n * @package     Mageplaza_AjaxLayer\r\n * @copyright   Copyright (c) Mageplaza (http://www.mageplaza.com/)\r\n * @license     https://www.mageplaza.com/LICENSE.txt\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Mageplaza_AjaxLayer/js/action/submit-filter',\r\n    'Magento_Catalog/js/price-utils',\r\n    'jquery-ui-modules/widget',\r\n    'accordion',\r\n    'productListToolbarForm'\r\n], function ($, submitFilterAction, ultil) {\r\n    \"use strict\";\r\n\r\n    var infinite_loaded_count = 0;\r\n\r\n    $.widget('mageplaza.layer', $.mage.accordion, {\r\n        options: {\r\n            openedState: 'active',\r\n            collapsible: true,\r\n            multipleCollapsible: true,\r\n            animate: 200,\r\n            productsListSelector: '#layer-product-list',\r\n            mobileShopbyElement: '#layered-filter-block .filter-title [data-role=title]',\r\n            collapsibleElement: '[data-role=ln_collapsible]',\r\n            header: '[data-role=ln_title]',\r\n            content: '[data-role=ln_content]',\r\n            isCustomerLoggedIn: false,\r\n            params: [],\r\n            active: []\r\n        },\r\n\r\n        inFinite: function() {\r\n            var self = this;\r\n            next_page = \"\";\r\n            if($(self.options.productsListSelector +' .infinite-loader').length > 0){\r\n                active = true;\r\n            }\r\n            $(\".pages-items li > a.next\").each(function(){\r\n                next_page = $(this).attr(\"href\");\r\n            });\r\n            if(!next_page){\r\n                $('.infinite-loader').hide();\r\n            }\r\n            $(\".infinite-loader .btn-load-more\").click(function(){\r\n                if(!loading && next_page){\r\n                    loading = true;\r\n                    self.ajaxInfinite(next_page);\r\n                }\r\n            });\r\n        },\r\n\r\n        ajaxInfinite: function (submitUrl) {\r\n          var self = this;\r\n          infinite_loaded_count++;\r\n          $('.infinite-loader .btn-load-more').hide();\r\n          $('.infinite-loader .loading').show();\r\n          $.ajax({\r\n              url: submitUrl,\r\n              type: 'get',\r\n              beforeSend: function () {\r\n                  $('.infinite-loader .btn-load-more').hide();\r\n                  $('.infinite-loader .loading').show();\r\n              },\r\n              success: function (res) {\r\n                  loading = false;\r\n                  var $products = $(res.products);\r\n                  if (res.backUrl) {\r\n                      window.location = res.backUrl;\r\n                      return;\r\n                  }\r\n                  if($products){\r\n                      $products.each(function(i,el){\r\n                          if($(el).hasClass('products-grid')){\r\n                              var items_grid = $(this).find('.product-items .item');\r\n                              $(self.options.productsListSelector + ' .products.wrapper .product-items').append(items_grid);\r\n                              $(self.options.productsListSelector).trigger('contentUpdated');\r\n                          }\r\n                          if($(el).hasClass('products-list')){\r\n                              var items_list = $(this).find('.product-items .item');\r\n                              $(self.options.productsListSelector + ' .products.wrapper .product-items').append(items_list);\r\n                              $(self.options.productsListSelector).trigger('contentUpdated');\r\n                          }\r\n                          if($(el).hasClass('toolbar-products')){\r\n                              if($(this).find('.pages a.next').length > 0){\r\n                                  $(self.options.productsListSelector + ' .pages a.next').attr('href', $(this).find('.pages a.next').attr('href'));\r\n                              }else{\r\n                                  $(self.options.productsListSelector + ' .pages a.next').remove();\r\n                              }\r\n                          }\r\n                      });\r\n                      if($(\"form[data-role=tocart-form]\").length > 0) {\r\n                          $(\"form[data-role=tocart-form]\").catalogAddToCart();\r\n                      }\r\n                      $('.main .products.grid .product-items li.product-item:nth-child(2n)').addClass('nth-child-2n');\r\n                      $('.main .products.grid .product-items li.product-item:nth-child(2n+1)').addClass('nth-child-2np1');\r\n                      $('.main .products.grid .product-items li.product-item:nth-child(3n)').addClass('nth-child-3n');\r\n                      $('.main .products.grid .product-items li.product-item:nth-child(3n+1)').addClass('nth-child-3np1');\r\n                      $('.main .products.grid .product-items li.product-item:nth-child(4n)').addClass('nth-child-4n');\r\n                      $('.main .products.grid .product-items li.product-item:nth-child(4n+1)').addClass('nth-child-4np1');\r\n                      $('.main .products.grid .product-items li.product-item:nth-child(5n)').addClass('nth-child-5n');\r\n                      $('.main .products.grid .product-items li.product-item:nth-child(5n+1)').addClass('nth-child-5np1');\r\n                      $('.main .products.grid .product-items li.product-item:nth-child(6n)').addClass('nth-child-6n');\r\n                      $('.main .products.grid .product-items li.product-item:nth-child(6n+1)').addClass('nth-child-6np1');\r\n                      $('.main .products.grid .product-items li.product-item:nth-child(7n)').addClass('nth-child-7n');\r\n                      $('.main .products.grid .product-items li.product-item:nth-child(7n+1)').addClass('nth-child-7np1');\r\n                      $('.main .products.grid .product-items li.product-item:nth-child(8n)').addClass('nth-child-8n');\r\n                      $('.main .products.grid .product-items li.product-item:nth-child(8n+1)').addClass('nth-child-8np1');\r\n                      var hist = submitUrl;\r\n                      if(submitUrl.indexOf(\"p=\") > -1){\r\n                          var len = submitUrl.length-submitUrl.indexOf(\"p=\");\r\n                          var str_temp = submitUrl.substr(submitUrl.indexOf(\"p=\"),len);\r\n                          var page_param = \"\";\r\n                          if(str_temp.indexOf(\"&\") == -1){\r\n                              page_param = str_temp;\r\n                          } else {\r\n                              page_param = str_temp.substr(0,str_temp.indexOf(\"&\"));\r\n                          }\r\n                          hist = submitUrl.replace(page_param, \"\");\r\n                      }\r\n                      if (typeof window.history.pushState === 'function') {\r\n                          window.history.pushState({url: hist}, '', hist);\r\n                      }\r\n                      if(typeof enable_quickview != 'undefined' && enable_quickview == true) {\r\n                          requirejs(['jquery', 'weltpixel_quickview' ],\r\n                              function($, quickview) {\r\n                                  $('.weltpixel-quickview').off('click').on('click', function() {\r\n                                      var prodUrl = $(this).attr('data-quickview-url');\r\n                                      if (prodUrl.length) {\r\n                                          quickview.displayContent(prodUrl);\r\n                                      }\r\n                                  });\r\n                              });\r\n                      }\r\n                      $(\".products-grid .weltpixel-quickview\").each(function(){\r\n                          $(this).appendTo($(this).parent().parent().children(\".product-item-photo\"));\r\n                      });\r\n                      $(\"#layer-product-list img.porto-lazyload:not(.porto-lazyload-loaded)\").lazyload({effect:\"fadeIn\"});\r\n                      if ($('#layer-product-list .porto-lazyload:not(.porto-lazyload-loaded)').closest('.owl-carousel').length) {\r\n                          $('#layer-product-list .porto-lazyload:not(.porto-lazyload-loaded)').closest('.owl-carousel').on('initialized.owl.carousel', function() {\r\n                              $(this).find('.porto-lazyload:not(.porto-lazyload-loaded)').trigger('appear');\r\n                          });\r\n                          $('#layer-product-list .porto-lazyload:not(.porto-lazyload-loaded)').closest('.owl-carousel').on('changed.owl.carousel', function() {\r\n                              $(this).find('.porto-lazyload:not(.porto-lazyload-loaded)').trigger('appear');\r\n                          });\r\n                      }\r\n                      next_page = \"\";\r\n                      $(\".pages-items li > a.next\").each(function(){\r\n                          next_page = $(this).attr(\"href\");\r\n                      });\r\n                      $('.infinite-loader .loading').hide();\r\n                      if(next_page){\r\n                          $('.infinite-loader .btn-load-more').show();\r\n                          $(\".infinite-loader .btn-load-more\").unbind(\"click\").click(function(){\r\n                              if(!loading && next_page){\r\n                                  loading = true;\r\n                                  self.ajaxInfinite(next_page);\r\n                              }\r\n                          });\r\n                      }\r\n                  }\r\n\r\n              },\r\n              error: function () {\r\n                  window.location.reload();\r\n              }\r\n          });\r\n\r\n        _create: function () {\r\n            this.initActiveItems();\r\n\r\n            this._super();\r\n\r\n            this.initProductListUrl();\r\n            this.initObserve();\r\n            this.initWishlistCompare();\r\n        },\r\n\r\n        initActiveItems: function () {\r\n            var layerActives = this.options.active,\r\n                actives = [];\r\n\r\n            if (typeof window.layerActiveTabs !== 'undefined') {\r\n                layerActives = window.layerActiveTabs;\r\n            }\r\n            if (layerActives.length) {\r\n                this.element.find('.filter-options-item').each(function (index) {\r\n                    if (~$.inArray($(this).attr('attribute'), layerActives)) {\r\n                        actives.push(index);\r\n                    }\r\n                });\r\n            }\r\n\r\n            this.options.active = actives;\r\n\r\n            return this;\r\n        },\r\n\r\n        initProductListUrl: function () {\r\n            var isProcessToolbar = false;\r\n            $.mage.productListToolbarForm.prototype.changeUrl = function (paramName, paramValue, defaultValue) {\r\n                if (isProcessToolbar) {\r\n                    return;\r\n                }\r\n                isProcessToolbar = true;\r\n\r\n                var urlPaths = this.options.url.split('?'),\r\n                    baseUrl = urlPaths[0],\r\n                    urlParams = urlPaths[1] ? urlPaths[1].split('&') : [],\r\n                    paramData = {},\r\n                    parameters;\r\n                for (var i = 0; i < urlParams.length; i++) {\r\n                    parameters = urlParams[i].split('=');\r\n                    paramData[parameters[0]] = parameters[1] !== undefined\r\n                        ? window.decodeURIComponent(parameters[1].replace(/\\+/g, '%20'))\r\n                        : '';\r\n                }\r\n                paramData[paramName] = paramValue;\r\n                if (paramValue === defaultValue) {\r\n                    delete paramData[paramName];\r\n                }\r\n                paramData = $.param(paramData);\r\n                submitFilterAction(baseUrl + (paramData.length ? '?' + paramData : ''));\r\n            }\r\n        },\r\n\r\n        initObserve: function () {\r\n            var self = this;\r\n\r\n            // fix browser back, forward button\r\n            if (typeof window.history.replaceState === \"function\") {\r\n                window.history.replaceState({url: document.URL}, document.title);\r\n\r\n                setTimeout(function () {\r\n                    window.onpopstate = function (e) {\r\n                        if (e.state) {\r\n                            submitFilterAction(e.state.url, 1);\r\n                        }\r\n                    };\r\n                }, 0)\r\n            }\r\n\r\n            var pageElements = $('#layer-product-list').find('.pages a');\r\n            pageElements.each(function () {\r\n                var el = $(this),\r\n                    link = self.checkUrl(el.prop('href'));\r\n                if (!link) {\r\n                    return;\r\n                }\r\n\r\n                el.bind('click', function (e) {\r\n                    submitFilterAction(link);\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                })\r\n            });\r\n\r\n            var currentElements = this.element.find('.filter-current a, .filter-actions a');\r\n            currentElements.each(function (index) {\r\n                var el = $(this),\r\n                    link = self.checkUrl(el.prop('href'));\r\n                if (!link) {\r\n                    return;\r\n                }\r\n\r\n                el.bind('click', function (e) {\r\n                    submitFilterAction(link);\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                });\r\n            });\r\n\r\n            var optionElements = this.element.find('.filter-options a');\r\n            optionElements.each(function (index) {\r\n                var el = $(this),\r\n                    link = self.checkUrl(el.prop('href'));\r\n                if (!link) {\r\n                    return;\r\n                }\r\n\r\n                el.bind('click', function (e) {\r\n                    if (el.hasClass('swatch-option-link-layered')) {\r\n                        self.selectSwatchOption(el);\r\n                    }\r\n\r\n                    self.ajaxSubmit(link);\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                });\r\n            });\r\n\r\n            var swatchElements = this.element.find('.swatch-attribute');\r\n            swatchElements.each(function (index) {\r\n                var el = $(this);\r\n                var attCode = el.attr('attribute-code');\r\n                if (attCode) {\r\n                    if (self.options.params.hasOwnProperty(attCode)) {\r\n                        var attValues = self.options.params[attCode].split(\",\");\r\n                        var swatchOptions = el.find('.swatch-option');\r\n                        swatchOptions.each(function (option) {\r\n                            var elOption = $(this);\r\n                            if ($.inArray(elOption.attr('option-id'), attValues) !== -1) {\r\n                                elOption.addClass('selected');\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n            if(typeof enable_quickview != 'undefined' && enable_quickview == true) {\r\n                requirejs(['jquery', 'weltpixel_quickview' ],\r\n                    function($, quickview) {\r\n                        $('.weltpixel-quickview').off('click').on('click', function() {\r\n                            var prodUrl = $(this).attr('data-quickview-url');\r\n                            if (prodUrl.length) {\r\n                                quickview.displayContent(prodUrl);\r\n                            }\r\n                        });\r\n                    });\r\n            }\r\n\r\n            $(\".products-grid .weltpixel-quickview\").each(function(){\r\n                $(this).appendTo($(this).parents('.product-item-info').children(\".product-item-photo\"));\r\n            });\r\n            $(\"#layer-product-list img.porto-lazyload:not(.porto-lazyload-loaded)\").lazyload({effect:\"fadeIn\"});\r\n            if ($('#layer-product-list .porto-lazyload:not(.porto-lazyload-loaded)').closest('.owl-carousel').length) {\r\n                $('#layer-product-list .porto-lazyload:not(.porto-lazyload-loaded)').closest('.owl-carousel').on('changed.owl.carousel', function() {\r\n                    $(this).find('.porto-lazyload:not(.porto-lazyload-loaded)').trigger('appear');\r\n                });\r\n            }\r\n            self.inFinite();\r\n        },\r\n\r\n        selectSwatchOption: function (el) {\r\n            var childEl = el.find('.swatch-option');\r\n            if (childEl.hasClass('selected')) {\r\n                childEl.removeClass('selected');\r\n            } else {\r\n                childEl.addClass('selected');\r\n            }\r\n        },\r\n\r\n        ajaxSubmit: function (submitUrl) {\r\n            this.element.find(this.options.mobileShopbyElement).trigger('click');\r\n\r\n            return submitFilterAction(submitUrl);\r\n        },\r\n\r\n        checkUrl: function (url) {\r\n            var regex = /(http|https):\\/\\/(\\w+:{0,1}\\w*)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%!\\-\\/]))?/;\r\n\r\n            return regex.test(url) ? url : null;\r\n        },\r\n\r\n        //Handling 'add to wishlist' & 'add to compare' event\r\n        initWishlistCompare: function () {\r\n            var isCustomerLoggedIn = this.options.isCustomerLoggedIn,\r\n                elClass = 'a.action.tocompare' + (isCustomerLoggedIn ? ',a.action.towishlist' : '');\r\n            $(elClass).each(function () {\r\n                var el = $(this);\r\n                $(el).bind('click', function (e) {\r\n                    var dataPost = $(el).data('post'),\r\n                        formKey = $('input[name=\"form_key\"]').val(), method = 'post';\r\n                    if (formKey) {\r\n                        dataPost.data.form_key = formKey;\r\n                    }\r\n\r\n                    var paramData = $.param(dataPost.data),\r\n                        url = dataPost.action + (paramData.length ? '?' + paramData : '');\r\n                    submitFilterAction(url, true, method);\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                });\r\n            })\r\n        }\r\n    });\r\n\r\n    return $.mageplaza.layer;\r\n});\r\n","Mageplaza_Core/js/bootstrap.min.js":"/*!\r\n * Bootstrap v3.3.6 (http://getbootstrap.com)\r\n * Copyright 2011-2015 Twitter, Inc.\r\n * Licensed under the MIT license\r\n */\r\nif(\"undefined\"==typeof jQuery)throw new Error(\"Bootstrap's JavaScript requires jQuery\");+function(a){\"use strict\";var b=a.fn.jquery.split(\" \")[0].split(\".\");if(b[0]<2&&b[1]<9||1==b[0]&&9==b[1]&&b[2]<1||b[0]>2)throw new Error(\"Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 3\")}(jQuery),+function(a){\"use strict\";function b(){var a=document.createElement(\"bootstrap\"),b={WebkitTransition:\"webkitTransitionEnd\",MozTransition:\"transitionend\",OTransition:\"oTransitionEnd otransitionend\",transition:\"transitionend\"};for(var c in b)if(void 0!==a.style[c])return{end:b[c]};return!1}a.fn.emulateTransitionEnd=function(b){var c=!1,d=this;a(this).one(\"bsTransitionEnd\",function(){c=!0});var e=function(){c||a(d).trigger(a.support.transition.end)};return setTimeout(e,b),this},a(function(){a.support.transition=b(),a.support.transition&&(a.event.special.bsTransitionEnd={bindType:a.support.transition.end,delegateType:a.support.transition.end,handle:function(b){return a(b.target).is(this)?b.handleObj.handler.apply(this,arguments):void 0}})})}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var c=a(this),e=c.data(\"bs.alert\");e||c.data(\"bs.alert\",e=new d(this)),\"string\"==typeof b&&e[b].call(c)})}var c='[data-dismiss=\"alert\"]',d=function(b){a(b).on(\"click\",c,this.close)};d.VERSION=\"3.3.6\",d.TRANSITION_DURATION=150,d.prototype.close=function(b){function c(){g.detach().trigger(\"closed.bs.alert\").remove()}var e=a(this),f=e.attr(\"data-target\");f||(f=e.attr(\"href\"),f=f&&f.replace(/.*(?=#[^\\s]*$)/,\"\"));var g=a(f);b&&b.preventDefault(),g.length||(g=e.closest(\".alert\")),g.trigger(b=a.Event(\"close.bs.alert\")),b.isDefaultPrevented()||(g.removeClass(\"in\"),a.support.transition&&g.hasClass(\"fade\")?g.one(\"bsTransitionEnd\",c).emulateTransitionEnd(d.TRANSITION_DURATION):c())};var e=a.fn.alert;a.fn.alert=b,a.fn.alert.Constructor=d,a.fn.alert.noConflict=function(){return a.fn.alert=e,this},a(document).on(\"click.bs.alert.data-api\",c,d.prototype.close)}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.button\"),f=\"object\"==typeof b&&b;e||d.data(\"bs.button\",e=new c(this,f)),\"toggle\"==b?e.toggle():b&&e.setState(b)})}var c=function(b,d){this.$element=a(b),this.options=a.extend({},c.DEFAULTS,d),this.isLoading=!1};c.VERSION=\"3.3.6\",c.DEFAULTS={loadingText:\"loading...\"},c.prototype.setState=function(b){var c=\"disabled\",d=this.$element,e=d.is(\"input\")?\"val\":\"html\",f=d.data();b+=\"Text\",null==f.resetText&&d.data(\"resetText\",d[e]()),setTimeout(a.proxy(function(){d[e](null==f[b]?this.options[b]:f[b]),\"loadingText\"==b?(this.isLoading=!0,d.addClass(c).attr(c,c)):this.isLoading&&(this.isLoading=!1,d.removeClass(c).removeAttr(c))},this),0)},c.prototype.toggle=function(){var a=!0,b=this.$element.closest('[data-toggle=\"buttons\"]');if(b.length){var c=this.$element.find(\"input\");\"radio\"==c.prop(\"type\")?(c.prop(\"checked\")&&(a=!1),b.find(\".active\").removeClass(\"active\"),this.$element.addClass(\"active\")):\"checkbox\"==c.prop(\"type\")&&(c.prop(\"checked\")!==this.$element.hasClass(\"active\")&&(a=!1),this.$element.toggleClass(\"active\")),c.prop(\"checked\",this.$element.hasClass(\"active\")),a&&c.trigger(\"change\")}else this.$element.attr(\"aria-pressed\",!this.$element.hasClass(\"active\")),this.$element.toggleClass(\"active\")};var d=a.fn.button;a.fn.button=b,a.fn.button.Constructor=c,a.fn.button.noConflict=function(){return a.fn.button=d,this},a(document).on(\"click.bs.button.data-api\",'[data-toggle^=\"button\"]',function(c){var d=a(c.target);d.hasClass(\"btn\")||(d=d.closest(\".btn\")),b.call(d,\"toggle\"),a(c.target).is('input[type=\"radio\"]')||a(c.target).is('input[type=\"checkbox\"]')||c.preventDefault()}).on(\"focus.bs.button.data-api blur.bs.button.data-api\",'[data-toggle^=\"button\"]',function(b){a(b.target).closest(\".btn\").toggleClass(\"focus\",/^focus(in)?$/.test(b.type))})}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.carousel\"),f=a.extend({},c.DEFAULTS,d.data(),\"object\"==typeof b&&b),g=\"string\"==typeof b?b:f.slide;e||d.data(\"bs.carousel\",e=new c(this,f)),\"number\"==typeof b?e.to(b):g?e[g]():f.interval&&e.pause().cycle()})}var c=function(b,c){this.$element=a(b),this.$indicators=this.$element.find(\".carousel-indicators\"),this.options=c,this.paused=null,this.sliding=null,this.interval=null,this.$active=null,this.$items=null,this.options.keyboard&&this.$element.on(\"keydown.bs.carousel\",a.proxy(this.keydown,this)),\"hover\"==this.options.pause&&!(\"ontouchstart\"in document.documentElement)&&this.$element.on(\"mouseenter.bs.carousel\",a.proxy(this.pause,this)).on(\"mouseleave.bs.carousel\",a.proxy(this.cycle,this))};c.VERSION=\"3.3.6\",c.TRANSITION_DURATION=600,c.DEFAULTS={interval:5e3,pause:\"hover\",wrap:!0,keyboard:!0},c.prototype.keydown=function(a){if(!/input|textarea/i.test(a.target.tagName)){switch(a.which){case 37:this.prev();break;case 39:this.next();break;default:return}a.preventDefault()}},c.prototype.cycle=function(b){return b||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(a.proxy(this.next,this),this.options.interval)),this},c.prototype.getItemIndex=function(a){return this.$items=a.parent().children(\".item\"),this.$items.index(a||this.$active)},c.prototype.getItemForDirection=function(a,b){var c=this.getItemIndex(b),d=\"prev\"==a&&0===c||\"next\"==a&&c==this.$items.length-1;if(d&&!this.options.wrap)return b;var e=\"prev\"==a?-1:1,f=(c+e)%this.$items.length;return this.$items.eq(f)},c.prototype.to=function(a){var b=this,c=this.getItemIndex(this.$active=this.$element.find(\".item.active\"));return a>this.$items.length-1||0>a?void 0:this.sliding?this.$element.one(\"slid.bs.carousel\",function(){b.to(a)}):c==a?this.pause().cycle():this.slide(a>c?\"next\":\"prev\",this.$items.eq(a))},c.prototype.pause=function(b){return b||(this.paused=!0),this.$element.find(\".next, .prev\").length&&a.support.transition&&(this.$element.trigger(a.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},c.prototype.next=function(){return this.sliding?void 0:this.slide(\"next\")},c.prototype.prev=function(){return this.sliding?void 0:this.slide(\"prev\")},c.prototype.slide=function(b,d){var e=this.$element.find(\".item.active\"),f=d||this.getItemForDirection(b,e),g=this.interval,h=\"next\"==b?\"left\":\"right\",i=this;if(f.hasClass(\"active\"))return this.sliding=!1;var j=f[0],k=a.Event(\"slide.bs.carousel\",{relatedTarget:j,direction:h});if(this.$element.trigger(k),!k.isDefaultPrevented()){if(this.sliding=!0,g&&this.pause(),this.$indicators.length){this.$indicators.find(\".active\").removeClass(\"active\");var l=a(this.$indicators.children()[this.getItemIndex(f)]);l&&l.addClass(\"active\")}var m=a.Event(\"slid.bs.carousel\",{relatedTarget:j,direction:h});return a.support.transition&&this.$element.hasClass(\"slide\")?(f.addClass(b),f[0].offsetWidth,e.addClass(h),f.addClass(h),e.one(\"bsTransitionEnd\",function(){f.removeClass([b,h].join(\" \")).addClass(\"active\"),e.removeClass([\"active\",h].join(\" \")),i.sliding=!1,setTimeout(function(){i.$element.trigger(m)},0)}).emulateTransitionEnd(c.TRANSITION_DURATION)):(e.removeClass(\"active\"),f.addClass(\"active\"),this.sliding=!1,this.$element.trigger(m)),g&&this.cycle(),this}};var d=a.fn.carousel;a.fn.carousel=b,a.fn.carousel.Constructor=c,a.fn.carousel.noConflict=function(){return a.fn.carousel=d,this};var e=function(c){var d,e=a(this),f=a(e.attr(\"data-target\")||(d=e.attr(\"href\"))&&d.replace(/.*(?=#[^\\s]+$)/,\"\"));if(f.hasClass(\"carousel\")){var g=a.extend({},f.data(),e.data()),h=e.attr(\"data-slide-to\");h&&(g.interval=!1),b.call(f,g),h&&f.data(\"bs.carousel\").to(h),c.preventDefault()}};a(document).on(\"click.bs.carousel.data-api\",\"[data-slide]\",e).on(\"click.bs.carousel.data-api\",\"[data-slide-to]\",e),a(window).on(\"load\",function(){a('[data-ride=\"carousel\"]').each(function(){var c=a(this);b.call(c,c.data())})})}(jQuery),+function(a){\"use strict\";function b(b){var c,d=b.attr(\"data-target\")||(c=b.attr(\"href\"))&&c.replace(/.*(?=#[^\\s]+$)/,\"\");return a(d)}function c(b){return this.each(function(){var c=a(this),e=c.data(\"bs.collapse\"),f=a.extend({},d.DEFAULTS,c.data(),\"object\"==typeof b&&b);!e&&f.toggle&&/show|hide/.test(b)&&(f.toggle=!1),e||c.data(\"bs.collapse\",e=new d(this,f)),\"string\"==typeof b&&e[b]()})}var d=function(b,c){this.$element=a(b),this.options=a.extend({},d.DEFAULTS,c),this.$trigger=a('[data-toggle=\"collapse\"][href=\"#'+b.id+'\"],[data-toggle=\"collapse\"][data-target=\"#'+b.id+'\"]'),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&&this.toggle()};d.VERSION=\"3.3.6\",d.TRANSITION_DURATION=350,d.DEFAULTS={toggle:!0},d.prototype.dimension=function(){var a=this.$element.hasClass(\"width\");return a?\"width\":\"height\"},d.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass(\"in\")){var b,e=this.$parent&&this.$parent.children(\".panel\").children(\".in, .collapsing\");if(!(e&&e.length&&(b=e.data(\"bs.collapse\"),b&&b.transitioning))){var f=a.Event(\"show.bs.collapse\");if(this.$element.trigger(f),!f.isDefaultPrevented()){e&&e.length&&(c.call(e,\"hide\"),b||e.data(\"bs.collapse\",null));var g=this.dimension();this.$element.removeClass(\"collapse\").addClass(\"collapsing\")[g](0).attr(\"aria-expanded\",!0),this.$trigger.removeClass(\"collapsed\").attr(\"aria-expanded\",!0),this.transitioning=1;var h=function(){this.$element.removeClass(\"collapsing\").addClass(\"collapse in\")[g](\"\"),this.transitioning=0,this.$element.trigger(\"shown.bs.collapse\")};if(!a.support.transition)return h.call(this);var i=a.camelCase([\"scroll\",g].join(\"-\"));this.$element.one(\"bsTransitionEnd\",a.proxy(h,this)).emulateTransitionEnd(d.TRANSITION_DURATION)[g](this.$element[0][i])}}}},d.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass(\"in\")){var b=a.Event(\"hide.bs.collapse\");if(this.$element.trigger(b),!b.isDefaultPrevented()){var c=this.dimension();this.$element[c](this.$element[c]())[0].offsetHeight,this.$element.addClass(\"collapsing\").removeClass(\"collapse in\").attr(\"aria-expanded\",!1),this.$trigger.addClass(\"collapsed\").attr(\"aria-expanded\",!1),this.transitioning=1;var e=function(){this.transitioning=0,this.$element.removeClass(\"collapsing\").addClass(\"collapse\").trigger(\"hidden.bs.collapse\")};return a.support.transition?void this.$element[c](0).one(\"bsTransitionEnd\",a.proxy(e,this)).emulateTransitionEnd(d.TRANSITION_DURATION):e.call(this)}}},d.prototype.toggle=function(){this[this.$element.hasClass(\"in\")?\"hide\":\"show\"]()},d.prototype.getParent=function(){return a(this.options.parent).find('[data-toggle=\"collapse\"][data-parent=\"'+this.options.parent+'\"]').each(a.proxy(function(c,d){var e=a(d);this.addAriaAndCollapsedClass(b(e),e)},this)).end()},d.prototype.addAriaAndCollapsedClass=function(a,b){var c=a.hasClass(\"in\");a.attr(\"aria-expanded\",c),b.toggleClass(\"collapsed\",!c).attr(\"aria-expanded\",c)};var e=a.fn.collapse;a.fn.collapse=c,a.fn.collapse.Constructor=d,a.fn.collapse.noConflict=function(){return a.fn.collapse=e,this},a(document).on(\"click.bs.collapse.data-api\",'[data-toggle=\"collapse\"]',function(d){var e=a(this);e.attr(\"data-target\")||d.preventDefault();var f=b(e),g=f.data(\"bs.collapse\"),h=g?\"toggle\":e.data();c.call(f,h)})}(jQuery),+function(a){\"use strict\";function b(b){var c=b.attr(\"data-target\");c||(c=b.attr(\"href\"),c=c&&/#[A-Za-z]/.test(c)&&c.replace(/.*(?=#[^\\s]*$)/,\"\"));var d=c&&a(c);return d&&d.length?d:b.parent()}function c(c){c&&3===c.which||(a(e).remove(),a(f).each(function(){var d=a(this),e=b(d),f={relatedTarget:this};e.hasClass(\"open\")&&(c&&\"click\"==c.type&&/input|textarea/i.test(c.target.tagName)&&a.contains(e[0],c.target)||(e.trigger(c=a.Event(\"hide.bs.dropdown\",f)),c.isDefaultPrevented()||(d.attr(\"aria-expanded\",\"false\"),e.removeClass(\"open\").trigger(a.Event(\"hidden.bs.dropdown\",f)))))}))}function d(b){return this.each(function(){var c=a(this),d=c.data(\"bs.dropdown\");d||c.data(\"bs.dropdown\",d=new g(this)),\"string\"==typeof b&&d[b].call(c)})}var e=\".dropdown-backdrop\",f='[data-toggle=\"dropdown\"]',g=function(b){a(b).on(\"click.bs.dropdown\",this.toggle)};g.VERSION=\"3.3.6\",g.prototype.toggle=function(d){var e=a(this);if(!e.is(\".disabled, :disabled\")){var f=b(e),g=f.hasClass(\"open\");if(c(),!g){\"ontouchstart\"in document.documentElement&&!f.closest(\".navbar-nav\").length&&a(document.createElement(\"div\")).addClass(\"dropdown-backdrop\").insertAfter(a(this)).on(\"click\",c);var h={relatedTarget:this};if(f.trigger(d=a.Event(\"show.bs.dropdown\",h)),d.isDefaultPrevented())return;e.trigger(\"focus\").attr(\"aria-expanded\",\"true\"),f.toggleClass(\"open\").trigger(a.Event(\"shown.bs.dropdown\",h))}return!1}},g.prototype.keydown=function(c){if(/(38|40|27|32)/.test(c.which)&&!/input|textarea/i.test(c.target.tagName)){var d=a(this);if(c.preventDefault(),c.stopPropagation(),!d.is(\".disabled, :disabled\")){var e=b(d),g=e.hasClass(\"open\");if(!g&&27!=c.which||g&&27==c.which)return 27==c.which&&e.find(f).trigger(\"focus\"),d.trigger(\"click\");var h=\" li:not(.disabled):visible a\",i=e.find(\".dropdown-menu\"+h);if(i.length){var j=i.index(c.target);38==c.which&&j>0&&j--,40==c.which&&j<i.length-1&&j++,~j||(j=0),i.eq(j).trigger(\"focus\")}}}};var h=a.fn.dropdown;a.fn.dropdown=d,a.fn.dropdown.Constructor=g,a.fn.dropdown.noConflict=function(){return a.fn.dropdown=h,this},a(document).on(\"click.bs.dropdown.data-api\",c).on(\"click.bs.dropdown.data-api\",\".dropdown form\",function(a){a.stopPropagation()}).on(\"click.bs.dropdown.data-api\",f,g.prototype.toggle).on(\"keydown.bs.dropdown.data-api\",f,g.prototype.keydown).on(\"keydown.bs.dropdown.data-api\",\".dropdown-menu\",g.prototype.keydown)}(jQuery),+function(a){\"use strict\";function b(b,d){return this.each(function(){var e=a(this),f=e.data(\"bs.modal\"),g=a.extend({},c.DEFAULTS,e.data(),\"object\"==typeof b&&b);f||e.data(\"bs.modal\",f=new c(this,g)),\"string\"==typeof b?f[b](d):g.show&&f.show(d)})}var c=function(b,c){this.options=c,this.$body=a(document.body),this.$element=a(b),this.$dialog=this.$element.find(\".modal-dialog\"),this.$backdrop=null,this.isShown=null,this.originalBodyPad=null,this.scrollbarWidth=0,this.ignoreBackdropClick=!1,this.options.remote&&this.$element.find(\".modal-content\").load(this.options.remote,a.proxy(function(){this.$element.trigger(\"loaded.bs.modal\")},this))};c.VERSION=\"3.3.6\",c.TRANSITION_DURATION=300,c.BACKDROP_TRANSITION_DURATION=150,c.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},c.prototype.toggle=function(a){return this.isShown?this.hide():this.show(a)},c.prototype.show=function(b){var d=this,e=a.Event(\"show.bs.modal\",{relatedTarget:b});this.$element.trigger(e),this.isShown||e.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.setScrollbar(),this.$body.addClass(\"modal-open\"),this.escape(),this.resize(),this.$element.on(\"click.dismiss.bs.modal\",'[data-dismiss=\"modal\"]',a.proxy(this.hide,this)),this.$dialog.on(\"mousedown.dismiss.bs.modal\",function(){d.$element.one(\"mouseup.dismiss.bs.modal\",function(b){a(b.target).is(d.$element)&&(d.ignoreBackdropClick=!0)})}),this.backdrop(function(){var e=a.support.transition&&d.$element.hasClass(\"fade\");d.$element.parent().length||d.$element.appendTo(d.$body),d.$element.show().scrollTop(0),d.adjustDialog(),e&&d.$element[0].offsetWidth,d.$element.addClass(\"in\"),d.enforceFocus();var f=a.Event(\"shown.bs.modal\",{relatedTarget:b});e?d.$dialog.one(\"bsTransitionEnd\",function(){d.$element.trigger(\"focus\").trigger(f)}).emulateTransitionEnd(c.TRANSITION_DURATION):d.$element.trigger(\"focus\").trigger(f)}))},c.prototype.hide=function(b){b&&b.preventDefault(),b=a.Event(\"hide.bs.modal\"),this.$element.trigger(b),this.isShown&&!b.isDefaultPrevented()&&(this.isShown=!1,this.escape(),this.resize(),a(document).off(\"focusin.bs.modal\"),this.$element.removeClass(\"in\").off(\"click.dismiss.bs.modal\").off(\"mouseup.dismiss.bs.modal\"),this.$dialog.off(\"mousedown.dismiss.bs.modal\"),a.support.transition&&this.$element.hasClass(\"fade\")?this.$element.one(\"bsTransitionEnd\",a.proxy(this.hideModal,this)).emulateTransitionEnd(c.TRANSITION_DURATION):this.hideModal())},c.prototype.enforceFocus=function(){a(document).off(\"focusin.bs.modal\").on(\"focusin.bs.modal\",a.proxy(function(a){this.$element[0]===a.target||this.$element.has(a.target).length||this.$element.trigger(\"focus\")},this))},c.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on(\"keydown.dismiss.bs.modal\",a.proxy(function(a){27==a.which&&this.hide()},this)):this.isShown||this.$element.off(\"keydown.dismiss.bs.modal\")},c.prototype.resize=function(){this.isShown?a(window).on(\"resize.bs.modal\",a.proxy(this.handleUpdate,this)):a(window).off(\"resize.bs.modal\")},c.prototype.hideModal=function(){var a=this;this.$element.hide(),this.backdrop(function(){a.$body.removeClass(\"modal-open\"),a.resetAdjustments(),a.resetScrollbar(),a.$element.trigger(\"hidden.bs.modal\")})},c.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},c.prototype.backdrop=function(b){var d=this,e=this.$element.hasClass(\"fade\")?\"fade\":\"\";if(this.isShown&&this.options.backdrop){var f=a.support.transition&&e;if(this.$backdrop=a(document.createElement(\"div\")).addClass(\"modal-backdrop \"+e).appendTo(this.$body),this.$element.on(\"click.dismiss.bs.modal\",a.proxy(function(a){return this.ignoreBackdropClick?void(this.ignoreBackdropClick=!1):void(a.target===a.currentTarget&&(\"static\"==this.options.backdrop?this.$element[0].focus():this.hide()))},this)),f&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass(\"in\"),!b)return;f?this.$backdrop.one(\"bsTransitionEnd\",b).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION):b()}else if(!this.isShown&&this.$backdrop){this.$backdrop.removeClass(\"in\");var g=function(){d.removeBackdrop(),b&&b()};a.support.transition&&this.$element.hasClass(\"fade\")?this.$backdrop.one(\"bsTransitionEnd\",g).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION):g()}else b&&b()},c.prototype.handleUpdate=function(){this.adjustDialog()},c.prototype.adjustDialog=function(){var a=this.$element[0].scrollHeight>document.documentElement.clientHeight;this.$element.css({paddingLeft:!this.bodyIsOverflowing&&a?this.scrollbarWidth:\"\",paddingRight:this.bodyIsOverflowing&&!a?this.scrollbarWidth:\"\"})},c.prototype.resetAdjustments=function(){this.$element.css({paddingLeft:\"\",paddingRight:\"\"})},c.prototype.checkScrollbar=function(){var a=window.innerWidth;if(!a){var b=document.documentElement.getBoundingClientRect();a=b.right-Math.abs(b.left)}this.bodyIsOverflowing=document.body.clientWidth<a,this.scrollbarWidth=this.measureScrollbar()},c.prototype.setScrollbar=function(){var a=parseInt(this.$body.css(\"padding-right\")||0,10);this.originalBodyPad=document.body.style.paddingRight||\"\",this.bodyIsOverflowing&&this.$body.css(\"padding-right\",a+this.scrollbarWidth)},c.prototype.resetScrollbar=function(){this.$body.css(\"padding-right\",this.originalBodyPad)},c.prototype.measureScrollbar=function(){var a=document.createElement(\"div\");a.className=\"modal-scrollbar-measure\",this.$body.append(a);var b=a.offsetWidth-a.clientWidth;return this.$body[0].removeChild(a),b};var d=a.fn.modal;a.fn.modal=b,a.fn.modal.Constructor=c,a.fn.modal.noConflict=function(){return a.fn.modal=d,this},a(document).on(\"click.bs.modal.data-api\",'[data-toggle=\"modal\"]',function(c){var d=a(this),e=d.attr(\"href\"),f=a(d.attr(\"data-target\")||e&&e.replace(/.*(?=#[^\\s]+$)/,\"\")),g=f.data(\"bs.modal\")?\"toggle\":a.extend({remote:!/#/.test(e)&&e},f.data(),d.data());d.is(\"a\")&&c.preventDefault(),f.one(\"show.bs.modal\",function(a){a.isDefaultPrevented()||f.one(\"hidden.bs.modal\",function(){d.is(\":visible\")&&d.trigger(\"focus\")})}),b.call(f,g,this)})}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.tooltip\"),f=\"object\"==typeof b&&b;(e||!/destroy|hide/.test(b))&&(e||d.data(\"bs.tooltip\",e=new c(this,f)),\"string\"==typeof b&&e[b]())})}var c=function(a,b){this.type=null,this.options=null,this.enabled=null,this.timeout=null,this.hoverState=null,this.$element=null,this.inState=null,this.init(\"tooltip\",a,b)};c.VERSION=\"3.3.6\",c.TRANSITION_DURATION=150,c.DEFAULTS={animation:!0,placement:\"top\",selector:!1,template:'<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',trigger:\"hover focus\",title:\"\",delay:0,html:!1,container:!1,viewport:{selector:\"body\",padding:0}},c.prototype.init=function(b,c,d){if(this.enabled=!0,this.type=b,this.$element=a(c),this.options=this.getOptions(d),this.$viewport=this.options.viewport&&a(a.isFunction(this.options.viewport)?this.options.viewport.call(this,this.$element):this.options.viewport.selector||this.options.viewport),this.inState={click:!1,hover:!1,focus:!1},this.$element[0]instanceof document.constructor&&!this.options.selector)throw new Error(\"`selector` option must be specified when initializing \"+this.type+\" on the window.document object!\");for(var e=this.options.trigger.split(\" \"),f=e.length;f--;){var g=e[f];if(\"click\"==g)this.$element.on(\"click.\"+this.type,this.options.selector,a.proxy(this.toggle,this));else if(\"manual\"!=g){var h=\"hover\"==g?\"mouseenter\":\"focusin\",i=\"hover\"==g?\"mouseleave\":\"focusout\";this.$element.on(h+\".\"+this.type,this.options.selector,a.proxy(this.enter,this)),this.$element.on(i+\".\"+this.type,this.options.selector,a.proxy(this.leave,this))}}this.options.selector?this._options=a.extend({},this.options,{trigger:\"manual\",selector:\"\"}):this.fixTitle()},c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.getOptions=function(b){return b=a.extend({},this.getDefaults(),this.$element.data(),b),b.delay&&\"number\"==typeof b.delay&&(b.delay={show:b.delay,hide:b.delay}),b},c.prototype.getDelegateOptions=function(){var b={},c=this.getDefaults();return this._options&&a.each(this._options,function(a,d){c[a]!=d&&(b[a]=d)}),b},c.prototype.enter=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data(\"bs.\"+this.type);return c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\"bs.\"+this.type,c)),b instanceof a.Event&&(c.inState[\"focusin\"==b.type?\"focus\":\"hover\"]=!0),c.tip().hasClass(\"in\")||\"in\"==c.hoverState?void(c.hoverState=\"in\"):(clearTimeout(c.timeout),c.hoverState=\"in\",c.options.delay&&c.options.delay.show?void(c.timeout=setTimeout(function(){\"in\"==c.hoverState&&c.show()},c.options.delay.show)):c.show())},c.prototype.isInStateTrue=function(){for(var a in this.inState)if(this.inState[a])return!0;return!1},c.prototype.leave=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data(\"bs.\"+this.type);return c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\"bs.\"+this.type,c)),b instanceof a.Event&&(c.inState[\"focusout\"==b.type?\"focus\":\"hover\"]=!1),c.isInStateTrue()?void 0:(clearTimeout(c.timeout),c.hoverState=\"out\",c.options.delay&&c.options.delay.hide?void(c.timeout=setTimeout(function(){\"out\"==c.hoverState&&c.hide()},c.options.delay.hide)):c.hide())},c.prototype.show=function(){var b=a.Event(\"show.bs.\"+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(b);var d=a.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]);if(b.isDefaultPrevented()||!d)return;var e=this,f=this.tip(),g=this.getUID(this.type);this.setContent(),f.attr(\"id\",g),this.$element.attr(\"aria-describedby\",g),this.options.animation&&f.addClass(\"fade\");var h=\"function\"==typeof this.options.placement?this.options.placement.call(this,f[0],this.$element[0]):this.options.placement,i=/\\s?auto?\\s?/i,j=i.test(h);j&&(h=h.replace(i,\"\")||\"top\"),f.detach().css({top:0,left:0,display:\"block\"}).addClass(h).data(\"bs.\"+this.type,this),this.options.container?f.appendTo(this.options.container):f.insertAfter(this.$element),this.$element.trigger(\"inserted.bs.\"+this.type);var k=this.getPosition(),l=f[0].offsetWidth,m=f[0].offsetHeight;if(j){var n=h,o=this.getPosition(this.$viewport);h=\"bottom\"==h&&k.bottom+m>o.bottom?\"top\":\"top\"==h&&k.top-m<o.top?\"bottom\":\"right\"==h&&k.right+l>o.width?\"left\":\"left\"==h&&k.left-l<o.left?\"right\":h,f.removeClass(n).addClass(h)}var p=this.getCalculatedOffset(h,k,l,m);this.applyPlacement(p,h);var q=function(){var a=e.hoverState;e.$element.trigger(\"shown.bs.\"+e.type),e.hoverState=null,\"out\"==a&&e.leave(e)};a.support.transition&&this.$tip.hasClass(\"fade\")?f.one(\"bsTransitionEnd\",q).emulateTransitionEnd(c.TRANSITION_DURATION):q()}},c.prototype.applyPlacement=function(b,c){var d=this.tip(),e=d[0].offsetWidth,f=d[0].offsetHeight,g=parseInt(d.css(\"margin-top\"),10),h=parseInt(d.css(\"margin-left\"),10);isNaN(g)&&(g=0),isNaN(h)&&(h=0),b.top+=g,b.left+=h,a.offset.setOffset(d[0],a.extend({using:function(a){d.css({top:Math.round(a.top),left:Math.round(a.left)})}},b),0),d.addClass(\"in\");var i=d[0].offsetWidth,j=d[0].offsetHeight;\"top\"==c&&j!=f&&(b.top=b.top+f-j);var k=this.getViewportAdjustedDelta(c,b,i,j);k.left?b.left+=k.left:b.top+=k.top;var l=/top|bottom/.test(c),m=l?2*k.left-e+i:2*k.top-f+j,n=l?\"offsetWidth\":\"offsetHeight\";d.offset(b),this.replaceArrow(m,d[0][n],l)},c.prototype.replaceArrow=function(a,b,c){this.arrow().css(c?\"left\":\"top\",50*(1-a/b)+\"%\").css(c?\"top\":\"left\",\"\")},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle();a.find(\".tooltip-inner\")[this.options.html?\"html\":\"text\"](b),a.removeClass(\"fade in top bottom left right\")},c.prototype.hide=function(b){function d(){\"in\"!=e.hoverState&&f.detach(),e.$element.removeAttr(\"aria-describedby\").trigger(\"hidden.bs.\"+e.type),b&&b()}var e=this,f=a(this.$tip),g=a.Event(\"hide.bs.\"+this.type);return this.$element.trigger(g),g.isDefaultPrevented()?void 0:(f.removeClass(\"in\"),a.support.transition&&f.hasClass(\"fade\")?f.one(\"bsTransitionEnd\",d).emulateTransitionEnd(c.TRANSITION_DURATION):d(),this.hoverState=null,this)},c.prototype.fixTitle=function(){var a=this.$element;(a.attr(\"title\")||\"string\"!=typeof a.attr(\"data-original-title\"))&&a.attr(\"data-original-title\",a.attr(\"title\")||\"\").attr(\"title\",\"\")},c.prototype.hasContent=function(){return this.getTitle()},c.prototype.getPosition=function(b){b=b||this.$element;var c=b[0],d=\"BODY\"==c.tagName,e=c.getBoundingClientRect();null==e.width&&(e=a.extend({},e,{width:e.right-e.left,height:e.bottom-e.top}));var f=d?{top:0,left:0}:b.offset(),g={scroll:d?document.documentElement.scrollTop||document.body.scrollTop:b.scrollTop()},h=d?{width:a(window).width(),height:a(window).height()}:null;return a.extend({},e,g,h,f)},c.prototype.getCalculatedOffset=function(a,b,c,d){return\"bottom\"==a?{top:b.top+b.height,left:b.left+b.width/2-c/2}:\"top\"==a?{top:b.top-d,left:b.left+b.width/2-c/2}:\"left\"==a?{top:b.top+b.height/2-d/2,left:b.left-c}:{top:b.top+b.height/2-d/2,left:b.left+b.width}},c.prototype.getViewportAdjustedDelta=function(a,b,c,d){var e={top:0,left:0};if(!this.$viewport)return e;var f=this.options.viewport&&this.options.viewport.padding||0,g=this.getPosition(this.$viewport);if(/right|left/.test(a)){var h=b.top-f-g.scroll,i=b.top+f-g.scroll+d;h<g.top?e.top=g.top-h:i>g.top+g.height&&(e.top=g.top+g.height-i)}else{var j=b.left-f,k=b.left+f+c;j<g.left?e.left=g.left-j:k>g.right&&(e.left=g.left+g.width-k)}return e},c.prototype.getTitle=function(){var a,b=this.$element,c=this.options;return a=b.attr(\"data-original-title\")||(\"function\"==typeof c.title?c.title.call(b[0]):c.title)},c.prototype.getUID=function(a){do a+=~~(1e6*Math.random());while(document.getElementById(a));return a},c.prototype.tip=function(){if(!this.$tip&&(this.$tip=a(this.options.template),1!=this.$tip.length))throw new Error(this.type+\" `template` option must consist of exactly 1 top-level element!\");return this.$tip},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(\".tooltip-arrow\")},c.prototype.enable=function(){this.enabled=!0},c.prototype.disable=function(){this.enabled=!1},c.prototype.toggleEnabled=function(){this.enabled=!this.enabled},c.prototype.toggle=function(b){var c=this;b&&(c=a(b.currentTarget).data(\"bs.\"+this.type),c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\"bs.\"+this.type,c))),b?(c.inState.click=!c.inState.click,c.isInStateTrue()?c.enter(c):c.leave(c)):c.tip().hasClass(\"in\")?c.leave(c):c.enter(c)},c.prototype.destroy=function(){var a=this;clearTimeout(this.timeout),this.hide(function(){a.$element.off(\".\"+a.type).removeData(\"bs.\"+a.type),a.$tip&&a.$tip.detach(),a.$tip=null,a.$arrow=null,a.$viewport=null})};var d=a.fn.tooltip;a.fn.tooltip=b,a.fn.tooltip.Constructor=c,a.fn.tooltip.noConflict=function(){return a.fn.tooltip=d,this}}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.popover\"),f=\"object\"==typeof b&&b;(e||!/destroy|hide/.test(b))&&(e||d.data(\"bs.popover\",e=new c(this,f)),\"string\"==typeof b&&e[b]())})}var c=function(a,b){this.init(\"popover\",a,b)};if(!a.fn.tooltip)throw new Error(\"Popover requires tooltip.js\");c.VERSION=\"3.3.6\",c.DEFAULTS=a.extend({},a.fn.tooltip.Constructor.DEFAULTS,{placement:\"right\",trigger:\"click\",content:\"\",template:'<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'}),c.prototype=a.extend({},a.fn.tooltip.Constructor.prototype),c.prototype.constructor=c,c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle(),c=this.getContent();a.find(\".popover-title\")[this.options.html?\"html\":\"text\"](b),a.find(\".popover-content\").children().detach().end()[this.options.html?\"string\"==typeof c?\"html\":\"append\":\"text\"](c),a.removeClass(\"fade top bottom left right in\"),a.find(\".popover-title\").html()||a.find(\".popover-title\").hide()},c.prototype.hasContent=function(){return this.getTitle()||this.getContent()},c.prototype.getContent=function(){var a=this.$element,b=this.options;return a.attr(\"data-content\")||(\"function\"==typeof b.content?b.content.call(a[0]):b.content)},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(\".arrow\")};var d=a.fn.popover;a.fn.popover=b,a.fn.popover.Constructor=c,a.fn.popover.noConflict=function(){return a.fn.popover=d,this}}(jQuery),+function(a){\"use strict\";function b(c,d){this.$body=a(document.body),this.$scrollElement=a(a(c).is(document.body)?window:c),this.options=a.extend({},b.DEFAULTS,d),this.selector=(this.options.target||\"\")+\" .nav li > a\",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on(\"scroll.bs.scrollspy\",a.proxy(this.process,this)),this.refresh(),this.process()}function c(c){return this.each(function(){var d=a(this),e=d.data(\"bs.scrollspy\"),f=\"object\"==typeof c&&c;e||d.data(\"bs.scrollspy\",e=new b(this,f)),\"string\"==typeof c&&e[c]()})}b.VERSION=\"3.3.6\",b.DEFAULTS={offset:10},b.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},b.prototype.refresh=function(){var b=this,c=\"offset\",d=0;this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight(),a.isWindow(this.$scrollElement[0])||(c=\"position\",d=this.$scrollElement.scrollTop()),this.$body.find(this.selector).map(function(){var b=a(this),e=b.data(\"target\")||b.attr(\"href\"),f=/^#./.test(e)&&a(e);return f&&f.length&&f.is(\":visible\")&&[[f[c]().top+d,e]]||null}).sort(function(a,b){return a[0]-b[0]}).each(function(){b.offsets.push(this[0]),b.targets.push(this[1])})},b.prototype.process=function(){var a,b=this.$scrollElement.scrollTop()+this.options.offset,c=this.getScrollHeight(),d=this.options.offset+c-this.$scrollElement.height(),e=this.offsets,f=this.targets,g=this.activeTarget;if(this.scrollHeight!=c&&this.refresh(),b>=d)return g!=(a=f[f.length-1])&&this.activate(a);if(g&&b<e[0])return this.activeTarget=null,this.clear();for(a=e.length;a--;)g!=f[a]&&b>=e[a]&&(void 0===e[a+1]||b<e[a+1])&&this.activate(f[a])},b.prototype.activate=function(b){this.activeTarget=b,this.clear();var c=this.selector+'[data-target=\"'+b+'\"],'+this.selector+'[href=\"'+b+'\"]',d=a(c).parents(\"li\").addClass(\"active\");\r\n    d.parent(\".dropdown-menu\").length&&(d=d.closest(\"li.dropdown\").addClass(\"active\")),d.trigger(\"activate.bs.scrollspy\")},b.prototype.clear=function(){a(this.selector).parentsUntil(this.options.target,\".active\").removeClass(\"active\")};var d=a.fn.scrollspy;a.fn.scrollspy=c,a.fn.scrollspy.Constructor=b,a.fn.scrollspy.noConflict=function(){return a.fn.scrollspy=d,this},a(window).on(\"load.bs.scrollspy.data-api\",function(){a('[data-spy=\"scroll\"]').each(function(){var b=a(this);c.call(b,b.data())})})}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.tab\");e||d.data(\"bs.tab\",e=new c(this)),\"string\"==typeof b&&e[b]()})}var c=function(b){this.element=a(b)};c.VERSION=\"3.3.6\",c.TRANSITION_DURATION=150,c.prototype.show=function(){var b=this.element,c=b.closest(\"ul:not(.dropdown-menu)\"),d=b.data(\"target\");if(d||(d=b.attr(\"href\"),d=d&&d.replace(/.*(?=#[^\\s]*$)/,\"\")),!b.parent(\"li\").hasClass(\"active\")){var e=c.find(\".active:last a\"),f=a.Event(\"hide.bs.tab\",{relatedTarget:b[0]}),g=a.Event(\"show.bs.tab\",{relatedTarget:e[0]});if(e.trigger(f),b.trigger(g),!g.isDefaultPrevented()&&!f.isDefaultPrevented()){var h=a(d);this.activate(b.closest(\"li\"),c),this.activate(h,h.parent(),function(){e.trigger({type:\"hidden.bs.tab\",relatedTarget:b[0]}),b.trigger({type:\"shown.bs.tab\",relatedTarget:e[0]})})}}},c.prototype.activate=function(b,d,e){function f(){g.removeClass(\"active\").find(\"> .dropdown-menu > .active\").removeClass(\"active\").end().find('[data-toggle=\"tab\"]').attr(\"aria-expanded\",!1),b.addClass(\"active\").find('[data-toggle=\"tab\"]').attr(\"aria-expanded\",!0),h?(b[0].offsetWidth,b.addClass(\"in\")):b.removeClass(\"fade\"),b.parent(\".dropdown-menu\").length&&b.closest(\"li.dropdown\").addClass(\"active\").end().find('[data-toggle=\"tab\"]').attr(\"aria-expanded\",!0),e&&e()}var g=d.find(\"> .active\"),h=e&&a.support.transition&&(g.length&&g.hasClass(\"fade\")||!!d.find(\"> .fade\").length);g.length&&h?g.one(\"bsTransitionEnd\",f).emulateTransitionEnd(c.TRANSITION_DURATION):f(),g.removeClass(\"in\")};var d=a.fn.tab;a.fn.tab=b,a.fn.tab.Constructor=c,a.fn.tab.noConflict=function(){return a.fn.tab=d,this};var e=function(c){c.preventDefault(),b.call(a(this),\"show\")};a(document).on(\"click.bs.tab.data-api\",'[data-toggle=\"tab\"]',e).on(\"click.bs.tab.data-api\",'[data-toggle=\"pill\"]',e)}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.affix\"),f=\"object\"==typeof b&&b;e||d.data(\"bs.affix\",e=new c(this,f)),\"string\"==typeof b&&e[b]()})}var c=function(b,d){this.options=a.extend({},c.DEFAULTS,d),this.$target=a(this.options.target).on(\"scroll.bs.affix.data-api\",a.proxy(this.checkPosition,this)).on(\"click.bs.affix.data-api\",a.proxy(this.checkPositionWithEventLoop,this)),this.$element=a(b),this.affixed=null,this.unpin=null,this.pinnedOffset=null,this.checkPosition()};c.VERSION=\"3.3.6\",c.RESET=\"affix affix-top affix-bottom\",c.DEFAULTS={offset:0,target:window},c.prototype.getState=function(a,b,c,d){var e=this.$target.scrollTop(),f=this.$element.offset(),g=this.$target.height();if(null!=c&&\"top\"==this.affixed)return c>e?\"top\":!1;if(\"bottom\"==this.affixed)return null!=c?e+this.unpin<=f.top?!1:\"bottom\":a-d>=e+g?!1:\"bottom\";var h=null==this.affixed,i=h?e:f.top,j=h?g:b;return null!=c&&c>=e?\"top\":null!=d&&i+j>=a-d?\"bottom\":!1},c.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(c.RESET).addClass(\"affix\");var a=this.$target.scrollTop(),b=this.$element.offset();return this.pinnedOffset=b.top-a},c.prototype.checkPositionWithEventLoop=function(){setTimeout(a.proxy(this.checkPosition,this),1)},c.prototype.checkPosition=function(){if(this.$element.is(\":visible\")){var b=this.$element.height(),d=this.options.offset,e=d.top,f=d.bottom,g=Math.max(a(document).height(),a(document.body).height());\"object\"!=typeof d&&(f=e=d),\"function\"==typeof e&&(e=d.top(this.$element)),\"function\"==typeof f&&(f=d.bottom(this.$element));var h=this.getState(g,b,e,f);if(this.affixed!=h){null!=this.unpin&&this.$element.css(\"top\",\"\");var i=\"affix\"+(h?\"-\"+h:\"\"),j=a.Event(i+\".bs.affix\");if(this.$element.trigger(j),j.isDefaultPrevented())return;this.affixed=h,this.unpin=\"bottom\"==h?this.getPinnedOffset():null,this.$element.removeClass(c.RESET).addClass(i).trigger(i.replace(\"affix\",\"affixed\")+\".bs.affix\")}\"bottom\"==h&&this.$element.offset({top:g-b-f})}};var d=a.fn.affix;a.fn.affix=b,a.fn.affix.Constructor=c,a.fn.affix.noConflict=function(){return a.fn.affix=d,this},a(window).on(\"load\",function(){a('[data-spy=\"affix\"]').each(function(){var c=a(this),d=c.data();d.offset=d.offset||{},null!=d.offsetBottom&&(d.offset.bottom=d.offsetBottom),null!=d.offsetTop&&(d.offset.top=d.offsetTop),b.call(c,d)})})}(jQuery);","Mageplaza_Core/js/ion.rangeSlider.min.js":"// Ion.RangeSlider | version 2.1.6 | https://github.com/IonDen/ion.rangeSlider\r\n;(function(f){\"function\"===typeof define&&define.amd?define([\"jquery\"],function(p){return f(p,document,window,navigator)}):\"object\"===typeof exports?f(require(\"jquery\"),document,window,navigator):f(jQuery,document,window,navigator)})(function(f,p,h,t,q){var u=0,m=function(){var a=t.userAgent,b=/msie\\s\\d+/i;return 0<a.search(b)&&(a=b.exec(a).toString(),a=a.split(\" \")[1],9>a)?(f(\"html\").addClass(\"lt-ie9\"),!0):!1}();Function.prototype.bind||(Function.prototype.bind=function(a){var b=this,d=[].slice;if(\"function\"!=\r\n    typeof b)throw new TypeError;var c=d.call(arguments,1),e=function(){if(this instanceof e){var g=function(){};g.prototype=b.prototype;var g=new g,l=b.apply(g,c.concat(d.call(arguments)));return Object(l)===l?l:g}return b.apply(a,c.concat(d.call(arguments)))};return e});Array.prototype.indexOf||(Array.prototype.indexOf=function(a,b){var d;if(null==this)throw new TypeError('\"this\" is null or not defined');var c=Object(this),e=c.length>>>0;if(0===e)return-1;d=+b||0;Infinity===Math.abs(d)&&(d=0);if(d>=\r\n    e)return-1;for(d=Math.max(0<=d?d:e-Math.abs(d),0);d<e;){if(d in c&&c[d]===a)return d;d++}return-1});var r=function(a,b,d){this.VERSION=\"2.1.6\";this.input=a;this.plugin_count=d;this.old_to=this.old_from=this.update_tm=this.calc_count=this.current_plugin=0;this.raf_id=this.old_min_interval=null;this.is_update=this.is_key=this.no_diapason=this.force_redraw=this.dragging=!1;this.is_start=this.is_first_update=!0;this.is_click=this.is_resize=this.is_active=this.is_finish=!1;b=b||{};this.$cache={win:f(h),\r\n    body:f(p.body),input:f(a),cont:null,rs:null,min:null,max:null,from:null,to:null,single:null,bar:null,line:null,s_single:null,s_from:null,s_to:null,shad_single:null,shad_from:null,shad_to:null,edge:null,grid:null,grid_labels:[]};this.coords={x_gap:0,x_pointer:0,w_rs:0,w_rs_old:0,w_handle:0,p_gap:0,p_gap_left:0,p_gap_right:0,p_step:0,p_pointer:0,p_handle:0,p_single_fake:0,p_single_real:0,p_from_fake:0,p_from_real:0,p_to_fake:0,p_to_real:0,p_bar_x:0,p_bar_w:0,grid_gap:0,big_num:0,big:[],big_w:[],big_p:[],\r\n    big_x:[]};this.labels={w_min:0,w_max:0,w_from:0,w_to:0,w_single:0,p_min:0,p_max:0,p_from_fake:0,p_from_left:0,p_to_fake:0,p_to_left:0,p_single_fake:0,p_single_left:0};var c=this.$cache.input;a=c.prop(\"value\");var e;d={type:\"single\",min:10,max:100,from:null,to:null,step:1,min_interval:0,max_interval:0,drag_interval:!1,values:[],p_values:[],from_fixed:!1,from_min:null,from_max:null,from_shadow:!1,to_fixed:!1,to_min:null,to_max:null,to_shadow:!1,prettify_enabled:!0,prettify_separator:\" \",prettify:null,\r\n    force_edges:!1,keyboard:!1,keyboard_step:5,grid:!1,grid_margin:!0,grid_num:4,grid_snap:!1,hide_min_max:!1,hide_from_to:!1,prefix:\"\",postfix:\"\",max_postfix:\"\",decorate_both:!0,values_separator:\" \\u2014 \",input_values_separator:\";\",disable:!1,onStart:null,onChange:null,onFinish:null,onUpdate:null};\"INPUT\"!==c[0].nodeName&&console&&console.warn&&console.warn(\"Base element should be <input>!\",c[0]);c={type:c.data(\"type\"),min:c.data(\"min\"),max:c.data(\"max\"),from:c.data(\"from\"),to:c.data(\"to\"),step:c.data(\"step\"),\r\n    min_interval:c.data(\"minInterval\"),max_interval:c.data(\"maxInterval\"),drag_interval:c.data(\"dragInterval\"),values:c.data(\"values\"),from_fixed:c.data(\"fromFixed\"),from_min:c.data(\"fromMin\"),from_max:c.data(\"fromMax\"),from_shadow:c.data(\"fromShadow\"),to_fixed:c.data(\"toFixed\"),to_min:c.data(\"toMin\"),to_max:c.data(\"toMax\"),to_shadow:c.data(\"toShadow\"),prettify_enabled:c.data(\"prettifyEnabled\"),prettify_separator:c.data(\"prettifySeparator\"),force_edges:c.data(\"forceEdges\"),keyboard:c.data(\"keyboard\"),\r\n    keyboard_step:c.data(\"keyboardStep\"),grid:c.data(\"grid\"),grid_margin:c.data(\"gridMargin\"),grid_num:c.data(\"gridNum\"),grid_snap:c.data(\"gridSnap\"),hide_min_max:c.data(\"hideMinMax\"),hide_from_to:c.data(\"hideFromTo\"),prefix:c.data(\"prefix\"),postfix:c.data(\"postfix\"),max_postfix:c.data(\"maxPostfix\"),decorate_both:c.data(\"decorateBoth\"),values_separator:c.data(\"valuesSeparator\"),input_values_separator:c.data(\"inputValuesSeparator\"),disable:c.data(\"disable\")};c.values=c.values&&c.values.split(\",\");for(e in c)c.hasOwnProperty(e)&&\r\n(c[e]!==q&&\"\"!==c[e]||delete c[e]);a!==q&&\"\"!==a&&(a=a.split(c.input_values_separator||b.input_values_separator||\";\"),a[0]&&a[0]==+a[0]&&(a[0]=+a[0]),a[1]&&a[1]==+a[1]&&(a[1]=+a[1]),b&&b.values&&b.values.length?(d.from=a[0]&&b.values.indexOf(a[0]),d.to=a[1]&&b.values.indexOf(a[1])):(d.from=a[0]&&+a[0],d.to=a[1]&&+a[1]));f.extend(d,b);f.extend(d,c);this.options=d;this.update_check={};this.validate();this.result={input:this.$cache.input,slider:null,min:this.options.min,max:this.options.max,from:this.options.from,\r\n    from_percent:0,from_value:null,to:this.options.to,to_percent:0,to_value:null};this.init()};r.prototype={init:function(a){this.no_diapason=!1;this.coords.p_step=this.convertToPercent(this.options.step,!0);this.target=\"base\";this.toggleInput();this.append();this.setMinMax();a?(this.force_redraw=!0,this.calc(!0),this.callOnUpdate()):(this.force_redraw=!0,this.calc(!0),this.callOnStart());this.updateScene()},append:function(){this.$cache.input.before('<span class=\"irs js-irs-'+this.plugin_count+'\"></span>');\r\n        this.$cache.input.prop(\"readonly\",!0);this.$cache.cont=this.$cache.input.prev();this.result.slider=this.$cache.cont;this.$cache.cont.html('<span class=\"irs\"><span class=\"irs-line\" tabindex=\"-1\"><span class=\"irs-line-left\"></span><span class=\"irs-line-mid\"></span><span class=\"irs-line-right\"></span></span><span class=\"irs-min\">0</span><span class=\"irs-max\">1</span><span class=\"irs-from\">0</span><span class=\"irs-to\">0</span><span class=\"irs-single\">0</span></span><span class=\"irs-grid\"></span><span class=\"irs-bar\"></span>');\r\n        this.$cache.rs=this.$cache.cont.find(\".irs\");this.$cache.min=this.$cache.cont.find(\".irs-min\");this.$cache.max=this.$cache.cont.find(\".irs-max\");this.$cache.from=this.$cache.cont.find(\".irs-from\");this.$cache.to=this.$cache.cont.find(\".irs-to\");this.$cache.single=this.$cache.cont.find(\".irs-single\");this.$cache.bar=this.$cache.cont.find(\".irs-bar\");this.$cache.line=this.$cache.cont.find(\".irs-line\");this.$cache.grid=this.$cache.cont.find(\".irs-grid\");\"single\"===this.options.type?(this.$cache.cont.append('<span class=\"irs-bar-edge\"></span><span class=\"irs-shadow shadow-single\"></span><span class=\"irs-slider single\"></span>'),\r\n            this.$cache.edge=this.$cache.cont.find(\".irs-bar-edge\"),this.$cache.s_single=this.$cache.cont.find(\".single\"),this.$cache.from[0].style.visibility=\"hidden\",this.$cache.to[0].style.visibility=\"hidden\",this.$cache.shad_single=this.$cache.cont.find(\".shadow-single\")):(this.$cache.cont.append('<span class=\"irs-shadow shadow-from\"></span><span class=\"irs-shadow shadow-to\"></span><span class=\"irs-slider from\"></span><span class=\"irs-slider to\"></span>'),this.$cache.s_from=this.$cache.cont.find(\".from\"),\r\n            this.$cache.s_to=this.$cache.cont.find(\".to\"),this.$cache.shad_from=this.$cache.cont.find(\".shadow-from\"),this.$cache.shad_to=this.$cache.cont.find(\".shadow-to\"),this.setTopHandler());this.options.hide_from_to&&(this.$cache.from[0].style.display=\"none\",this.$cache.to[0].style.display=\"none\",this.$cache.single[0].style.display=\"none\");this.appendGrid();this.options.disable?(this.appendDisableMask(),this.$cache.input[0].disabled=!0):(this.$cache.cont.removeClass(\"irs-disabled\"),this.$cache.input[0].disabled=\r\n            !1,this.bindEvents());this.options.drag_interval&&(this.$cache.bar[0].style.cursor=\"ew-resize\")},setTopHandler:function(){var a=this.options.max,b=this.options.to;this.options.from>this.options.min&&b===a?this.$cache.s_from.addClass(\"type_last\"):b<a&&this.$cache.s_to.addClass(\"type_last\")},changeLevel:function(a){switch(a){case \"single\":this.coords.p_gap=this.toFixed(this.coords.p_pointer-this.coords.p_single_fake);break;case \"from\":this.coords.p_gap=this.toFixed(this.coords.p_pointer-this.coords.p_from_fake);\r\n        this.$cache.s_from.addClass(\"state_hover\");this.$cache.s_from.addClass(\"type_last\");this.$cache.s_to.removeClass(\"type_last\");break;case \"to\":this.coords.p_gap=this.toFixed(this.coords.p_pointer-this.coords.p_to_fake);this.$cache.s_to.addClass(\"state_hover\");this.$cache.s_to.addClass(\"type_last\");this.$cache.s_from.removeClass(\"type_last\");break;case \"both\":this.coords.p_gap_left=this.toFixed(this.coords.p_pointer-this.coords.p_from_fake),this.coords.p_gap_right=this.toFixed(this.coords.p_to_fake-\r\n        this.coords.p_pointer),this.$cache.s_to.removeClass(\"type_last\"),this.$cache.s_from.removeClass(\"type_last\")}},appendDisableMask:function(){this.$cache.cont.append('<span class=\"irs-disable-mask\"></span>');this.$cache.cont.addClass(\"irs-disabled\")},remove:function(){this.$cache.cont.remove();this.$cache.cont=null;this.$cache.line.off(\"keydown.irs_\"+this.plugin_count);this.$cache.body.off(\"touchmove.irs_\"+this.plugin_count);this.$cache.body.off(\"mousemove.irs_\"+this.plugin_count);this.$cache.win.off(\"touchend.irs_\"+\r\n        this.plugin_count);this.$cache.win.off(\"mouseup.irs_\"+this.plugin_count);m&&(this.$cache.body.off(\"mouseup.irs_\"+this.plugin_count),this.$cache.body.off(\"mouseleave.irs_\"+this.plugin_count));this.$cache.grid_labels=[];this.coords.big=[];this.coords.big_w=[];this.coords.big_p=[];this.coords.big_x=[];cancelAnimationFrame(this.raf_id)},bindEvents:function(){if(!this.no_diapason){this.$cache.body.on(\"touchmove.irs_\"+this.plugin_count,this.pointerMove.bind(this));this.$cache.body.on(\"mousemove.irs_\"+this.plugin_count,\r\n        this.pointerMove.bind(this));this.$cache.win.on(\"touchend.irs_\"+this.plugin_count,this.pointerUp.bind(this));this.$cache.win.on(\"mouseup.irs_\"+this.plugin_count,this.pointerUp.bind(this));this.$cache.line.on(\"touchstart.irs_\"+this.plugin_count,this.pointerClick.bind(this,\"click\"));this.$cache.line.on(\"mousedown.irs_\"+this.plugin_count,this.pointerClick.bind(this,\"click\"));this.options.drag_interval&&\"double\"===this.options.type?(this.$cache.bar.on(\"touchstart.irs_\"+this.plugin_count,this.pointerDown.bind(this,\r\n        \"both\")),this.$cache.bar.on(\"mousedown.irs_\"+this.plugin_count,this.pointerDown.bind(this,\"both\"))):(this.$cache.bar.on(\"touchstart.irs_\"+this.plugin_count,this.pointerClick.bind(this,\"click\")),this.$cache.bar.on(\"mousedown.irs_\"+this.plugin_count,this.pointerClick.bind(this,\"click\")));\"single\"===this.options.type?(this.$cache.single.on(\"touchstart.irs_\"+this.plugin_count,this.pointerDown.bind(this,\"single\")),this.$cache.s_single.on(\"touchstart.irs_\"+this.plugin_count,this.pointerDown.bind(this,\"single\")),\r\n        this.$cache.shad_single.on(\"touchstart.irs_\"+this.plugin_count,this.pointerClick.bind(this,\"click\")),this.$cache.single.on(\"mousedown.irs_\"+this.plugin_count,this.pointerDown.bind(this,\"single\")),this.$cache.s_single.on(\"mousedown.irs_\"+this.plugin_count,this.pointerDown.bind(this,\"single\")),this.$cache.edge.on(\"mousedown.irs_\"+this.plugin_count,this.pointerClick.bind(this,\"click\")),this.$cache.shad_single.on(\"mousedown.irs_\"+this.plugin_count,this.pointerClick.bind(this,\"click\"))):(this.$cache.single.on(\"touchstart.irs_\"+\r\n        this.plugin_count,this.pointerDown.bind(this,null)),this.$cache.single.on(\"mousedown.irs_\"+this.plugin_count,this.pointerDown.bind(this,null)),this.$cache.from.on(\"touchstart.irs_\"+this.plugin_count,this.pointerDown.bind(this,\"from\")),this.$cache.s_from.on(\"touchstart.irs_\"+this.plugin_count,this.pointerDown.bind(this,\"from\")),this.$cache.to.on(\"touchstart.irs_\"+this.plugin_count,this.pointerDown.bind(this,\"to\")),this.$cache.s_to.on(\"touchstart.irs_\"+this.plugin_count,this.pointerDown.bind(this,\"to\")),\r\n        this.$cache.shad_from.on(\"touchstart.irs_\"+this.plugin_count,this.pointerClick.bind(this,\"click\")),this.$cache.shad_to.on(\"touchstart.irs_\"+this.plugin_count,this.pointerClick.bind(this,\"click\")),this.$cache.from.on(\"mousedown.irs_\"+this.plugin_count,this.pointerDown.bind(this,\"from\")),this.$cache.s_from.on(\"mousedown.irs_\"+this.plugin_count,this.pointerDown.bind(this,\"from\")),this.$cache.to.on(\"mousedown.irs_\"+this.plugin_count,this.pointerDown.bind(this,\"to\")),this.$cache.s_to.on(\"mousedown.irs_\"+\r\n        this.plugin_count,this.pointerDown.bind(this,\"to\")),this.$cache.shad_from.on(\"mousedown.irs_\"+this.plugin_count,this.pointerClick.bind(this,\"click\")),this.$cache.shad_to.on(\"mousedown.irs_\"+this.plugin_count,this.pointerClick.bind(this,\"click\")));if(this.options.keyboard)this.$cache.line.on(\"keydown.irs_\"+this.plugin_count,this.key.bind(this,\"keyboard\"));m&&(this.$cache.body.on(\"mouseup.irs_\"+this.plugin_count,this.pointerUp.bind(this)),this.$cache.body.on(\"mouseleave.irs_\"+this.plugin_count,this.pointerUp.bind(this)))}},\r\n    pointerMove:function(a){this.dragging&&(this.coords.x_pointer=(a.pageX||a.originalEvent.touches&&a.originalEvent.touches[0].pageX)-this.coords.x_gap,this.calc())},pointerUp:function(a){this.current_plugin===this.plugin_count&&this.is_active&&(this.is_active=!1,this.$cache.cont.find(\".state_hover\").removeClass(\"state_hover\"),this.force_redraw=!0,m&&f(\"*\").prop(\"unselectable\",!1),this.updateScene(),this.restoreOriginalMinInterval(),(f.contains(this.$cache.cont[0],a.target)||this.dragging)&&this.callOnFinish(),\r\n        this.dragging=!1)},pointerDown:function(a,b){b.preventDefault();var d=b.pageX||b.originalEvent.touches&&b.originalEvent.touches[0].pageX;2!==b.button&&(\"both\"===a&&this.setTempMinInterval(),a||(a=this.target||\"from\"),this.current_plugin=this.plugin_count,this.target=a,this.dragging=this.is_active=!0,this.coords.x_gap=this.$cache.rs.offset().left,this.coords.x_pointer=d-this.coords.x_gap,this.calcPointerPercent(),this.changeLevel(a),m&&f(\"*\").prop(\"unselectable\",!0),this.$cache.line.trigger(\"focus\"),\r\n        this.updateScene())},pointerClick:function(a,b){b.preventDefault();var d=b.pageX||b.originalEvent.touches&&b.originalEvent.touches[0].pageX;2!==b.button&&(this.current_plugin=this.plugin_count,this.target=a,this.is_click=!0,this.coords.x_gap=this.$cache.rs.offset().left,this.coords.x_pointer=+(d-this.coords.x_gap).toFixed(),this.force_redraw=!0,this.calc(),this.$cache.line.trigger(\"focus\"))},key:function(a,b){if(!(this.current_plugin!==this.plugin_count||b.altKey||b.ctrlKey||b.shiftKey||b.metaKey)){switch(b.which){case 83:case 65:case 40:case 37:b.preventDefault();\r\n        this.moveByKey(!1);break;case 87:case 68:case 38:case 39:b.preventDefault(),this.moveByKey(!0)}return!0}},moveByKey:function(a){var b=this.coords.p_pointer,b=a?b+this.options.keyboard_step:b-this.options.keyboard_step;this.coords.x_pointer=this.toFixed(this.coords.w_rs/100*b);this.is_key=!0;this.calc()},setMinMax:function(){this.options&&(this.options.hide_min_max?(this.$cache.min[0].style.display=\"none\",this.$cache.max[0].style.display=\"none\"):(this.options.values.length?(this.$cache.min.html(this.decorate(this.options.p_values[this.options.min])),\r\n        this.$cache.max.html(this.decorate(this.options.p_values[this.options.max]))):(this.$cache.min.html(this.decorate(this._prettify(this.options.min),this.options.min)),this.$cache.max.html(this.decorate(this._prettify(this.options.max),this.options.max))),this.labels.w_min=this.$cache.min.outerWidth(!1),this.labels.w_max=this.$cache.max.outerWidth(!1)))},setTempMinInterval:function(){var a=this.result.to-this.result.from;null===this.old_min_interval&&(this.old_min_interval=this.options.min_interval);\r\n        this.options.min_interval=a},restoreOriginalMinInterval:function(){null!==this.old_min_interval&&(this.options.min_interval=this.old_min_interval,this.old_min_interval=null)},calc:function(a){if(this.options){this.calc_count++;if(10===this.calc_count||a)this.calc_count=0,this.coords.w_rs=this.$cache.rs.outerWidth(!1),this.calcHandlePercent();if(this.coords.w_rs){this.calcPointerPercent();a=this.getHandleX();\"both\"===this.target&&(this.coords.p_gap=0,a=this.getHandleX());\"click\"===this.target&&(this.coords.p_gap=\r\n        this.coords.p_handle/2,a=this.getHandleX(),this.target=this.options.drag_interval?\"both_one\":this.chooseHandle(a));switch(this.target){case \"base\":var b=(this.options.max-this.options.min)/100;a=(this.result.from-this.options.min)/b;b=(this.result.to-this.options.min)/b;this.coords.p_single_real=this.toFixed(a);this.coords.p_from_real=this.toFixed(a);this.coords.p_to_real=this.toFixed(b);this.coords.p_single_real=this.checkDiapason(this.coords.p_single_real,this.options.from_min,this.options.from_max);\r\n        this.coords.p_from_real=this.checkDiapason(this.coords.p_from_real,this.options.from_min,this.options.from_max);this.coords.p_to_real=this.checkDiapason(this.coords.p_to_real,this.options.to_min,this.options.to_max);this.coords.p_single_fake=this.convertToFakePercent(this.coords.p_single_real);this.coords.p_from_fake=this.convertToFakePercent(this.coords.p_from_real);this.coords.p_to_fake=this.convertToFakePercent(this.coords.p_to_real);this.target=null;break;case \"single\":if(this.options.from_fixed)break;\r\n        this.coords.p_single_real=this.convertToRealPercent(a);this.coords.p_single_real=this.calcWithStep(this.coords.p_single_real);this.coords.p_single_real=this.checkDiapason(this.coords.p_single_real,this.options.from_min,this.options.from_max);this.coords.p_single_fake=this.convertToFakePercent(this.coords.p_single_real);break;case \"from\":if(this.options.from_fixed)break;this.coords.p_from_real=this.convertToRealPercent(a);this.coords.p_from_real=this.calcWithStep(this.coords.p_from_real);this.coords.p_from_real>\r\n    this.coords.p_to_real&&(this.coords.p_from_real=this.coords.p_to_real);this.coords.p_from_real=this.checkDiapason(this.coords.p_from_real,this.options.from_min,this.options.from_max);this.coords.p_from_real=this.checkMinInterval(this.coords.p_from_real,this.coords.p_to_real,\"from\");this.coords.p_from_real=this.checkMaxInterval(this.coords.p_from_real,this.coords.p_to_real,\"from\");this.coords.p_from_fake=this.convertToFakePercent(this.coords.p_from_real);break;case \"to\":if(this.options.to_fixed)break;\r\n        this.coords.p_to_real=this.convertToRealPercent(a);this.coords.p_to_real=this.calcWithStep(this.coords.p_to_real);this.coords.p_to_real<this.coords.p_from_real&&(this.coords.p_to_real=this.coords.p_from_real);this.coords.p_to_real=this.checkDiapason(this.coords.p_to_real,this.options.to_min,this.options.to_max);this.coords.p_to_real=this.checkMinInterval(this.coords.p_to_real,this.coords.p_from_real,\"to\");this.coords.p_to_real=this.checkMaxInterval(this.coords.p_to_real,this.coords.p_from_real,\"to\");\r\n        this.coords.p_to_fake=this.convertToFakePercent(this.coords.p_to_real);break;case \"both\":if(this.options.from_fixed||this.options.to_fixed)break;a=this.toFixed(a+.001*this.coords.p_handle);this.coords.p_from_real=this.convertToRealPercent(a)-this.coords.p_gap_left;this.coords.p_from_real=this.calcWithStep(this.coords.p_from_real);this.coords.p_from_real=this.checkDiapason(this.coords.p_from_real,this.options.from_min,this.options.from_max);this.coords.p_from_real=this.checkMinInterval(this.coords.p_from_real,\r\n        this.coords.p_to_real,\"from\");this.coords.p_from_fake=this.convertToFakePercent(this.coords.p_from_real);this.coords.p_to_real=this.convertToRealPercent(a)+this.coords.p_gap_right;this.coords.p_to_real=this.calcWithStep(this.coords.p_to_real);this.coords.p_to_real=this.checkDiapason(this.coords.p_to_real,this.options.to_min,this.options.to_max);this.coords.p_to_real=this.checkMinInterval(this.coords.p_to_real,this.coords.p_from_real,\"to\");this.coords.p_to_fake=this.convertToFakePercent(this.coords.p_to_real);\r\n        break;case \"both_one\":if(!this.options.from_fixed&&!this.options.to_fixed){var d=this.convertToRealPercent(a);a=this.result.to_percent-this.result.from_percent;var c=a/2,b=d-c,d=d+c;0>b&&(b=0,d=b+a);100<d&&(d=100,b=d-a);this.coords.p_from_real=this.calcWithStep(b);this.coords.p_from_real=this.checkDiapason(this.coords.p_from_real,this.options.from_min,this.options.from_max);this.coords.p_from_fake=this.convertToFakePercent(this.coords.p_from_real);this.coords.p_to_real=this.calcWithStep(d);this.coords.p_to_real=\r\n        this.checkDiapason(this.coords.p_to_real,this.options.to_min,this.options.to_max);this.coords.p_to_fake=this.convertToFakePercent(this.coords.p_to_real)}}\"single\"===this.options.type?(this.coords.p_bar_x=this.coords.p_handle/2,this.coords.p_bar_w=this.coords.p_single_fake,this.result.from_percent=this.coords.p_single_real,this.result.from=this.convertToValue(this.coords.p_single_real),this.options.values.length&&(this.result.from_value=this.options.values[this.result.from])):(this.coords.p_bar_x=\r\n        this.toFixed(this.coords.p_from_fake+this.coords.p_handle/2),this.coords.p_bar_w=this.toFixed(this.coords.p_to_fake-this.coords.p_from_fake),this.result.from_percent=this.coords.p_from_real,this.result.from=this.convertToValue(this.coords.p_from_real),this.result.to_percent=this.coords.p_to_real,this.result.to=this.convertToValue(this.coords.p_to_real),this.options.values.length&&(this.result.from_value=this.options.values[this.result.from],this.result.to_value=this.options.values[this.result.to]));\r\n        this.calcMinMax();this.calcLabels()}}},calcPointerPercent:function(){this.coords.w_rs?(0>this.coords.x_pointer||isNaN(this.coords.x_pointer)?this.coords.x_pointer=0:this.coords.x_pointer>this.coords.w_rs&&(this.coords.x_pointer=this.coords.w_rs),this.coords.p_pointer=this.toFixed(this.coords.x_pointer/this.coords.w_rs*100)):this.coords.p_pointer=0},convertToRealPercent:function(a){return a/(100-this.coords.p_handle)*100},convertToFakePercent:function(a){return a/100*(100-this.coords.p_handle)},getHandleX:function(){var a=\r\n        100-this.coords.p_handle,b=this.toFixed(this.coords.p_pointer-this.coords.p_gap);0>b?b=0:b>a&&(b=a);return b},calcHandlePercent:function(){this.coords.w_handle=\"single\"===this.options.type?this.$cache.s_single.outerWidth(!1):this.$cache.s_from.outerWidth(!1);this.coords.p_handle=this.toFixed(this.coords.w_handle/this.coords.w_rs*100)},chooseHandle:function(a){return\"single\"===this.options.type?\"single\":a>=this.coords.p_from_real+(this.coords.p_to_real-this.coords.p_from_real)/2?this.options.to_fixed?\r\n        \"from\":\"to\":this.options.from_fixed?\"to\":\"from\"},calcMinMax:function(){this.coords.w_rs&&(this.labels.p_min=this.labels.w_min/this.coords.w_rs*100,this.labels.p_max=this.labels.w_max/this.coords.w_rs*100)},calcLabels:function(){this.coords.w_rs&&!this.options.hide_from_to&&(\"single\"===this.options.type?(this.labels.w_single=this.$cache.single.outerWidth(!1),this.labels.p_single_fake=this.labels.w_single/this.coords.w_rs*100,this.labels.p_single_left=this.coords.p_single_fake+this.coords.p_handle/\r\n        2-this.labels.p_single_fake/2):(this.labels.w_from=this.$cache.from.outerWidth(!1),this.labels.p_from_fake=this.labels.w_from/this.coords.w_rs*100,this.labels.p_from_left=this.coords.p_from_fake+this.coords.p_handle/2-this.labels.p_from_fake/2,this.labels.p_from_left=this.toFixed(this.labels.p_from_left),this.labels.p_from_left=this.checkEdges(this.labels.p_from_left,this.labels.p_from_fake),this.labels.w_to=this.$cache.to.outerWidth(!1),this.labels.p_to_fake=this.labels.w_to/this.coords.w_rs*100,\r\n        this.labels.p_to_left=this.coords.p_to_fake+this.coords.p_handle/2-this.labels.p_to_fake/2,this.labels.p_to_left=this.toFixed(this.labels.p_to_left),this.labels.p_to_left=this.checkEdges(this.labels.p_to_left,this.labels.p_to_fake),this.labels.w_single=this.$cache.single.outerWidth(!1),this.labels.p_single_fake=this.labels.w_single/this.coords.w_rs*100,this.labels.p_single_left=(this.labels.p_from_left+this.labels.p_to_left+this.labels.p_to_fake)/2-this.labels.p_single_fake/2,this.labels.p_single_left=\r\n        this.toFixed(this.labels.p_single_left)),this.labels.p_single_left=this.checkEdges(this.labels.p_single_left,this.labels.p_single_fake))},updateScene:function(){this.raf_id&&(cancelAnimationFrame(this.raf_id),this.raf_id=null);clearTimeout(this.update_tm);this.update_tm=null;this.options&&(this.drawHandles(),this.is_active?this.raf_id=requestAnimationFrame(this.updateScene.bind(this)):this.update_tm=setTimeout(this.updateScene.bind(this),300))},drawHandles:function(){this.coords.w_rs=this.$cache.rs.outerWidth(!1);\r\n        if(this.coords.w_rs){this.coords.w_rs!==this.coords.w_rs_old&&(this.target=\"base\",this.is_resize=!0);if(this.coords.w_rs!==this.coords.w_rs_old||this.force_redraw)this.setMinMax(),this.calc(!0),this.drawLabels(),this.options.grid&&(this.calcGridMargin(),this.calcGridLabels()),this.force_redraw=!0,this.coords.w_rs_old=this.coords.w_rs,this.drawShadow();if(this.coords.w_rs&&(this.dragging||this.force_redraw||this.is_key)){if(this.old_from!==this.result.from||this.old_to!==this.result.to||this.force_redraw||\r\n            this.is_key){this.drawLabels();this.$cache.bar[0].style.left=this.coords.p_bar_x+\"%\";this.$cache.bar[0].style.width=this.coords.p_bar_w+\"%\";if(\"single\"===this.options.type)this.$cache.s_single[0].style.left=this.coords.p_single_fake+\"%\";else{this.$cache.s_from[0].style.left=this.coords.p_from_fake+\"%\";this.$cache.s_to[0].style.left=this.coords.p_to_fake+\"%\";if(this.old_from!==this.result.from||this.force_redraw)this.$cache.from[0].style.left=this.labels.p_from_left+\"%\";if(this.old_to!==this.result.to||\r\n            this.force_redraw)this.$cache.to[0].style.left=this.labels.p_to_left+\"%\"}this.$cache.single[0].style.left=this.labels.p_single_left+\"%\";this.writeToInput();this.old_from===this.result.from&&this.old_to===this.result.to||this.is_start||(this.$cache.input.trigger(\"change\"),this.$cache.input.trigger(\"input\"));this.old_from=this.result.from;this.old_to=this.result.to;this.is_resize||this.is_update||this.is_start||this.is_finish||this.callOnChange();if(this.is_key||this.is_click||this.is_first_update)this.is_first_update=\r\n            this.is_click=this.is_key=!1,this.callOnFinish();this.is_finish=this.is_resize=this.is_update=!1}this.force_redraw=this.is_click=this.is_key=this.is_start=!1}}},drawLabels:function(){if(this.options){var a=this.options.values.length,b=this.options.p_values,d;if(!this.options.hide_from_to)if(\"single\"===this.options.type)a=a?this.decorate(b[this.result.from]):this.decorate(this._prettify(this.result.from),this.result.from),this.$cache.single.html(a),this.calcLabels(),this.$cache.min[0].style.visibility=\r\n        this.labels.p_single_left<this.labels.p_min+1?\"hidden\":\"visible\",this.$cache.max[0].style.visibility=this.labels.p_single_left+this.labels.p_single_fake>100-this.labels.p_max-1?\"hidden\":\"visible\";else{a?(this.options.decorate_both?(a=this.decorate(b[this.result.from]),a+=this.options.values_separator,a+=this.decorate(b[this.result.to])):a=this.decorate(b[this.result.from]+this.options.values_separator+b[this.result.to]),d=this.decorate(b[this.result.from]),b=this.decorate(b[this.result.to])):(this.options.decorate_both?\r\n        (a=this.decorate(this._prettify(this.result.from),this.result.from),a+=this.options.values_separator,a+=this.decorate(this._prettify(this.result.to),this.result.to)):a=this.decorate(this._prettify(this.result.from)+this.options.values_separator+this._prettify(this.result.to),this.result.to),d=this.decorate(this._prettify(this.result.from),this.result.from),b=this.decorate(this._prettify(this.result.to),this.result.to));this.$cache.single.html(a);this.$cache.from.html(d);this.$cache.to.html(b);this.calcLabels();\r\n        b=Math.min(this.labels.p_single_left,this.labels.p_from_left);a=this.labels.p_single_left+this.labels.p_single_fake;d=this.labels.p_to_left+this.labels.p_to_fake;var c=Math.max(a,d);this.labels.p_from_left+this.labels.p_from_fake>=this.labels.p_to_left?(this.$cache.from[0].style.visibility=\"hidden\",this.$cache.to[0].style.visibility=\"hidden\",this.$cache.single[0].style.visibility=\"visible\",this.result.from===this.result.to?(\"from\"===this.target?this.$cache.from[0].style.visibility=\"visible\":\"to\"===\r\n        this.target?this.$cache.to[0].style.visibility=\"visible\":this.target||(this.$cache.from[0].style.visibility=\"visible\"),this.$cache.single[0].style.visibility=\"hidden\",c=d):(this.$cache.from[0].style.visibility=\"hidden\",this.$cache.to[0].style.visibility=\"hidden\",this.$cache.single[0].style.visibility=\"visible\",c=Math.max(a,d))):(this.$cache.from[0].style.visibility=\"visible\",this.$cache.to[0].style.visibility=\"visible\",this.$cache.single[0].style.visibility=\"hidden\");this.$cache.min[0].style.visibility=\r\n            b<this.labels.p_min+1?\"hidden\":\"visible\";this.$cache.max[0].style.visibility=c>100-this.labels.p_max-1?\"hidden\":\"visible\"}}},drawShadow:function(){var a=this.options,b=this.$cache,d=\"number\"===typeof a.from_min&&!isNaN(a.from_min),c=\"number\"===typeof a.from_max&&!isNaN(a.from_max),e=\"number\"===typeof a.to_min&&!isNaN(a.to_min),g=\"number\"===typeof a.to_max&&!isNaN(a.to_max);\"single\"===a.type?a.from_shadow&&(d||c)?(d=this.convertToPercent(d?a.from_min:a.min),c=this.convertToPercent(c?a.from_max:a.max)-\r\n        d,d=this.toFixed(d-this.coords.p_handle/100*d),c=this.toFixed(c-this.coords.p_handle/100*c),d+=this.coords.p_handle/2,b.shad_single[0].style.display=\"block\",b.shad_single[0].style.left=d+\"%\",b.shad_single[0].style.width=c+\"%\"):b.shad_single[0].style.display=\"none\":(a.from_shadow&&(d||c)?(d=this.convertToPercent(d?a.from_min:a.min),c=this.convertToPercent(c?a.from_max:a.max)-d,d=this.toFixed(d-this.coords.p_handle/100*d),c=this.toFixed(c-this.coords.p_handle/100*c),d+=this.coords.p_handle/2,b.shad_from[0].style.display=\r\n        \"block\",b.shad_from[0].style.left=d+\"%\",b.shad_from[0].style.width=c+\"%\"):b.shad_from[0].style.display=\"none\",a.to_shadow&&(e||g)?(e=this.convertToPercent(e?a.to_min:a.min),a=this.convertToPercent(g?a.to_max:a.max)-e,e=this.toFixed(e-this.coords.p_handle/100*e),a=this.toFixed(a-this.coords.p_handle/100*a),e+=this.coords.p_handle/2,b.shad_to[0].style.display=\"block\",b.shad_to[0].style.left=e+\"%\",b.shad_to[0].style.width=a+\"%\"):b.shad_to[0].style.display=\"none\")},writeToInput:function(){\"single\"===\r\n    this.options.type?(this.options.values.length?this.$cache.input.prop(\"value\",this.result.from_value):this.$cache.input.prop(\"value\",this.result.from),this.$cache.input.data(\"from\",this.result.from)):(this.options.values.length?this.$cache.input.prop(\"value\",this.result.from_value+this.options.input_values_separator+this.result.to_value):this.$cache.input.prop(\"value\",this.result.from+this.options.input_values_separator+this.result.to),this.$cache.input.data(\"from\",this.result.from),this.$cache.input.data(\"to\",\r\n        this.result.to))},callOnStart:function(){this.writeToInput();if(this.options.onStart&&\"function\"===typeof this.options.onStart)this.options.onStart(this.result)},callOnChange:function(){this.writeToInput();if(this.options.onChange&&\"function\"===typeof this.options.onChange)this.options.onChange(this.result)},callOnFinish:function(){this.writeToInput();if(this.options.onFinish&&\"function\"===typeof this.options.onFinish)this.options.onFinish(this.result)},callOnUpdate:function(){this.writeToInput();\r\n        if(this.options.onUpdate&&\"function\"===typeof this.options.onUpdate)this.options.onUpdate(this.result)},toggleInput:function(){this.$cache.input.toggleClass(\"irs-hidden-input\")},convertToPercent:function(a,b){var d=this.options.max-this.options.min;return d?this.toFixed((b?a:a-this.options.min)/(d/100)):(this.no_diapason=!0,0)},convertToValue:function(a){var b=this.options.min,d=this.options.max,c=b.toString().split(\".\")[1],e=d.toString().split(\".\")[1],g,l,f=0,k=0;if(0===a)return this.options.min;\r\n        if(100===a)return this.options.max;c&&(f=g=c.length);e&&(f=l=e.length);g&&l&&(f=g>=l?g:l);0>b&&(k=Math.abs(b),b=+(b+k).toFixed(f),d=+(d+k).toFixed(f));a=(d-b)/100*a+b;(b=this.options.step.toString().split(\".\")[1])?a=+a.toFixed(b.length):(a/=this.options.step,a*=this.options.step,a=+a.toFixed(0));k&&(a-=k);k=b?+a.toFixed(b.length):this.toFixed(a);k<this.options.min?k=this.options.min:k>this.options.max&&(k=this.options.max);return k},calcWithStep:function(a){var b=Math.round(a/this.coords.p_step)*\r\n        this.coords.p_step;100<b&&(b=100);100===a&&(b=100);return this.toFixed(b)},checkMinInterval:function(a,b,d){var c=this.options;if(!c.min_interval)return a;a=this.convertToValue(a);b=this.convertToValue(b);\"from\"===d?b-a<c.min_interval&&(a=b-c.min_interval):a-b<c.min_interval&&(a=b+c.min_interval);return this.convertToPercent(a)},checkMaxInterval:function(a,b,d){var c=this.options;if(!c.max_interval)return a;a=this.convertToValue(a);b=this.convertToValue(b);\"from\"===d?b-a>c.max_interval&&(a=b-c.max_interval):\r\n        a-b>c.max_interval&&(a=b+c.max_interval);return this.convertToPercent(a)},checkDiapason:function(a,b,d){a=this.convertToValue(a);var c=this.options;\"number\"!==typeof b&&(b=c.min);\"number\"!==typeof d&&(d=c.max);a<b&&(a=b);a>d&&(a=d);return this.convertToPercent(a)},toFixed:function(a){a=a.toFixed(20);return+a},_prettify:function(a){return this.options.prettify_enabled?this.options.prettify&&\"function\"===typeof this.options.prettify?this.options.prettify(a):this.prettify(a):a},prettify:function(a){return a.toString().replace(/(\\d{1,3}(?=(?:\\d\\d\\d)+(?!\\d)))/g,\r\n        \"$1\"+this.options.prettify_separator)},checkEdges:function(a,b){if(!this.options.force_edges)return this.toFixed(a);0>a?a=0:a>100-b&&(a=100-b);return this.toFixed(a)},validate:function(){var a=this.options,b=this.result,d=a.values,c=d.length,e,g;\"string\"===typeof a.min&&(a.min=+a.min);\"string\"===typeof a.max&&(a.max=+a.max);\"string\"===typeof a.from&&(a.from=+a.from);\"string\"===typeof a.to&&(a.to=+a.to);\"string\"===typeof a.step&&(a.step=+a.step);\"string\"===typeof a.from_min&&(a.from_min=+a.from_min);\r\n        \"string\"===typeof a.from_max&&(a.from_max=+a.from_max);\"string\"===typeof a.to_min&&(a.to_min=+a.to_min);\"string\"===typeof a.to_max&&(a.to_max=+a.to_max);\"string\"===typeof a.keyboard_step&&(a.keyboard_step=+a.keyboard_step);\"string\"===typeof a.grid_num&&(a.grid_num=+a.grid_num);a.max<a.min&&(a.max=a.min);if(c)for(a.p_values=[],a.min=0,a.max=c-1,a.step=1,a.grid_num=a.max,a.grid_snap=!0,g=0;g<c;g++)e=+d[g],isNaN(e)?e=d[g]:(d[g]=e,e=this._prettify(e)),a.p_values.push(e);if(\"number\"!==typeof a.from||isNaN(a.from))a.from=\r\n            a.min;if(\"number\"!==typeof a.to||isNaN(a.to))a.to=a.max;\"single\"===a.type?(a.from<a.min&&(a.from=a.min),a.from>a.max&&(a.from=a.max)):(a.from<a.min&&(a.from=a.min),a.from>a.max&&(a.from=a.max),a.to<a.min&&(a.to=a.min),a.to>a.max&&(a.to=a.max),this.update_check.from&&(this.update_check.from!==a.from&&a.from>a.to&&(a.from=a.to),this.update_check.to!==a.to&&a.to<a.from&&(a.to=a.from)),a.from>a.to&&(a.from=a.to),a.to<a.from&&(a.to=a.from));if(\"number\"!==typeof a.step||isNaN(a.step)||!a.step||0>a.step)a.step=\r\n            1;if(\"number\"!==typeof a.keyboard_step||isNaN(a.keyboard_step)||!a.keyboard_step||0>a.keyboard_step)a.keyboard_step=5;\"number\"===typeof a.from_min&&a.from<a.from_min&&(a.from=a.from_min);\"number\"===typeof a.from_max&&a.from>a.from_max&&(a.from=a.from_max);\"number\"===typeof a.to_min&&a.to<a.to_min&&(a.to=a.to_min);\"number\"===typeof a.to_max&&a.from>a.to_max&&(a.to=a.to_max);if(b){b.min!==a.min&&(b.min=a.min);b.max!==a.max&&(b.max=a.max);if(b.from<b.min||b.from>b.max)b.from=a.from;if(b.to<b.min||b.to>\r\n            b.max)b.to=a.to}if(\"number\"!==typeof a.min_interval||isNaN(a.min_interval)||!a.min_interval||0>a.min_interval)a.min_interval=0;if(\"number\"!==typeof a.max_interval||isNaN(a.max_interval)||!a.max_interval||0>a.max_interval)a.max_interval=0;a.min_interval&&a.min_interval>a.max-a.min&&(a.min_interval=a.max-a.min);a.max_interval&&a.max_interval>a.max-a.min&&(a.max_interval=a.max-a.min)},decorate:function(a,b){var d=\"\",c=this.options;c.prefix&&(d+=c.prefix);d+=a;c.max_postfix&&(c.values.length&&a===c.p_values[c.max]?\r\n        (d+=c.max_postfix,c.postfix&&(d+=\" \")):b===c.max&&(d+=c.max_postfix,c.postfix&&(d+=\" \")));c.postfix&&(d+=c.postfix);return d},updateFrom:function(){this.result.from=this.options.from;this.result.from_percent=this.convertToPercent(this.result.from);this.options.values&&(this.result.from_value=this.options.values[this.result.from])},updateTo:function(){this.result.to=this.options.to;this.result.to_percent=this.convertToPercent(this.result.to);this.options.values&&(this.result.to_value=this.options.values[this.result.to])},\r\n    updateResult:function(){this.result.min=this.options.min;this.result.max=this.options.max;this.updateFrom();this.updateTo()},appendGrid:function(){if(this.options.grid){var a=this.options,b,d;b=a.max-a.min;var c=a.grid_num,e,g,f=4,h,k,m,n=\"\";this.calcGridMargin();a.grid_snap?(c=b/a.step,e=this.toFixed(a.step/(b/100))):e=this.toFixed(100/c);4<c&&(f=3);7<c&&(f=2);14<c&&(f=1);28<c&&(f=0);for(b=0;b<c+1;b++){h=f;g=this.toFixed(e*b);100<g&&(g=100,h-=2,0>h&&(h=0));this.coords.big[b]=g;k=(g-e*(b-1))/(h+1);\r\n        for(d=1;d<=h&&0!==g;d++)m=this.toFixed(g-k*d),n+='<span class=\"irs-grid-pol small\" style=\"left: '+m+'%\"></span>';n+='<span class=\"irs-grid-pol\" style=\"left: '+g+'%\"></span>';d=this.convertToValue(g);d=a.values.length?a.p_values[d]:this._prettify(d);n+='<span class=\"irs-grid-text js-grid-text-'+b+'\" style=\"left: '+g+'%\">'+d+\"</span>\"}this.coords.big_num=Math.ceil(c+1);this.$cache.cont.addClass(\"irs-with-grid\");this.$cache.grid.html(n);this.cacheGridLabels()}},cacheGridLabels:function(){var a,b,d=this.coords.big_num;\r\n        for(b=0;b<d;b++)a=this.$cache.grid.find(\".js-grid-text-\"+b),this.$cache.grid_labels.push(a);this.calcGridLabels()},calcGridLabels:function(){var a,b;b=[];var d=[],c=this.coords.big_num;for(a=0;a<c;a++)this.coords.big_w[a]=this.$cache.grid_labels[a].outerWidth(!1),this.coords.big_p[a]=this.toFixed(this.coords.big_w[a]/this.coords.w_rs*100),this.coords.big_x[a]=this.toFixed(this.coords.big_p[a]/2),b[a]=this.toFixed(this.coords.big[a]-this.coords.big_x[a]),d[a]=this.toFixed(b[a]+this.coords.big_p[a]);\r\n        this.options.force_edges&&(b[0]<-this.coords.grid_gap&&(b[0]=-this.coords.grid_gap,d[0]=this.toFixed(b[0]+this.coords.big_p[0]),this.coords.big_x[0]=this.coords.grid_gap),d[c-1]>100+this.coords.grid_gap&&(d[c-1]=100+this.coords.grid_gap,b[c-1]=this.toFixed(d[c-1]-this.coords.big_p[c-1]),this.coords.big_x[c-1]=this.toFixed(this.coords.big_p[c-1]-this.coords.grid_gap)));this.calcGridCollision(2,b,d);this.calcGridCollision(4,b,d);for(a=0;a<c;a++)b=this.$cache.grid_labels[a][0],this.coords.big_x[a]!==\r\n        Number.POSITIVE_INFINITY&&(b.style.marginLeft=-this.coords.big_x[a]+\"%\")},calcGridCollision:function(a,b,d){var c,e,g,f=this.coords.big_num;for(c=0;c<f;c+=a){e=c+a/2;if(e>=f)break;g=this.$cache.grid_labels[e][0];g.style.visibility=d[c]<=b[e]?\"visible\":\"hidden\"}},calcGridMargin:function(){this.options.grid_margin&&(this.coords.w_rs=this.$cache.rs.outerWidth(!1),this.coords.w_rs&&(this.coords.w_handle=\"single\"===this.options.type?this.$cache.s_single.outerWidth(!1):this.$cache.s_from.outerWidth(!1),\r\n        this.coords.p_handle=this.toFixed(this.coords.w_handle/this.coords.w_rs*100),this.coords.grid_gap=this.toFixed(this.coords.p_handle/2-.1),this.$cache.grid[0].style.width=this.toFixed(100-this.coords.p_handle)+\"%\",this.$cache.grid[0].style.left=this.coords.grid_gap+\"%\"))},update:function(a){this.input&&(this.is_update=!0,this.options.from=this.result.from,this.options.to=this.result.to,this.update_check.from=this.result.from,this.update_check.to=this.result.to,this.options=f.extend(this.options,a),\r\n        this.validate(),this.updateResult(a),this.toggleInput(),this.remove(),this.init(!0))},reset:function(){this.input&&(this.updateResult(),this.update())},destroy:function(){this.input&&(this.toggleInput(),this.$cache.input.prop(\"readonly\",!1),f.data(this.input,\"ionRangeSlider\",null),this.remove(),this.options=this.input=null)}};f.fn.ionRangeSlider=function(a){return this.each(function(){f.data(this,\"ionRangeSlider\")||f.data(this,\"ionRangeSlider\",new r(this,a,u++))})};(function(){for(var a=0,b=[\"ms\",\r\n    \"moz\",\"webkit\",\"o\"],d=0;d<b.length&&!h.requestAnimationFrame;++d)h.requestAnimationFrame=h[b[d]+\"RequestAnimationFrame\"],h.cancelAnimationFrame=h[b[d]+\"CancelAnimationFrame\"]||h[b[d]+\"CancelRequestAnimationFrame\"];h.requestAnimationFrame||(h.requestAnimationFrame=function(b,d){var c=(new Date).getTime(),e=Math.max(0,16-(c-a)),f=h.setTimeout(function(){b(c+e)},e);a=c+e;return f});h.cancelAnimationFrame||(h.cancelAnimationFrame=function(a){clearTimeout(a)})})()});\r\n","Mageplaza_Core/js/jquery.autocomplete.min.js":"/**\r\n *  Ajax Autocomplete for jQuery, version 1.3.0\r\n *  (c) 2017 Tomas Kirda\r\n *\r\n *  Ajax Autocomplete for jQuery is freely distributable under the terms of an MIT-style license.\r\n *  For details, see the web site: https://github.com/devbridge/jQuery-Autocomplete\r\n */\r\n!function(a){\"use strict\";\"function\"==typeof define&&define.amd?define([\"jquery\"],a):a(\"object\"==typeof exports&&\"function\"==typeof require?require(\"jquery\"):jQuery)}(function(a){\"use strict\";function b(c,d){var e=a.noop,f=this,g={ajaxSettings:{},autoSelectFirst:!1,appendTo:document.body,serviceUrl:null,lookup:null,onSelect:null,width:\"auto\",minChars:1,maxHeight:300,deferRequestBy:0,params:{},formatResult:b.formatResult,formatGroup:b.formatGroup,delimiter:null,zIndex:9999,type:\"GET\",noCache:!1,onSearchStart:e,onSearchComplete:e,onSearchError:e,preserveInput:!1,containerClass:\"autocomplete-suggestions\",tabDisabled:!1,dataType:\"text\",currentRequest:null,triggerSelectOnValidInput:!0,preventBadQueries:!0,lookupFilter:function(a,b,c){return-1!==a.value.toLowerCase().indexOf(c)},paramName:\"query\",transformResult:function(b){return\"string\"==typeof b?a.parseJSON(b):b},showNoSuggestionNotice:!1,noSuggestionNotice:\"No results\",orientation:\"bottom\",forceFixPosition:!1};f.element=c,f.el=a(c),f.suggestions=[],f.badQueries=[],f.selectedIndex=-1,f.currentValue=f.element.value,f.intervalId=0,f.cachedResponse={},f.onChangeInterval=null,f.onChange=null,f.isLocal=!1,f.suggestionsContainer=null,f.noSuggestionsContainer=null,f.options=a.extend({},g,d),f.classes={selected:\"autocomplete-selected\",suggestion:\"autocomplete-suggestion\"},f.hint=null,f.hintValue=\"\",f.selection=null,f.initialize(),f.setOptions(d)}var c=function(){return{escapeRegExChars:function(a){return a.replace(/[|\\\\{}()[\\]^$+*?.]/g,\"\\\\$&\")},createNode:function(a){var b=document.createElement(\"div\");return b.className=a,b.style.position=\"absolute\",b.style.display=\"none\",b}}}(),d={ESC:27,TAB:9,RETURN:13,LEFT:37,UP:38,RIGHT:39,DOWN:40};b.utils=c,a.Autocomplete=b,b.formatResult=function(a,b){if(!b)return a.value;var d=\"(\"+c.escapeRegExChars(b)+\")\";return a.value.replace(new RegExp(d,\"gi\"),\"<strong>$1</strong>\").replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\").replace(/\"/g,\"&quot;\").replace(/&lt;(\\/?strong)&gt;/g,\"<$1>\")},b.formatGroup=function(a,b){return'<div class=\"autocomplete-group\"><strong>'+b+\"</strong></div>\"},b.prototype={killerFn:null,initialize:function(){var c,d=this,e=\".\"+d.classes.suggestion,f=d.classes.selected,g=d.options;d.element.setAttribute(\"autocomplete\",\"off\"),d.killerFn=function(b){a(b.target).closest(\".\"+d.options.containerClass).length||(d.killSuggestions(),d.disableKillerFn())},d.noSuggestionsContainer=a('<div class=\"autocomplete-no-suggestion\"></div>').html(this.options.noSuggestionNotice).get(0),d.suggestionsContainer=b.utils.createNode(g.containerClass),c=a(d.suggestionsContainer),c.appendTo(g.appendTo),\"auto\"!==g.width&&c.css(\"width\",g.width),c.on(\"mouseover.autocomplete\",e,function(){d.activate(a(this).data(\"index\"))}),c.on(\"mouseout.autocomplete\",function(){d.selectedIndex=-1,c.children(\".\"+f).removeClass(f)}),c.on(\"click.autocomplete\",e,function(){return d.select(a(this).data(\"index\")),!1}),d.fixPositionCapture=function(){d.visible&&d.fixPosition()},a(window).on(\"resize.autocomplete\",d.fixPositionCapture),d.el.on(\"keydown.autocomplete\",function(a){d.onKeyPress(a)}),d.el.on(\"keyup.autocomplete\",function(a){d.onKeyUp(a)}),d.el.on(\"blur.autocomplete\",function(){d.onBlur()}),d.el.on(\"focus.autocomplete\",function(){d.onFocus()}),d.el.on(\"change.autocomplete\",function(a){d.onKeyUp(a)}),d.el.on(\"input.autocomplete\",function(a){d.onKeyUp(a)})},onFocus:function(){var a=this;a.fixPosition(),a.el.val().length>=a.options.minChars&&a.onValueChange()},onBlur:function(){this.enableKillerFn()},abortAjax:function(){var a=this;a.currentRequest&&(a.currentRequest.abort(),a.currentRequest=null)},setOptions:function(b){var c=this,d=c.options;a.extend(d,b),c.isLocal=a.isArray(d.lookup),c.isLocal&&(d.lookup=c.verifySuggestionsFormat(d.lookup)),d.orientation=c.validateOrientation(d.orientation,\"bottom\"),a(c.suggestionsContainer).css({\"max-height\":d.maxHeight+\"px\",width:d.width+\"px\",\"z-index\":d.zIndex})},clearCache:function(){this.cachedResponse={},this.badQueries=[]},clear:function(){this.clearCache(),this.currentValue=\"\",this.suggestions=[]},disable:function(){var a=this;a.disabled=!0,clearInterval(a.onChangeInterval),a.abortAjax()},enable:function(){this.disabled=!1},fixPosition:function(){var b=this,c=a(b.suggestionsContainer),d=c.parent().get(0);if(d===document.body||b.options.forceFixPosition){var e=b.options.orientation,f=c.outerHeight(),g=b.el.outerHeight(),h=b.el.offset(),i={top:h.top,left:h.left};if(\"auto\"===e){var j=a(window).height(),k=a(window).scrollTop(),l=-k+h.top-f,m=k+j-(h.top+g+f);e=Math.max(l,m)===l?\"top\":\"bottom\"}if(\"top\"===e?i.top+=-f:i.top+=g,d!==document.body){var n,o=c.css(\"opacity\");b.visible||c.css(\"opacity\",0).show(),n=c.offsetParent().offset(),i.top-=n.top,i.left-=n.left,b.visible||c.css(\"opacity\",o).hide()}\"auto\"===b.options.width&&(i.width=b.el.outerWidth()+\"px\"),c.css(i)}},enableKillerFn:function(){var b=this;a(document).on(\"click.autocomplete\",b.killerFn)},disableKillerFn:function(){var b=this;a(document).off(\"click.autocomplete\",b.killerFn)},killSuggestions:function(){var a=this;a.stopKillSuggestions(),a.intervalId=window.setInterval(function(){a.visible&&(a.options.preserveInput||a.el.val(a.currentValue),a.hide()),a.stopKillSuggestions()},50)},stopKillSuggestions:function(){window.clearInterval(this.intervalId)},isCursorAtEnd:function(){var a,b=this,c=b.el.val().length,d=b.element.selectionStart;return\"number\"==typeof d?d===c:document.selection?(a=document.selection.createRange(),a.moveStart(\"character\",-c),c===a.text.length):!0},onKeyPress:function(a){var b=this;if(!b.disabled&&!b.visible&&a.which===d.DOWN&&b.currentValue)return void b.suggest();if(!b.disabled&&b.visible){switch(a.which){case d.ESC:b.el.val(b.currentValue),b.hide();break;case d.RIGHT:if(b.hint&&b.options.onHint&&b.isCursorAtEnd()){b.selectHint();break}return;case d.TAB:if(b.hint&&b.options.onHint)return void b.selectHint();if(-1===b.selectedIndex)return void b.hide();if(b.select(b.selectedIndex),b.options.tabDisabled===!1)return;break;case d.RETURN:if(-1===b.selectedIndex)return void b.hide();b.select(b.selectedIndex);break;case d.UP:b.moveUp();break;case d.DOWN:b.moveDown();break;default:return}a.stopImmediatePropagation(),a.preventDefault()}},onKeyUp:function(a){var b=this;if(!b.disabled){switch(a.which){case d.UP:case d.DOWN:return}clearInterval(b.onChangeInterval),b.currentValue!==b.el.val()&&(b.findBestHint(),b.options.deferRequestBy>0?b.onChangeInterval=setInterval(function(){b.onValueChange()},b.options.deferRequestBy):b.onValueChange())}},onValueChange:function(){var b=this,c=b.options,d=b.el.val(),e=b.getQuery(d);return b.selection&&b.currentValue!==e&&(b.selection=null,(c.onInvalidateSelection||a.noop).call(b.element)),clearInterval(b.onChangeInterval),b.currentValue=d,b.selectedIndex=-1,c.triggerSelectOnValidInput&&b.isExactMatch(e)?void b.select(0):void(e.length<c.minChars?b.hide():b.getSuggestions(e))},isExactMatch:function(a){var b=this.suggestions;return 1===b.length&&b[0].value.toLowerCase()===a.toLowerCase()},getQuery:function(b){var c,d=this.options.delimiter;return d?(c=b.split(d),a.trim(c[c.length-1])):b},getSuggestionsLocal:function(b){var c,d=this,e=d.options,f=b.toLowerCase(),g=e.lookupFilter,h=parseInt(e.lookupLimit,10);return c={suggestions:a.grep(e.lookup,function(a){return g(a,b,f)})},h&&c.suggestions.length>h&&(c.suggestions=c.suggestions.slice(0,h)),c},getSuggestions:function(b){var c,d,e,f,g=this,h=g.options,i=h.serviceUrl;if(h.params[h.paramName]=b,d=h.ignoreParams?null:h.params,h.onSearchStart.call(g.element,h.params)!==!1){if(a.isFunction(h.lookup))return void h.lookup(b,function(a){g.suggestions=a.suggestions,g.suggest(),h.onSearchComplete.call(g.element,b,a.suggestions)});g.isLocal?c=g.getSuggestionsLocal(b):(a.isFunction(i)&&(i=i.call(g.element,b)),e=i+\"?\"+a.param(d||{}),c=g.cachedResponse[e]),c&&a.isArray(c.suggestions)?(g.suggestions=c.suggestions,g.suggest(),h.onSearchComplete.call(g.element,b,c.suggestions)):g.isBadQuery(b)?h.onSearchComplete.call(g.element,b,[]):(g.abortAjax(),f={url:i,data:d,type:h.type,dataType:h.dataType},a.extend(f,h.ajaxSettings),g.currentRequest=a.ajax(f).done(function(a){var c;g.currentRequest=null,c=h.transformResult(a,b),g.processResponse(c,b,e),h.onSearchComplete.call(g.element,b,c.suggestions)}).fail(function(a,c,d){h.onSearchError.call(g.element,b,a,c,d)}))}},isBadQuery:function(a){if(!this.options.preventBadQueries)return!1;for(var b=this.badQueries,c=b.length;c--;)if(0===a.indexOf(b[c]))return!0;return!1},hide:function(){var b=this,c=a(b.suggestionsContainer);a.isFunction(b.options.onHide)&&b.visible&&b.options.onHide.call(b.element,c),b.visible=!1,b.selectedIndex=-1,clearInterval(b.onChangeInterval),a(b.suggestionsContainer).hide(),b.signalHint(null)},suggest:function(){if(!this.suggestions.length)return void(this.options.showNoSuggestionNotice?this.noSuggestions():this.hide());var b,c=this,d=c.options,e=d.groupBy,f=d.formatResult,g=c.getQuery(c.currentValue),h=c.classes.suggestion,i=c.classes.selected,j=a(c.suggestionsContainer),k=a(c.noSuggestionsContainer),l=d.beforeRender,m=\"\",n=function(a,c){var f=a.data[e];return b===f?\"\":(b=f,d.formatGroup(a,b))};return d.triggerSelectOnValidInput&&c.isExactMatch(g)?void c.select(0):(a.each(c.suggestions,function(a,b){e&&(m+=n(b,g,a)),m+='<div class=\"'+h+'\" data-index=\"'+a+'\">'+f(b,g,a)+\"</div>\"}),this.adjustContainerWidth(),k.detach(),j.html(m),a.isFunction(l)&&l.call(c.element,j,c.suggestions),c.fixPosition(),j.show(),d.autoSelectFirst&&(c.selectedIndex=0,j.scrollTop(0),j.children(\".\"+h).first().addClass(i)),c.visible=!0,void c.findBestHint())},noSuggestions:function(){var b=this,c=a(b.suggestionsContainer),d=a(b.noSuggestionsContainer);this.adjustContainerWidth(),d.detach(),c.empty(),c.append(d),b.fixPosition(),c.show(),b.visible=!0},adjustContainerWidth:function(){var b,c=this,d=c.options,e=a(c.suggestionsContainer);\"auto\"===d.width?(b=c.el.outerWidth(),e.css(\"width\",b>0?b:300)):\"flex\"===d.width&&e.css(\"width\",\"\")},findBestHint:function(){var b=this,c=b.el.val().toLowerCase(),d=null;c&&(a.each(b.suggestions,function(a,b){var e=0===b.value.toLowerCase().indexOf(c);return e&&(d=b),!e}),b.signalHint(d))},signalHint:function(b){var c=\"\",d=this;b&&(c=d.currentValue+b.value.substr(d.currentValue.length)),d.hintValue!==c&&(d.hintValue=c,d.hint=b,(this.options.onHint||a.noop)(c))},verifySuggestionsFormat:function(b){return b.length&&\"string\"==typeof b[0]?a.map(b,function(a){return{value:a,data:null}}):b},validateOrientation:function(b,c){return b=a.trim(b||\"\").toLowerCase(),-1===a.inArray(b,[\"auto\",\"bottom\",\"top\"])&&(b=c),b},processResponse:function(a,b,c){var d=this,e=d.options;a.suggestions=d.verifySuggestionsFormat(a.suggestions),e.noCache||(d.cachedResponse[c]=a,e.preventBadQueries&&!a.suggestions.length&&d.badQueries.push(b)),b===d.getQuery(d.currentValue)&&(d.suggestions=a.suggestions,d.suggest())},activate:function(b){var c,d=this,e=d.classes.selected,f=a(d.suggestionsContainer),g=f.find(\".\"+d.classes.suggestion);return f.find(\".\"+e).removeClass(e),d.selectedIndex=b,-1!==d.selectedIndex&&g.length>d.selectedIndex?(c=g.get(d.selectedIndex),a(c).addClass(e),c):null},selectHint:function(){var b=this,c=a.inArray(b.hint,b.suggestions);b.select(c)},select:function(a){var b=this;b.hide(),b.onSelect(a),b.disableKillerFn()},moveUp:function(){var b=this;if(-1!==b.selectedIndex)return 0===b.selectedIndex?(a(b.suggestionsContainer).children().first().removeClass(b.classes.selected),b.selectedIndex=-1,b.el.val(b.currentValue),void b.findBestHint()):void b.adjustScroll(b.selectedIndex-1)},moveDown:function(){var a=this;a.selectedIndex!==a.suggestions.length-1&&a.adjustScroll(a.selectedIndex+1)},adjustScroll:function(b){var c=this,d=c.activate(b);if(d){var e,f,g,h=a(d).outerHeight();e=d.offsetTop,f=a(c.suggestionsContainer).scrollTop(),g=f+c.options.maxHeight-h,f>e?a(c.suggestionsContainer).scrollTop(e):e>g&&a(c.suggestionsContainer).scrollTop(e-c.options.maxHeight+h),c.options.preserveInput||c.el.val(c.getValue(c.suggestions[b].value)),c.signalHint(null)}},onSelect:function(b){var c=this,d=c.options.onSelect,e=c.suggestions[b];c.currentValue=c.getValue(e.value),c.currentValue===c.el.val()||c.options.preserveInput||c.el.val(c.currentValue),c.signalHint(null),c.suggestions=[],c.selection=e,a.isFunction(d)&&d.call(c.element,e)},getValue:function(a){var b,c,d=this,e=d.options.delimiter;return e?(b=d.currentValue,c=b.split(e),1===c.length?a:b.substr(0,b.length-c[c.length-1].length)+a):a},dispose:function(){var b=this;b.el.off(\".autocomplete\").removeData(\"autocomplete\"),b.disableKillerFn(),a(window).off(\"resize.autocomplete\",b.fixPositionCapture),a(b.suggestionsContainer).remove()}},a.fn.autocomplete=a.fn.devbridgeAutocomplete=function(c,d){var e=\"autocomplete\";return arguments.length?this.each(function(){var f=a(this),g=f.data(e);\"string\"==typeof c?g&&\"function\"==typeof g[c]&&g[c](d):(g&&g.dispose&&g.dispose(),g=new b(this,c),f.data(e,g))}):this.first().data(e)}});","Mageplaza_Core/js/jquery.magnific-popup.min.js":"// Magnific Popup v1.1.0 by Dmitry Semenov\r\n// http://bit.ly/magnific-popup#build=inline+image+ajax+iframe+gallery+retina+imagezoom\r\n(function(a){typeof define==\"function\"&&define.amd?define([\"jquery\"],a):typeof exports==\"object\"?a(require(\"jquery\")):a(window.jQuery||window.Zepto)})(function(a){var b=\"Close\",c=\"BeforeClose\",d=\"AfterClose\",e=\"BeforeAppend\",f=\"MarkupParse\",g=\"Open\",h=\"Change\",i=\"mfp\",j=\".\"+i,k=\"mfp-ready\",l=\"mfp-removing\",m=\"mfp-prevent-close\",n,o=function(){},p=!!window.jQuery,q,r=a(window),s,t,u,v,w=function(a,b){n.ev.on(i+a+j,b)},x=function(b,c,d,e){var f=document.createElement(\"div\");return f.className=\"mfp-\"+b,d&&(f.innerHTML=d),e?c&&c.appendChild(f):(f=a(f),c&&f.appendTo(c)),f},y=function(b,c){n.ev.triggerHandler(i+b,c),n.st.callbacks&&(b=b.charAt(0).toLowerCase()+b.slice(1),n.st.callbacks[b]&&n.st.callbacks[b].apply(n,a.isArray(c)?c:[c]))},z=function(b){if(b!==v||!n.currTemplate.closeBtn)n.currTemplate.closeBtn=a(n.st.closeMarkup.replace(\"%title%\",n.st.tClose)),v=b;return n.currTemplate.closeBtn},A=function(){a.magnificPopup.instance||(n=new o,n.init(),a.magnificPopup.instance=n)},B=function(){var a=document.createElement(\"p\").style,b=[\"ms\",\"O\",\"Moz\",\"Webkit\"];if(a.transition!==undefined)return!0;while(b.length)if(b.pop()+\"Transition\"in a)return!0;return!1};o.prototype={constructor:o,init:function(){var b=navigator.appVersion;n.isLowIE=n.isIE8=document.all&&!document.addEventListener,n.isAndroid=/android/gi.test(b),n.isIOS=/iphone|ipad|ipod/gi.test(b),n.supportsTransition=B(),n.probablyMobile=n.isAndroid||n.isIOS||/(Opera Mini)|Kindle|webOS|BlackBerry|(Opera Mobi)|(Windows Phone)|IEMobile/i.test(navigator.userAgent),s=a(document),n.popupsCache={}},open:function(b){var c;if(b.isObj===!1){n.items=b.items.toArray(),n.index=0;var d=b.items,e;for(c=0;c<d.length;c++){e=d[c],e.parsed&&(e=e.el[0]);if(e===b.el[0]){n.index=c;break}}}else n.items=a.isArray(b.items)?b.items:[b.items],n.index=b.index||0;if(n.isOpen){n.updateItemHTML();return}n.types=[],u=\"\",b.mainEl&&b.mainEl.length?n.ev=b.mainEl.eq(0):n.ev=s,b.key?(n.popupsCache[b.key]||(n.popupsCache[b.key]={}),n.currTemplate=n.popupsCache[b.key]):n.currTemplate={},n.st=a.extend(!0,{},a.magnificPopup.defaults,b),n.fixedContentPos=n.st.fixedContentPos===\"auto\"?!n.probablyMobile:n.st.fixedContentPos,n.st.modal&&(n.st.closeOnContentClick=!1,n.st.closeOnBgClick=!1,n.st.showCloseBtn=!1,n.st.enableEscapeKey=!1),n.bgOverlay||(n.bgOverlay=x(\"bg\").on(\"click\"+j,function(){n.close()}),n.wrap=x(\"wrap\").attr(\"tabindex\",-1).on(\"click\"+j,function(a){n._checkIfClose(a.target)&&n.close()}),n.container=x(\"container\",n.wrap)),n.contentContainer=x(\"content\"),n.st.preloader&&(n.preloader=x(\"preloader\",n.container,n.st.tLoading));var h=a.magnificPopup.modules;for(c=0;c<h.length;c++){var i=h[c];i=i.charAt(0).toUpperCase()+i.slice(1),n[\"init\"+i].call(n)}y(\"BeforeOpen\"),n.st.showCloseBtn&&(n.st.closeBtnInside?(w(f,function(a,b,c,d){c.close_replaceWith=z(d.type)}),u+=\" mfp-close-btn-in\"):n.wrap.append(z())),n.st.alignTop&&(u+=\" mfp-align-top\"),n.fixedContentPos?n.wrap.css({overflow:n.st.overflowY,overflowX:\"hidden\",overflowY:n.st.overflowY}):n.wrap.css({top:r.scrollTop(),position:\"absolute\"}),(n.st.fixedBgPos===!1||n.st.fixedBgPos===\"auto\"&&!n.fixedContentPos)&&n.bgOverlay.css({height:s.height(),position:\"absolute\"}),n.st.enableEscapeKey&&s.on(\"keyup\"+j,function(a){a.keyCode===27&&n.close()}),r.on(\"resize\"+j,function(){n.updateSize()}),n.st.closeOnContentClick||(u+=\" mfp-auto-cursor\"),u&&n.wrap.addClass(u);var l=n.wH=r.height(),m={};if(n.fixedContentPos&&n._hasScrollBar(l)){var o=n._getScrollbarSize();o&&(m.marginRight=o)}n.fixedContentPos&&(n.isIE7?a(\"body, html\").css(\"overflow\",\"hidden\"):m.overflow=\"hidden\");var p=n.st.mainClass;return n.isIE7&&(p+=\" mfp-ie7\"),p&&n._addClassToMFP(p),n.updateItemHTML(),y(\"BuildControls\"),a(\"html\").css(m),n.bgOverlay.add(n.wrap).prependTo(n.st.prependTo||a(document.body)),n._lastFocusedEl=document.activeElement,setTimeout(function(){n.content?(n._addClassToMFP(k),n._setFocus()):n.bgOverlay.addClass(k),s.on(\"focusin\"+j,n._onFocusIn)},16),n.isOpen=!0,n.updateSize(l),y(g),b},close:function(){if(!n.isOpen)return;y(c),n.isOpen=!1,n.st.removalDelay&&!n.isLowIE&&n.supportsTransition?(n._addClassToMFP(l),setTimeout(function(){n._close()},n.st.removalDelay)):n._close()},_close:function(){y(b);var c=l+\" \"+k+\" \";n.bgOverlay.detach(),n.wrap.detach(),n.container.empty(),n.st.mainClass&&(c+=n.st.mainClass+\" \"),n._removeClassFromMFP(c);if(n.fixedContentPos){var e={marginRight:\"\"};n.isIE7?a(\"body, html\").css(\"overflow\",\"\"):e.overflow=\"\",a(\"html\").css(e)}s.off(\"keyup\"+j+\" focusin\"+j),n.ev.off(j),n.wrap.attr(\"class\",\"mfp-wrap\").removeAttr(\"style\"),n.bgOverlay.attr(\"class\",\"mfp-bg\"),n.container.attr(\"class\",\"mfp-container\"),n.st.showCloseBtn&&(!n.st.closeBtnInside||n.currTemplate[n.currItem.type]===!0)&&n.currTemplate.closeBtn&&n.currTemplate.closeBtn.detach(),n.st.autoFocusLast&&n._lastFocusedEl&&a(n._lastFocusedEl).focus(),n.currItem=null,n.content=null,n.currTemplate=null,n.prevHeight=0,y(d)},updateSize:function(a){if(n.isIOS){var b=document.documentElement.clientWidth/window.innerWidth,c=window.innerHeight*b;n.wrap.css(\"height\",c),n.wH=c}else n.wH=a||r.height();n.fixedContentPos||n.wrap.css(\"height\",n.wH),y(\"Resize\")},updateItemHTML:function(){var b=n.items[n.index];n.contentContainer.detach(),n.content&&n.content.detach(),b.parsed||(b=n.parseEl(n.index));var c=b.type;y(\"BeforeChange\",[n.currItem?n.currItem.type:\"\",c]),n.currItem=b;if(!n.currTemplate[c]){var d=n.st[c]?n.st[c].markup:!1;y(\"FirstMarkupParse\",d),d?n.currTemplate[c]=a(d):n.currTemplate[c]=!0}t&&t!==b.type&&n.container.removeClass(\"mfp-\"+t+\"-holder\");var e=n[\"get\"+c.charAt(0).toUpperCase()+c.slice(1)](b,n.currTemplate[c]);n.appendContent(e,c),b.preloaded=!0,y(h,b),t=b.type,n.container.prepend(n.contentContainer),y(\"AfterChange\")},appendContent:function(a,b){n.content=a,a?n.st.showCloseBtn&&n.st.closeBtnInside&&n.currTemplate[b]===!0?n.content.find(\".mfp-close\").length||n.content.append(z()):n.content=a:n.content=\"\",y(e),n.container.addClass(\"mfp-\"+b+\"-holder\"),n.contentContainer.append(n.content)},parseEl:function(b){var c=n.items[b],d;c.tagName?c={el:a(c)}:(d=c.type,c={data:c,src:c.src});if(c.el){var e=n.types;for(var f=0;f<e.length;f++)if(c.el.hasClass(\"mfp-\"+e[f])){d=e[f];break}c.src=c.el.attr(\"data-mfp-src\"),c.src||(c.src=c.el.attr(\"href\"))}return c.type=d||n.st.type||\"inline\",c.index=b,c.parsed=!0,n.items[b]=c,y(\"ElementParse\",c),n.items[b]},addGroup:function(a,b){var c=function(c){c.mfpEl=this,n._openClick(c,a,b)};b||(b={});var d=\"click.magnificPopup\";b.mainEl=a,b.items?(b.isObj=!0,a.off(d).on(d,c)):(b.isObj=!1,b.delegate?a.off(d).on(d,b.delegate,c):(b.items=a,a.off(d).on(d,c)))},_openClick:function(b,c,d){var e=d.midClick!==undefined?d.midClick:a.magnificPopup.defaults.midClick;if(!e&&(b.which===2||b.ctrlKey||b.metaKey||b.altKey||b.shiftKey))return;var f=d.disableOn!==undefined?d.disableOn:a.magnificPopup.defaults.disableOn;if(f)if(a.isFunction(f)){if(!f.call(n))return!0}else if(r.width()<f)return!0;b.type&&(b.preventDefault(),n.isOpen&&b.stopPropagation()),d.el=a(b.mfpEl),d.delegate&&(d.items=c.find(d.delegate)),n.open(d)},updateStatus:function(a,b){if(n.preloader){q!==a&&n.container.removeClass(\"mfp-s-\"+q),!b&&a===\"loading\"&&(b=n.st.tLoading);var c={status:a,text:b};y(\"UpdateStatus\",c),a=c.status,b=c.text,n.preloader.html(b),n.preloader.find(\"a\").on(\"click\",function(a){a.stopImmediatePropagation()}),n.container.addClass(\"mfp-s-\"+a),q=a}},_checkIfClose:function(b){if(a(b).hasClass(m))return;var c=n.st.closeOnContentClick,d=n.st.closeOnBgClick;if(c&&d)return!0;if(!n.content||a(b).hasClass(\"mfp-close\")||n.preloader&&b===n.preloader[0])return!0;if(b!==n.content[0]&&!a.contains(n.content[0],b)){if(d&&a.contains(document,b))return!0}else if(c)return!0;return!1},_addClassToMFP:function(a){n.bgOverlay.addClass(a),n.wrap.addClass(a)},_removeClassFromMFP:function(a){this.bgOverlay.removeClass(a),n.wrap.removeClass(a)},_hasScrollBar:function(a){return(n.isIE7?s.height():document.body.scrollHeight)>(a||r.height())},_setFocus:function(){(n.st.focus?n.content.find(n.st.focus).eq(0):n.wrap).focus()},_onFocusIn:function(b){if(b.target!==n.wrap[0]&&!a.contains(n.wrap[0],b.target))return n._setFocus(),!1},_parseMarkup:function(b,c,d){var e;d.data&&(c=a.extend(d.data,c)),y(f,[b,c,d]),a.each(c,function(c,d){if(d===undefined||d===!1)return!0;e=c.split(\"_\");if(e.length>1){var f=b.find(j+\"-\"+e[0]);if(f.length>0){var g=e[1];g===\"replaceWith\"?f[0]!==d[0]&&f.replaceWith(d):g===\"img\"?f.is(\"img\")?f.attr(\"src\",d):f.replaceWith(a(\"<img>\").attr(\"src\",d).attr(\"class\",f.attr(\"class\"))):f.attr(e[1],d)}}else b.find(j+\"-\"+c).html(d)})},_getScrollbarSize:function(){if(n.scrollbarSize===undefined){var a=document.createElement(\"div\");a.style.cssText=\"width: 99px; height: 99px; overflow: scroll; position: absolute; top: -9999px;\",document.body.appendChild(a),n.scrollbarSize=a.offsetWidth-a.clientWidth,document.body.removeChild(a)}return n.scrollbarSize}},a.magnificPopup={instance:null,proto:o.prototype,modules:[],open:function(b,c){return A(),b?b=a.extend(!0,{},b):b={},b.isObj=!0,b.index=c||0,this.instance.open(b)},close:function(){return a.magnificPopup.instance&&a.magnificPopup.instance.close()},registerModule:function(b,c){c.options&&(a.magnificPopup.defaults[b]=c.options),a.extend(this.proto,c.proto),this.modules.push(b)},defaults:{disableOn:0,key:null,midClick:!1,mainClass:\"\",preloader:!0,focus:\"\",closeOnContentClick:!1,closeOnBgClick:!0,closeBtnInside:!0,showCloseBtn:!0,enableEscapeKey:!0,modal:!1,alignTop:!1,removalDelay:0,prependTo:null,fixedContentPos:\"auto\",fixedBgPos:\"auto\",overflowY:\"auto\",closeMarkup:'<button title=\"%title%\" type=\"button\" class=\"mfp-close\">&#215;</button>',tClose:\"Close (Esc)\",tLoading:\"Loading...\",autoFocusLast:!0}},a.fn.magnificPopup=function(b){A();var c=a(this);if(typeof b==\"string\")if(b===\"open\"){var d,e=p?c.data(\"magnificPopup\"):c[0].magnificPopup,f=parseInt(arguments[1],10)||0;e.items?d=e.items[f]:(d=c,e.delegate&&(d=d.find(e.delegate)),d=d.eq(f)),n._openClick({mfpEl:d},c,e)}else n.isOpen&&n[b].apply(n,Array.prototype.slice.call(arguments,1));else b=a.extend(!0,{},b),p?c.data(\"magnificPopup\",b):c[0].magnificPopup=b,n.addGroup(c,b);return c};var C=\"inline\",D,E,F,G=function(){F&&(E.after(F.addClass(D)).detach(),F=null)};a.magnificPopup.registerModule(C,{options:{hiddenClass:\"hide\",markup:\"\",tNotFound:\"Content not found\"},proto:{initInline:function(){n.types.push(C),w(b+\".\"+C,function(){G()})},getInline:function(b,c){G();if(b.src){var d=n.st.inline,e=a(b.src);if(e.length){var f=e[0].parentNode;f&&f.tagName&&(E||(D=d.hiddenClass,E=x(D),D=\"mfp-\"+D),F=e.after(E).detach().removeClass(D)),n.updateStatus(\"ready\")}else n.updateStatus(\"error\",d.tNotFound),e=a(\"<div>\");return b.inlineElement=e,e}return n.updateStatus(\"ready\"),n._parseMarkup(c,{},b),c}}});var H=\"ajax\",I,J=function(){I&&a(document.body).removeClass(I)},K=function(){J(),n.req&&n.req.abort()};a.magnificPopup.registerModule(H,{options:{settings:null,cursor:\"mfp-ajax-cur\",tError:'<a href=\"%url%\">The content</a> could not be loaded.'},proto:{initAjax:function(){n.types.push(H),I=n.st.ajax.cursor,w(b+\".\"+H,K),w(\"BeforeChange.\"+H,K)},getAjax:function(b){I&&a(document.body).addClass(I),n.updateStatus(\"loading\");var c=a.extend({url:b.src,success:function(c,d,e){var f={data:c,xhr:e};y(\"ParseAjax\",f),n.appendContent(a(f.data),H),b.finished=!0,J(),n._setFocus(),setTimeout(function(){n.wrap.addClass(k)},16),n.updateStatus(\"ready\"),y(\"AjaxContentAdded\")},error:function(){J(),b.finished=b.loadError=!0,n.updateStatus(\"error\",n.st.ajax.tError.replace(\"%url%\",b.src))}},n.st.ajax.settings);return n.req=a.ajax(c),\"\"}}});var L,M=function(b){if(b.data&&b.data.title!==undefined)return b.data.title;var c=n.st.image.titleSrc;if(c){if(a.isFunction(c))return c.call(n,b);if(b.el)return b.el.attr(c)||\"\"}return\"\"};a.magnificPopup.registerModule(\"image\",{options:{markup:'<div class=\"mfp-figure\"><div class=\"mfp-close\"></div><figure><div class=\"mfp-img\"></div><figcaption><div class=\"mfp-bottom-bar\"><div class=\"mfp-title\"></div><div class=\"mfp-counter\"></div></div></figcaption></figure></div>',cursor:\"mfp-zoom-out-cur\",titleSrc:\"title\",verticalFit:!0,tError:'<a href=\"%url%\">The image</a> could not be loaded.'},proto:{initImage:function(){var c=n.st.image,d=\".image\";n.types.push(\"image\"),w(g+d,function(){n.currItem.type===\"image\"&&c.cursor&&a(document.body).addClass(c.cursor)}),w(b+d,function(){c.cursor&&a(document.body).removeClass(c.cursor),r.off(\"resize\"+j)}),w(\"Resize\"+d,n.resizeImage),n.isLowIE&&w(\"AfterChange\",n.resizeImage)},resizeImage:function(){var a=n.currItem;if(!a||!a.img)return;if(n.st.image.verticalFit){var b=0;n.isLowIE&&(b=parseInt(a.img.css(\"padding-top\"),10)+parseInt(a.img.css(\"padding-bottom\"),10)),a.img.css(\"max-height\",n.wH-b)}},_onImageHasSize:function(a){a.img&&(a.hasSize=!0,L&&clearInterval(L),a.isCheckingImgSize=!1,y(\"ImageHasSize\",a),a.imgHidden&&(n.content&&n.content.removeClass(\"mfp-loading\"),a.imgHidden=!1))},findImageSize:function(a){var b=0,c=a.img[0],d=function(e){L&&clearInterval(L),L=setInterval(function(){if(c.naturalWidth>0){n._onImageHasSize(a);return}b>200&&clearInterval(L),b++,b===3?d(10):b===40?d(50):b===100&&d(500)},e)};d(1)},getImage:function(b,c){var d=0,e=function(){b&&(b.img[0].complete?(b.img.off(\".mfploader\"),b===n.currItem&&(n._onImageHasSize(b),n.updateStatus(\"ready\")),b.hasSize=!0,b.loaded=!0,y(\"ImageLoadComplete\")):(d++,d<200?setTimeout(e,100):f()))},f=function(){b&&(b.img.off(\".mfploader\"),b===n.currItem&&(n._onImageHasSize(b),n.updateStatus(\"error\",g.tError.replace(\"%url%\",b.src))),b.hasSize=!0,b.loaded=!0,b.loadError=!0)},g=n.st.image,h=c.find(\".mfp-img\");if(h.length){var i=document.createElement(\"img\");i.className=\"mfp-img\",b.el&&b.el.find(\"img\").length&&(i.alt=b.el.find(\"img\").attr(\"alt\")),b.img=a(i).on(\"load.mfploader\",e).on(\"error.mfploader\",f),i.src=b.src,h.is(\"img\")&&(b.img=b.img.clone()),i=b.img[0],i.naturalWidth>0?b.hasSize=!0:i.width||(b.hasSize=!1)}return n._parseMarkup(c,{title:M(b),img_replaceWith:b.img},b),n.resizeImage(),b.hasSize?(L&&clearInterval(L),b.loadError?(c.addClass(\"mfp-loading\"),n.updateStatus(\"error\",g.tError.replace(\"%url%\",b.src))):(c.removeClass(\"mfp-loading\"),n.updateStatus(\"ready\")),c):(n.updateStatus(\"loading\"),b.loading=!0,b.hasSize||(b.imgHidden=!0,c.addClass(\"mfp-loading\"),n.findImageSize(b)),c)}}});var N,O=function(){return N===undefined&&(N=document.createElement(\"p\").style.MozTransform!==undefined),N};a.magnificPopup.registerModule(\"zoom\",{options:{enabled:!1,easing:\"ease-in-out\",duration:300,opener:function(a){return a.is(\"img\")?a:a.find(\"img\")}},proto:{initZoom:function(){var a=n.st.zoom,d=\".zoom\",e;if(!a.enabled||!n.supportsTransition)return;var f=a.duration,g=function(b){var c=b.clone().removeAttr(\"style\").removeAttr(\"class\").addClass(\"mfp-animated-image\"),d=\"all \"+a.duration/1e3+\"s \"+a.easing,e={position:\"fixed\",zIndex:9999,left:0,top:0,\"-webkit-backface-visibility\":\"hidden\"},f=\"transition\";return e[\"-webkit-\"+f]=e[\"-moz-\"+f]=e[\"-o-\"+f]=e[f]=d,c.css(e),c},h=function(){n.content.css(\"visibility\",\"visible\")},i,j;w(\"BuildControls\"+d,function(){if(n._allowZoom()){clearTimeout(i),n.content.css(\"visibility\",\"hidden\"),e=n._getItemToZoom();if(!e){h();return}j=g(e),j.css(n._getOffset()),n.wrap.append(j),i=setTimeout(function(){j.css(n._getOffset(!0)),i=setTimeout(function(){h(),setTimeout(function(){j.remove(),e=j=null,y(\"ZoomAnimationEnded\")},16)},f)},16)}}),w(c+d,function(){if(n._allowZoom()){clearTimeout(i),n.st.removalDelay=f;if(!e){e=n._getItemToZoom();if(!e)return;j=g(e)}j.css(n._getOffset(!0)),n.wrap.append(j),n.content.css(\"visibility\",\"hidden\"),setTimeout(function(){j.css(n._getOffset())},16)}}),w(b+d,function(){n._allowZoom()&&(h(),j&&j.remove(),e=null)})},_allowZoom:function(){return n.currItem.type===\"image\"},_getItemToZoom:function(){return n.currItem.hasSize?n.currItem.img:!1},_getOffset:function(b){var c;b?c=n.currItem.img:c=n.st.zoom.opener(n.currItem.el||n.currItem);var d=c.offset(),e=parseInt(c.css(\"padding-top\"),10),f=parseInt(c.css(\"padding-bottom\"),10);d.top-=a(window).scrollTop()-e;var g={width:c.width(),height:(p?c.innerHeight():c[0].offsetHeight)-f-e};return O()?g[\"-moz-transform\"]=g.transform=\"translate(\"+d.left+\"px,\"+d.top+\"px)\":(g.left=d.left,g.top=d.top),g}}});var P=\"iframe\",Q=\"//about:blank\",R=function(a){if(n.currTemplate[P]){var b=n.currTemplate[P].find(\"iframe\");b.length&&(a||(b[0].src=Q),n.isIE8&&b.css(\"display\",a?\"block\":\"none\"))}};a.magnificPopup.registerModule(P,{options:{markup:'<div class=\"mfp-iframe-scaler\"><div class=\"mfp-close\"></div><iframe class=\"mfp-iframe\" src=\"//about:blank\" frameborder=\"0\" allowfullscreen></iframe></div>',srcAction:\"iframe_src\",patterns:{youtube:{index:\"youtube.com\",id:\"v=\",src:\"//www.youtube.com/embed/%id%?autoplay=1\"},vimeo:{index:\"vimeo.com/\",id:\"/\",src:\"//player.vimeo.com/video/%id%?autoplay=1\"},gmaps:{index:\"//maps.google.\",src:\"%id%&output=embed\"}}},proto:{initIframe:function(){n.types.push(P),w(\"BeforeChange\",function(a,b,c){b!==c&&(b===P?R():c===P&&R(!0))}),w(b+\".\"+P,function(){R()})},getIframe:function(b,c){var d=b.src,e=n.st.iframe;a.each(e.patterns,function(){if(d.indexOf(this.index)>-1)return this.id&&(typeof this.id==\"string\"?d=d.substr(d.lastIndexOf(this.id)+this.id.length,d.length):d=this.id.call(this,d)),d=this.src.replace(\"%id%\",d),!1});var f={};return e.srcAction&&(f[e.srcAction]=d),n._parseMarkup(c,f,b),n.updateStatus(\"ready\"),c}}});var S=function(a){var b=n.items.length;return a>b-1?a-b:a<0?b+a:a},T=function(a,b,c){return a.replace(/%curr%/gi,b+1).replace(/%total%/gi,c)};a.magnificPopup.registerModule(\"gallery\",{options:{enabled:!1,arrowMarkup:'<button title=\"%title%\" type=\"button\" class=\"mfp-arrow mfp-arrow-%dir%\"></button>',preload:[0,2],navigateByImgClick:!0,arrows:!0,tPrev:\"Previous (Left arrow key)\",tNext:\"Next (Right arrow key)\",tCounter:\"%curr% of %total%\"},proto:{initGallery:function(){var c=n.st.gallery,d=\".mfp-gallery\";n.direction=!0;if(!c||!c.enabled)return!1;u+=\" mfp-gallery\",w(g+d,function(){c.navigateByImgClick&&n.wrap.on(\"click\"+d,\".mfp-img\",function(){if(n.items.length>1)return n.next(),!1}),s.on(\"keydown\"+d,function(a){a.keyCode===37?n.prev():a.keyCode===39&&n.next()})}),w(\"UpdateStatus\"+d,function(a,b){b.text&&(b.text=T(b.text,n.currItem.index,n.items.length))}),w(f+d,function(a,b,d,e){var f=n.items.length;d.counter=f>1?T(c.tCounter,e.index,f):\"\"}),w(\"BuildControls\"+d,function(){if(n.items.length>1&&c.arrows&&!n.arrowLeft){var b=c.arrowMarkup,d=n.arrowLeft=a(b.replace(/%title%/gi,c.tPrev).replace(/%dir%/gi,\"left\")).addClass(m),e=n.arrowRight=a(b.replace(/%title%/gi,c.tNext).replace(/%dir%/gi,\"right\")).addClass(m);d.click(function(){n.prev()}),e.click(function(){n.next()}),n.container.append(d.add(e))}}),w(h+d,function(){n._preloadTimeout&&clearTimeout(n._preloadTimeout),n._preloadTimeout=setTimeout(function(){n.preloadNearbyImages(),n._preloadTimeout=null},16)}),w(b+d,function(){s.off(d),n.wrap.off(\"click\"+d),n.arrowRight=n.arrowLeft=null})},next:function(){n.direction=!0,n.index=S(n.index+1),n.updateItemHTML()},prev:function(){n.direction=!1,n.index=S(n.index-1),n.updateItemHTML()},goTo:function(a){n.direction=a>=n.index,n.index=a,n.updateItemHTML()},preloadNearbyImages:function(){var a=n.st.gallery.preload,b=Math.min(a[0],n.items.length),c=Math.min(a[1],n.items.length),d;for(d=1;d<=(n.direction?c:b);d++)n._preloadItem(n.index+d);for(d=1;d<=(n.direction?b:c);d++)n._preloadItem(n.index-d)},_preloadItem:function(b){b=S(b);if(n.items[b].preloaded)return;var c=n.items[b];c.parsed||(c=n.parseEl(b)),y(\"LazyLoad\",c),c.type===\"image\"&&(c.img=a('<img class=\"mfp-img\" />').on(\"load.mfploader\",function(){c.hasSize=!0}).on(\"error.mfploader\",function(){c.hasSize=!0,c.loadError=!0,y(\"LazyLoadError\",c)}).attr(\"src\",c.src)),c.preloaded=!0}}});var U=\"retina\";a.magnificPopup.registerModule(U,{options:{replaceSrc:function(a){return a.src.replace(/\\.\\w+$/,function(a){return\"@2x\"+a})},ratio:1},proto:{initRetina:function(){if(window.devicePixelRatio>1){var a=n.st.retina,b=a.ratio;b=isNaN(b)?b():b,b>1&&(w(\"ImageHasSize.\"+U,function(a,c){c.img.css({\"max-width\":c.img[0].naturalWidth/b,width:\"100%\"})}),w(\"ElementParse.\"+U,function(c,d){d.src=a.replaceSrc(d,b)}))}}}}),A()})","Mageplaza_Core/js/jquery.ui.touch-punch.min.js":"/*!\r\n * jQuery UI Touch Punch 0.2.3\r\n *\r\n * Copyright 2011\u20132014, Dave Furfero\r\n * Dual licensed under the MIT or GPL Version 2 licenses.\r\n *\r\n * Depends:\r\n *  jquery.ui.widget.js\r\n *  jquery.ui.mouse.js\r\n */\r\n!function(a){function f(a,b){if(!(a.originalEvent.touches.length>1)){a.preventDefault();var c=a.originalEvent.changedTouches[0],d=document.createEvent(\"MouseEvents\");d.initMouseEvent(b,!0,!0,window,1,c.screenX,c.screenY,c.clientX,c.clientY,!1,!1,!1,!1,0,null),a.target.dispatchEvent(d)}}if(a.support.touch=\"ontouchend\"in document,a.support.touch){var e,b=a.ui.mouse.prototype,c=b._mouseInit,d=b._mouseDestroy;b._touchStart=function(a){var b=this;!e&&b._mouseCapture(a.originalEvent.changedTouches[0])&&(e=!0,b._touchMoved=!1,f(a,\"mouseover\"),f(a,\"mousemove\"),f(a,\"mousedown\"))},b._touchMove=function(a){e&&(this._touchMoved=!0,f(a,\"mousemove\"))},b._touchEnd=function(a){e&&(f(a,\"mouseup\"),f(a,\"mouseout\"),this._touchMoved||f(a,\"click\"),e=!1)},b._mouseInit=function(){var b=this;b.element.bind({touchstart:a.proxy(b,\"_touchStart\"),touchmove:a.proxy(b,\"_touchMove\"),touchend:a.proxy(b,\"_touchEnd\")}),c.call(b)},b._mouseDestroy=function(){var b=this;b.element.unbind({touchstart:a.proxy(b,\"_touchStart\"),touchmove:a.proxy(b,\"_touchMove\"),touchend:a.proxy(b,\"_touchEnd\")}),d.call(b)}}}(jQuery);\r\n","Mageplaza_Core/js/owl.carousel.min.js":"/**\r\n * Owl Carousel v2.3.4\r\n * Copyright 2013-2018 David Deutsch\r\n * Licensed under: SEE LICENSE IN https://github.com/OwlCarousel2/OwlCarousel2/blob/master/LICENSE\r\n */\r\n!function(a,b,c,d){function e(b,c){this.settings=null,this.options=a.extend({},e.Defaults,c),this.$element=a(b),this._handlers={},this._plugins={},this._supress={},this._current=null,this._speed=null,this._coordinates=[],this._breakpoint=null,this._width=null,this._items=[],this._clones=[],this._mergers=[],this._widths=[],this._invalidated={},this._pipe=[],this._drag={time:null,target:null,pointer:null,stage:{start:null,current:null},direction:null},this._states={current:{},tags:{initializing:[\"busy\"],animating:[\"busy\"],dragging:[\"interacting\"]}},a.each([\"onResize\",\"onThrottledResize\"],a.proxy(function(b,c){this._handlers[c]=a.proxy(this[c],this)},this)),a.each(e.Plugins,a.proxy(function(a,b){this._plugins[a.charAt(0).toLowerCase()+a.slice(1)]=new b(this)},this)),a.each(e.Workers,a.proxy(function(b,c){this._pipe.push({filter:c.filter,run:a.proxy(c.run,this)})},this)),this.setup(),this.initialize()}e.Defaults={items:3,loop:!1,center:!1,rewind:!1,checkVisibility:!0,mouseDrag:!0,touchDrag:!0,pullDrag:!0,freeDrag:!1,margin:0,stagePadding:0,merge:!1,mergeFit:!0,autoWidth:!1,startPosition:0,rtl:!1,smartSpeed:250,fluidSpeed:!1,dragEndSpeed:!1,responsive:{},responsiveRefreshRate:200,responsiveBaseElement:b,fallbackEasing:\"swing\",slideTransition:\"\",info:!1,nestedItemSelector:!1,itemElement:\"div\",stageElement:\"div\",refreshClass:\"owl-refresh\",loadedClass:\"owl-loaded\",loadingClass:\"owl-loading\",rtlClass:\"owl-rtl\",responsiveClass:\"owl-responsive\",dragClass:\"owl-drag\",itemClass:\"owl-item\",stageClass:\"owl-stage\",stageOuterClass:\"owl-stage-outer\",grabClass:\"owl-grab\"},e.Width={Default:\"default\",Inner:\"inner\",Outer:\"outer\"},e.Type={Event:\"event\",State:\"state\"},e.Plugins={},e.Workers=[{filter:[\"width\",\"settings\"],run:function(){this._width=this.$element.width()}},{filter:[\"width\",\"items\",\"settings\"],run:function(a){a.current=this._items&&this._items[this.relative(this._current)]}},{filter:[\"items\",\"settings\"],run:function(){this.$stage.children(\".cloned\").remove()}},{filter:[\"width\",\"items\",\"settings\"],run:function(a){var b=this.settings.margin||\"\",c=!this.settings.autoWidth,d=this.settings.rtl,e={width:\"auto\",\"margin-left\":d?b:\"\",\"margin-right\":d?\"\":b};!c&&this.$stage.children().css(e),a.css=e}},{filter:[\"width\",\"items\",\"settings\"],run:function(a){var b=(this.width()/this.settings.items).toFixed(3)-this.settings.margin,c=null,d=this._items.length,e=!this.settings.autoWidth,f=[];for(a.items={merge:!1,width:b};d--;)c=this._mergers[d],c=this.settings.mergeFit&&Math.min(c,this.settings.items)||c,a.items.merge=c>1||a.items.merge,f[d]=e?b*c:this._items[d].width();this._widths=f}},{filter:[\"items\",\"settings\"],run:function(){var b=[],c=this._items,d=this.settings,e=Math.max(2*d.items,4),f=2*Math.ceil(c.length/2),g=d.loop&&c.length?d.rewind?e:Math.max(e,f):0,h=\"\",i=\"\";for(g/=2;g>0;)b.push(this.normalize(b.length/2,!0)),h+=c[b[b.length-1]][0].outerHTML,b.push(this.normalize(c.length-1-(b.length-1)/2,!0)),i=c[b[b.length-1]][0].outerHTML+i,g-=1;this._clones=b,a(h).addClass(\"cloned\").appendTo(this.$stage),a(i).addClass(\"cloned\").prependTo(this.$stage)}},{filter:[\"width\",\"items\",\"settings\"],run:function(){for(var a=this.settings.rtl?1:-1,b=this._clones.length+this._items.length,c=-1,d=0,e=0,f=[];++c<b;)d=f[c-1]||0,e=this._widths[this.relative(c)]+this.settings.margin,f.push(d+e*a);this._coordinates=f}},{filter:[\"width\",\"items\",\"settings\"],run:function(){var a=this.settings.stagePadding,b=this._coordinates,c={width:Math.ceil(Math.abs(b[b.length-1]))+2*a,\"padding-left\":a||\"\",\"padding-right\":a||\"\"};this.$stage.css(c)}},{filter:[\"width\",\"items\",\"settings\"],run:function(a){var b=this._coordinates.length,c=!this.settings.autoWidth,d=this.$stage.children();if(c&&a.items.merge)for(;b--;)a.css.width=this._widths[this.relative(b)],d.eq(b).css(a.css);else c&&(a.css.width=a.items.width,d.css(a.css))}},{filter:[\"items\"],run:function(){this._coordinates.length<1&&this.$stage.removeAttr(\"style\")}},{filter:[\"width\",\"items\",\"settings\"],run:function(a){a.current=a.current?this.$stage.children().index(a.current):0,a.current=Math.max(this.minimum(),Math.min(this.maximum(),a.current)),this.reset(a.current)}},{filter:[\"position\"],run:function(){this.animate(this.coordinates(this._current))}},{filter:[\"width\",\"position\",\"items\",\"settings\"],run:function(){var a,b,c,d,e=this.settings.rtl?1:-1,f=2*this.settings.stagePadding,g=this.coordinates(this.current())+f,h=g+this.width()*e,i=[];for(c=0,d=this._coordinates.length;c<d;c++)a=this._coordinates[c-1]||0,b=Math.abs(this._coordinates[c])+f*e,(this.op(a,\"<=\",g)&&this.op(a,\">\",h)||this.op(b,\"<\",g)&&this.op(b,\">\",h))&&i.push(c);this.$stage.children(\".active\").removeClass(\"active\"),this.$stage.children(\":eq(\"+i.join(\"), :eq(\")+\")\").addClass(\"active\"),this.$stage.children(\".center\").removeClass(\"center\"),this.settings.center&&this.$stage.children().eq(this.current()).addClass(\"center\")}}],e.prototype.initializeStage=function(){this.$stage=this.$element.find(\".\"+this.settings.stageClass),this.$stage.length||(this.$element.addClass(this.options.loadingClass),this.$stage=a(\"<\"+this.settings.stageElement+\">\",{class:this.settings.stageClass}).wrap(a(\"<div/>\",{class:this.settings.stageOuterClass})),this.$element.append(this.$stage.parent()))},e.prototype.initializeItems=function(){var b=this.$element.find(\".owl-item\");if(b.length)return this._items=b.get().map(function(b){return a(b)}),this._mergers=this._items.map(function(){return 1}),void this.refresh();this.replace(this.$element.children().not(this.$stage.parent())),this.isVisible()?this.refresh():this.invalidate(\"width\"),this.$element.removeClass(this.options.loadingClass).addClass(this.options.loadedClass)},e.prototype.initialize=function(){if(this.enter(\"initializing\"),this.trigger(\"initialize\"),this.$element.toggleClass(this.settings.rtlClass,this.settings.rtl),this.settings.autoWidth&&!this.is(\"pre-loading\")){var a,b,c;a=this.$element.find(\"img\"),b=this.settings.nestedItemSelector?\".\"+this.settings.nestedItemSelector:d,c=this.$element.children(b).width(),a.length&&c<=0&&this.preloadAutoWidthImages(a)}this.initializeStage(),this.initializeItems(),this.registerEventHandlers(),this.leave(\"initializing\"),this.trigger(\"initialized\")},e.prototype.isVisible=function(){return!this.settings.checkVisibility||this.$element.is(\":visible\")},e.prototype.setup=function(){var b=this.viewport(),c=this.options.responsive,d=-1,e=null;c?(a.each(c,function(a){a<=b&&a>d&&(d=Number(a))}),e=a.extend({},this.options,c[d]),\"function\"==typeof e.stagePadding&&(e.stagePadding=e.stagePadding()),delete e.responsive,e.responsiveClass&&this.$element.attr(\"class\",this.$element.attr(\"class\").replace(new RegExp(\"(\"+this.options.responsiveClass+\"-)\\\\S+\\\\s\",\"g\"),\"$1\"+d))):e=a.extend({},this.options),this.trigger(\"change\",{property:{name:\"settings\",value:e}}),this._breakpoint=d,this.settings=e,this.invalidate(\"settings\"),this.trigger(\"changed\",{property:{name:\"settings\",value:this.settings}})},e.prototype.optionsLogic=function(){this.settings.autoWidth&&(this.settings.stagePadding=!1,this.settings.merge=!1)},e.prototype.prepare=function(b){var c=this.trigger(\"prepare\",{content:b});return c.data||(c.data=a(\"<\"+this.settings.itemElement+\"/>\").addClass(this.options.itemClass).append(b)),this.trigger(\"prepared\",{content:c.data}),c.data},e.prototype.update=function(){for(var b=0,c=this._pipe.length,d=a.proxy(function(a){return this[a]},this._invalidated),e={};b<c;)(this._invalidated.all||a.grep(this._pipe[b].filter,d).length>0)&&this._pipe[b].run(e),b++;this._invalidated={},!this.is(\"valid\")&&this.enter(\"valid\")},e.prototype.width=function(a){switch(a=a||e.Width.Default){case e.Width.Inner:case e.Width.Outer:return this._width;default:return this._width-2*this.settings.stagePadding+this.settings.margin}},e.prototype.refresh=function(){this.enter(\"refreshing\"),this.trigger(\"refresh\"),this.setup(),this.optionsLogic(),this.$element.addClass(this.options.refreshClass),this.update(),this.$element.removeClass(this.options.refreshClass),this.leave(\"refreshing\"),this.trigger(\"refreshed\")},e.prototype.onThrottledResize=function(){b.clearTimeout(this.resizeTimer),this.resizeTimer=b.setTimeout(this._handlers.onResize,this.settings.responsiveRefreshRate)},e.prototype.onResize=function(){return!!this._items.length&&(this._width!==this.$element.width()&&(!!this.isVisible()&&(this.enter(\"resizing\"),this.trigger(\"resize\").isDefaultPrevented()?(this.leave(\"resizing\"),!1):(this.invalidate(\"width\"),this.refresh(),this.leave(\"resizing\"),void this.trigger(\"resized\")))))},e.prototype.registerEventHandlers=function(){a.support.transition&&this.$stage.on(a.support.transition.end+\".owl.core\",a.proxy(this.onTransitionEnd,this)),!1!==this.settings.responsive&&this.on(b,\"resize\",this._handlers.onThrottledResize),this.settings.mouseDrag&&(this.$element.addClass(this.options.dragClass),this.$stage.on(\"mousedown.owl.core\",a.proxy(this.onDragStart,this)),this.$stage.on(\"dragstart.owl.core selectstart.owl.core\",function(){return!1})),this.settings.touchDrag&&(this.$stage.on(\"touchstart.owl.core\",a.proxy(this.onDragStart,this)),this.$stage.on(\"touchcancel.owl.core\",a.proxy(this.onDragEnd,this)))},e.prototype.onDragStart=function(b){var d=null;3!==b.which&&(a.support.transform?(d=this.$stage.css(\"transform\").replace(/.*\\(|\\)| /g,\"\").split(\",\"),d={x:d[16===d.length?12:4],y:d[16===d.length?13:5]}):(d=this.$stage.position(),d={x:this.settings.rtl?d.left+this.$stage.width()-this.width()+this.settings.margin:d.left,y:d.top}),this.is(\"animating\")&&(a.support.transform?this.animate(d.x):this.$stage.stop(),this.invalidate(\"position\")),this.$element.toggleClass(this.options.grabClass,\"mousedown\"===b.type),this.speed(0),this._drag.time=(new Date).getTime(),this._drag.target=a(b.target),this._drag.stage.start=d,this._drag.stage.current=d,this._drag.pointer=this.pointer(b),a(c).on(\"mouseup.owl.core touchend.owl.core\",a.proxy(this.onDragEnd,this)),a(c).one(\"mousemove.owl.core touchmove.owl.core\",a.proxy(function(b){var d=this.difference(this._drag.pointer,this.pointer(b));a(c).on(\"mousemove.owl.core touchmove.owl.core\",a.proxy(this.onDragMove,this)),Math.abs(d.x)<Math.abs(d.y)&&this.is(\"valid\")||(b.preventDefault(),this.enter(\"dragging\"),this.trigger(\"drag\"))},this)))},e.prototype.onDragMove=function(a){var b=null,c=null,d=null,e=this.difference(this._drag.pointer,this.pointer(a)),f=this.difference(this._drag.stage.start,e);this.is(\"dragging\")&&(a.preventDefault(),this.settings.loop?(b=this.coordinates(this.minimum()),c=this.coordinates(this.maximum()+1)-b,f.x=((f.x-b)%c+c)%c+b):(b=this.settings.rtl?this.coordinates(this.maximum()):this.coordinates(this.minimum()),c=this.settings.rtl?this.coordinates(this.minimum()):this.coordinates(this.maximum()),d=this.settings.pullDrag?-1*e.x/5:0,f.x=Math.max(Math.min(f.x,b+d),c+d)),this._drag.stage.current=f,this.animate(f.x))},e.prototype.onDragEnd=function(b){var d=this.difference(this._drag.pointer,this.pointer(b)),e=this._drag.stage.current,f=d.x>0^this.settings.rtl?\"left\":\"right\";a(c).off(\".owl.core\"),this.$element.removeClass(this.options.grabClass),(0!==d.x&&this.is(\"dragging\")||!this.is(\"valid\"))&&(this.speed(this.settings.dragEndSpeed||this.settings.smartSpeed),this.current(this.closest(e.x,0!==d.x?f:this._drag.direction)),this.invalidate(\"position\"),this.update(),this._drag.direction=f,(Math.abs(d.x)>3||(new Date).getTime()-this._drag.time>300)&&this._drag.target.one(\"click.owl.core\",function(){return!1})),this.is(\"dragging\")&&(this.leave(\"dragging\"),this.trigger(\"dragged\"))},e.prototype.closest=function(b,c){var e=-1,f=30,g=this.width(),h=this.coordinates();return this.settings.freeDrag||a.each(h,a.proxy(function(a,i){return\"left\"===c&&b>i-f&&b<i+f?e=a:\"right\"===c&&b>i-g-f&&b<i-g+f?e=a+1:this.op(b,\"<\",i)&&this.op(b,\">\",h[a+1]!==d?h[a+1]:i-g)&&(e=\"left\"===c?a+1:a),-1===e},this)),this.settings.loop||(this.op(b,\">\",h[this.minimum()])?e=b=this.minimum():this.op(b,\"<\",h[this.maximum()])&&(e=b=this.maximum())),e},e.prototype.animate=function(b){var c=this.speed()>0;this.is(\"animating\")&&this.onTransitionEnd(),c&&(this.enter(\"animating\"),this.trigger(\"translate\")),a.support.transform3d&&a.support.transition?this.$stage.css({transform:\"translate3d(\"+b+\"px,0px,0px)\",transition:this.speed()/1e3+\"s\"+(this.settings.slideTransition?\" \"+this.settings.slideTransition:\"\")}):c?this.$stage.animate({left:b+\"px\"},this.speed(),this.settings.fallbackEasing,a.proxy(this.onTransitionEnd,this)):this.$stage.css({left:b+\"px\"})},e.prototype.is=function(a){return this._states.current[a]&&this._states.current[a]>0},e.prototype.current=function(a){if(a===d)return this._current;if(0===this._items.length)return d;if(a=this.normalize(a),this._current!==a){var b=this.trigger(\"change\",{property:{name:\"position\",value:a}});b.data!==d&&(a=this.normalize(b.data)),this._current=a,this.invalidate(\"position\"),this.trigger(\"changed\",{property:{name:\"position\",value:this._current}})}return this._current},e.prototype.invalidate=function(b){return\"string\"===a.type(b)&&(this._invalidated[b]=!0,this.is(\"valid\")&&this.leave(\"valid\")),a.map(this._invalidated,function(a,b){return b})},e.prototype.reset=function(a){(a=this.normalize(a))!==d&&(this._speed=0,this._current=a,this.suppress([\"translate\",\"translated\"]),this.animate(this.coordinates(a)),this.release([\"translate\",\"translated\"]))},e.prototype.normalize=function(a,b){var c=this._items.length,e=b?0:this._clones.length;return!this.isNumeric(a)||c<1?a=d:(a<0||a>=c+e)&&(a=((a-e/2)%c+c)%c+e/2),a},e.prototype.relative=function(a){return a-=this._clones.length/2,this.normalize(a,!0)},e.prototype.maximum=function(a){var b,c,d,e=this.settings,f=this._coordinates.length;if(e.loop)f=this._clones.length/2+this._items.length-1;else if(e.autoWidth||e.merge){if(b=this._items.length)for(c=this._items[--b].width(),d=this.$element.width();b--&&!((c+=this._items[b].width()+this.settings.margin)>d););f=b+1}else f=e.center?this._items.length-1:this._items.length-e.items;return a&&(f-=this._clones.length/2),Math.max(f,0)},e.prototype.minimum=function(a){return a?0:this._clones.length/2},e.prototype.items=function(a){return a===d?this._items.slice():(a=this.normalize(a,!0),this._items[a])},e.prototype.mergers=function(a){return a===d?this._mergers.slice():(a=this.normalize(a,!0),this._mergers[a])},e.prototype.clones=function(b){var c=this._clones.length/2,e=c+this._items.length,f=function(a){return a%2==0?e+a/2:c-(a+1)/2};return b===d?a.map(this._clones,function(a,b){return f(b)}):a.map(this._clones,function(a,c){return a===b?f(c):null})},e.prototype.speed=function(a){return a!==d&&(this._speed=a),this._speed},e.prototype.coordinates=function(b){var c,e=1,f=b-1;return b===d?a.map(this._coordinates,a.proxy(function(a,b){return this.coordinates(b)},this)):(this.settings.center?(this.settings.rtl&&(e=-1,f=b+1),c=this._coordinates[b],c+=(this.width()-c+(this._coordinates[f]||0))/2*e):c=this._coordinates[f]||0,c=Math.ceil(c))},e.prototype.duration=function(a,b,c){return 0===c?0:Math.min(Math.max(Math.abs(b-a),1),6)*Math.abs(c||this.settings.smartSpeed)},e.prototype.to=function(a,b){var c=this.current(),d=null,e=a-this.relative(c),f=(e>0)-(e<0),g=this._items.length,h=this.minimum(),i=this.maximum();this.settings.loop?(!this.settings.rewind&&Math.abs(e)>g/2&&(e+=-1*f*g),a=c+e,(d=((a-h)%g+g)%g+h)!==a&&d-e<=i&&d-e>0&&(c=d-e,a=d,this.reset(c))):this.settings.rewind?(i+=1,a=(a%i+i)%i):a=Math.max(h,Math.min(i,a)),this.speed(this.duration(c,a,b)),this.current(a),this.isVisible()&&this.update()},e.prototype.next=function(a){a=a||!1,this.to(this.relative(this.current())+1,a)},e.prototype.prev=function(a){a=a||!1,this.to(this.relative(this.current())-1,a)},e.prototype.onTransitionEnd=function(a){if(a!==d&&(a.stopPropagation(),(a.target||a.srcElement||a.originalTarget)!==this.$stage.get(0)))return!1;this.leave(\"animating\"),this.trigger(\"translated\")},e.prototype.viewport=function(){var d;return this.options.responsiveBaseElement!==b?d=a(this.options.responsiveBaseElement).width():b.innerWidth?d=b.innerWidth:c.documentElement&&c.documentElement.clientWidth?d=c.documentElement.clientWidth:console.warn(\"Can not detect viewport width.\"),d},e.prototype.replace=function(b){this.$stage.empty(),this._items=[],b&&(b=b instanceof jQuery?b:a(b)),this.settings.nestedItemSelector&&(b=b.find(\".\"+this.settings.nestedItemSelector)),b.filter(function(){return 1===this.nodeType}).each(a.proxy(function(a,b){b=this.prepare(b),this.$stage.append(b),this._items.push(b),this._mergers.push(1*b.find(\"[data-merge]\").addBack(\"[data-merge]\").attr(\"data-merge\")||1)},this)),this.reset(this.isNumeric(this.settings.startPosition)?this.settings.startPosition:0),this.invalidate(\"items\")},e.prototype.add=function(b,c){var e=this.relative(this._current);c=c===d?this._items.length:this.normalize(c,!0),b=b instanceof jQuery?b:a(b),this.trigger(\"add\",{content:b,position:c}),b=this.prepare(b),0===this._items.length||c===this._items.length?(0===this._items.length&&this.$stage.append(b),0!==this._items.length&&this._items[c-1].after(b),this._items.push(b),this._mergers.push(1*b.find(\"[data-merge]\").addBack(\"[data-merge]\").attr(\"data-merge\")||1)):(this._items[c].before(b),this._items.splice(c,0,b),this._mergers.splice(c,0,1*b.find(\"[data-merge]\").addBack(\"[data-merge]\").attr(\"data-merge\")||1)),this._items[e]&&this.reset(this._items[e].index()),this.invalidate(\"items\"),this.trigger(\"added\",{content:b,position:c})},e.prototype.remove=function(a){(a=this.normalize(a,!0))!==d&&(this.trigger(\"remove\",{content:this._items[a],position:a}),this._items[a].remove(),this._items.splice(a,1),this._mergers.splice(a,1),this.invalidate(\"items\"),this.trigger(\"removed\",{content:null,position:a}))},e.prototype.preloadAutoWidthImages=function(b){b.each(a.proxy(function(b,c){this.enter(\"pre-loading\"),c=a(c),a(new Image).one(\"load\",a.proxy(function(a){c.attr(\"src\",a.target.src),c.css(\"opacity\",1),this.leave(\"pre-loading\"),!this.is(\"pre-loading\")&&!this.is(\"initializing\")&&this.refresh()},this)).attr(\"src\",c.attr(\"src\")||c.attr(\"data-src\")||c.attr(\"data-src-retina\"))},this))},e.prototype.destroy=function(){this.$element.off(\".owl.core\"),this.$stage.off(\".owl.core\"),a(c).off(\".owl.core\"),!1!==this.settings.responsive&&(b.clearTimeout(this.resizeTimer),this.off(b,\"resize\",this._handlers.onThrottledResize));for(var d in this._plugins)this._plugins[d].destroy();this.$stage.children(\".cloned\").remove(),this.$stage.unwrap(),this.$stage.children().contents().unwrap(),this.$stage.children().unwrap(),this.$stage.remove(),this.$element.removeClass(this.options.refreshClass).removeClass(this.options.loadingClass).removeClass(this.options.loadedClass).removeClass(this.options.rtlClass).removeClass(this.options.dragClass).removeClass(this.options.grabClass).attr(\"class\",this.$element.attr(\"class\").replace(new RegExp(this.options.responsiveClass+\"-\\\\S+\\\\s\",\"g\"),\"\")).removeData(\"owl.carousel\")},e.prototype.op=function(a,b,c){var d=this.settings.rtl;switch(b){case\"<\":return d?a>c:a<c;case\">\":return d?a<c:a>c;case\">=\":return d?a<=c:a>=c;case\"<=\":return d?a>=c:a<=c}},e.prototype.on=function(a,b,c,d){a.addEventListener?a.addEventListener(b,c,d):a.attachEvent&&a.attachEvent(\"on\"+b,c)},e.prototype.off=function(a,b,c,d){a.removeEventListener?a.removeEventListener(b,c,d):a.detachEvent&&a.detachEvent(\"on\"+b,c)},e.prototype.trigger=function(b,c,d,f,g){var h={item:{count:this._items.length,index:this.current()}},i=a.camelCase(a.grep([\"on\",b,d],function(a){return a}).join(\"-\").toLowerCase()),j=a.Event([b,\"owl\",d||\"carousel\"].join(\".\").toLowerCase(),a.extend({relatedTarget:this},h,c));return this._supress[b]||(a.each(this._plugins,function(a,b){b.onTrigger&&b.onTrigger(j)}),this.register({type:e.Type.Event,name:b}),this.$element.trigger(j),this.settings&&\"function\"==typeof this.settings[i]&&this.settings[i].call(this,j)),j},e.prototype.enter=function(b){a.each([b].concat(this._states.tags[b]||[]),a.proxy(function(a,b){this._states.current[b]===d&&(this._states.current[b]=0),this._states.current[b]++},this))},e.prototype.leave=function(b){a.each([b].concat(this._states.tags[b]||[]),a.proxy(function(a,b){this._states.current[b]--},this))},e.prototype.register=function(b){if(b.type===e.Type.Event){if(a.event.special[b.name]||(a.event.special[b.name]={}),!a.event.special[b.name].owl){var c=a.event.special[b.name]._default;a.event.special[b.name]._default=function(a){return!c||!c.apply||a.namespace&&-1!==a.namespace.indexOf(\"owl\")?a.namespace&&a.namespace.indexOf(\"owl\")>-1:c.apply(this,arguments)},a.event.special[b.name].owl=!0}}else b.type===e.Type.State&&(this._states.tags[b.name]?this._states.tags[b.name]=this._states.tags[b.name].concat(b.tags):this._states.tags[b.name]=b.tags,this._states.tags[b.name]=a.grep(this._states.tags[b.name],a.proxy(function(c,d){return a.inArray(c,this._states.tags[b.name])===d},this)))},e.prototype.suppress=function(b){a.each(b,a.proxy(function(a,b){this._supress[b]=!0},this))},e.prototype.release=function(b){a.each(b,a.proxy(function(a,b){delete this._supress[b]},this))},e.prototype.pointer=function(a){var c={x:null,y:null};return a=a.originalEvent||a||b.event,a=a.touches&&a.touches.length?a.touches[0]:a.changedTouches&&a.changedTouches.length?a.changedTouches[0]:a,a.pageX?(c.x=a.pageX,c.y=a.pageY):(c.x=a.clientX,c.y=a.clientY),c},e.prototype.isNumeric=function(a){return!isNaN(parseFloat(a))},e.prototype.difference=function(a,b){return{x:a.x-b.x,y:a.y-b.y}},a.fn.owlCarousel=function(b){var c=Array.prototype.slice.call(arguments,1);return this.each(function(){var d=a(this),f=d.data(\"owl.carousel\");f||(f=new e(this,\"object\"==typeof b&&b),d.data(\"owl.carousel\",f),a.each([\"next\",\"prev\",\"to\",\"destroy\",\"refresh\",\"replace\",\"add\",\"remove\"],function(b,c){f.register({type:e.Type.Event,name:c}),f.$element.on(c+\".owl.carousel.core\",a.proxy(function(a){a.namespace&&a.relatedTarget!==this&&(this.suppress([c]),f[c].apply(this,[].slice.call(arguments,1)),this.release([c]))},f))})),\"string\"==typeof b&&\"_\"!==b.charAt(0)&&f[b].apply(f,c)})},a.fn.owlCarousel.Constructor=e}(window.Zepto||window.jQuery,window,document),function(a,b,c,d){var e=function(b){this._core=b,this._interval=null,this._visible=null,this._handlers={\"initialized.owl.carousel\":a.proxy(function(a){a.namespace&&this._core.settings.autoRefresh&&this.watch()},this)},this._core.options=a.extend({},e.Defaults,this._core.options),this._core.$element.on(this._handlers)};e.Defaults={autoRefresh:!0,autoRefreshInterval:500},e.prototype.watch=function(){this._interval||(this._visible=this._core.isVisible(),this._interval=b.setInterval(a.proxy(this.refresh,this),this._core.settings.autoRefreshInterval))},e.prototype.refresh=function(){this._core.isVisible()!==this._visible&&(this._visible=!this._visible,this._core.$element.toggleClass(\"owl-hidden\",!this._visible),this._visible&&this._core.invalidate(\"width\")&&this._core.refresh())},e.prototype.destroy=function(){var a,c;b.clearInterval(this._interval);for(a in this._handlers)this._core.$element.off(a,this._handlers[a]);for(c in Object.getOwnPropertyNames(this))\"function\"!=typeof this[c]&&(this[c]=null)},a.fn.owlCarousel.Constructor.Plugins.AutoRefresh=e}(window.Zepto||window.jQuery,window,document),function(a,b,c,d){var e=function(b){this._core=b,this._loaded=[],this._handlers={\"initialized.owl.carousel change.owl.carousel resized.owl.carousel\":a.proxy(function(b){if(b.namespace&&this._core.settings&&this._core.settings.lazyLoad&&(b.property&&\"position\"==b.property.name||\"initialized\"==b.type)){var c=this._core.settings,e=c.center&&Math.ceil(c.items/2)||c.items,f=c.center&&-1*e||0,g=(b.property&&b.property.value!==d?b.property.value:this._core.current())+f,h=this._core.clones().length,i=a.proxy(function(a,b){this.load(b)},this);for(c.lazyLoadEager>0&&(e+=c.lazyLoadEager,c.loop&&(g-=c.lazyLoadEager,e++));f++<e;)this.load(h/2+this._core.relative(g)),h&&a.each(this._core.clones(this._core.relative(g)),i),g++}},this)},this._core.options=a.extend({},e.Defaults,this._core.options),this._core.$element.on(this._handlers)};e.Defaults={lazyLoad:!1,lazyLoadEager:0},e.prototype.load=function(c){var d=this._core.$stage.children().eq(c),e=d&&d.find(\".owl-lazy\");!e||a.inArray(d.get(0),this._loaded)>-1||(e.each(a.proxy(function(c,d){var e,f=a(d),g=b.devicePixelRatio>1&&f.attr(\"data-src-retina\")||f.attr(\"data-src\")||f.attr(\"data-srcset\");this._core.trigger(\"load\",{element:f,url:g},\"lazy\"),f.is(\"img\")?f.one(\"load.owl.lazy\",a.proxy(function(){f.css(\"opacity\",1),this._core.trigger(\"loaded\",{element:f,url:g},\"lazy\")},this)).attr(\"src\",g):f.is(\"source\")?f.one(\"load.owl.lazy\",a.proxy(function(){this._core.trigger(\"loaded\",{element:f,url:g},\"lazy\")},this)).attr(\"srcset\",g):(e=new Image,e.onload=a.proxy(function(){f.css({\"background-image\":'url(\"'+g+'\")',opacity:\"1\"}),this._core.trigger(\"loaded\",{element:f,url:g},\"lazy\")},this),e.src=g)},this)),this._loaded.push(d.get(0)))},e.prototype.destroy=function(){var a,b;for(a in this.handlers)this._core.$element.off(a,this.handlers[a]);for(b in Object.getOwnPropertyNames(this))\"function\"!=typeof this[b]&&(this[b]=null)},a.fn.owlCarousel.Constructor.Plugins.Lazy=e}(window.Zepto||window.jQuery,window,document),function(a,b,c,d){var e=function(c){this._core=c,this._previousHeight=null,this._handlers={\"initialized.owl.carousel refreshed.owl.carousel\":a.proxy(function(a){a.namespace&&this._core.settings.autoHeight&&this.update()},this),\"changed.owl.carousel\":a.proxy(function(a){a.namespace&&this._core.settings.autoHeight&&\"position\"===a.property.name&&this.update()},this),\"loaded.owl.lazy\":a.proxy(function(a){a.namespace&&this._core.settings.autoHeight&&a.element.closest(\".\"+this._core.settings.itemClass).index()===this._core.current()&&this.update()},this)},this._core.options=a.extend({},e.Defaults,this._core.options),this._core.$element.on(this._handlers),this._intervalId=null;var d=this;a(b).on(\"load\",function(){d._core.settings.autoHeight&&d.update()}),a(b).resize(function(){d._core.settings.autoHeight&&(null!=d._intervalId&&clearTimeout(d._intervalId),d._intervalId=setTimeout(function(){d.update()},250))})};e.Defaults={autoHeight:!1,autoHeightClass:\"owl-height\"},e.prototype.update=function(){var b=this._core._current,c=b+this._core.settings.items,d=this._core.settings.lazyLoad,e=this._core.$stage.children().toArray().slice(b,c),f=[],g=0;a.each(e,function(b,c){f.push(a(c).height())}),g=Math.max.apply(null,f),g<=1&&d&&this._previousHeight&&(g=this._previousHeight),this._previousHeight=g,this._core.$stage.parent().height(g).addClass(this._core.settings.autoHeightClass)},e.prototype.destroy=function(){var a,b;for(a in this._handlers)this._core.$element.off(a,this._handlers[a]);for(b in Object.getOwnPropertyNames(this))\"function\"!=typeof this[b]&&(this[b]=null)},a.fn.owlCarousel.Constructor.Plugins.AutoHeight=e}(window.Zepto||window.jQuery,window,document),function(a,b,c,d){var e=function(b){this._core=b,this._videos={},this._playing=null,this._handlers={\"initialized.owl.carousel\":a.proxy(function(a){a.namespace&&this._core.register({type:\"state\",name:\"playing\",tags:[\"interacting\"]})},this),\"resize.owl.carousel\":a.proxy(function(a){a.namespace&&this._core.settings.video&&this.isInFullScreen()&&a.preventDefault()},this),\"refreshed.owl.carousel\":a.proxy(function(a){a.namespace&&this._core.is(\"resizing\")&&this._core.$stage.find(\".cloned .owl-video-frame\").remove()},this),\"changed.owl.carousel\":a.proxy(function(a){a.namespace&&\"position\"===a.property.name&&this._playing&&this.stop()},this),\"prepared.owl.carousel\":a.proxy(function(b){if(b.namespace){var c=a(b.content).find(\".owl-video\");c.length&&(c.css(\"display\",\"none\"),this.fetch(c,a(b.content)))}},this)},this._core.options=a.extend({},e.Defaults,this._core.options),this._core.$element.on(this._handlers),this._core.$element.on(\"click.owl.video\",\".owl-video-play-icon\",a.proxy(function(a){this.play(a)},this))};e.Defaults={video:!1,videoHeight:!1,videoWidth:!1},e.prototype.fetch=function(a,b){var c=function(){return a.attr(\"data-vimeo-id\")?\"vimeo\":a.attr(\"data-vzaar-id\")?\"vzaar\":\"youtube\"}(),d=a.attr(\"data-vimeo-id\")||a.attr(\"data-youtube-id\")||a.attr(\"data-vzaar-id\"),e=a.attr(\"data-width\")||this._core.settings.videoWidth,f=a.attr(\"data-height\")||this._core.settings.videoHeight,g=a.attr(\"href\");if(!g)throw new Error(\"Missing video URL.\");if(d=g.match(/(http:|https:|)\\/\\/(player.|www.|app.)?(vimeo\\.com|youtu(be\\.com|\\.be|be\\.googleapis\\.com|be\\-nocookie\\.com)|vzaar\\.com)\\/(video\\/|videos\\/|embed\\/|channels\\/.+\\/|groups\\/.+\\/|watch\\?v=|v\\/)?([A-Za-z0-9._%-]*)(\\&\\S+)?/),d[3].indexOf(\"youtu\")>-1)c=\"youtube\";else if(d[3].indexOf(\"vimeo\")>-1)c=\"vimeo\";else{if(!(d[3].indexOf(\"vzaar\")>-1))throw new Error(\"Video URL not supported.\");c=\"vzaar\"}d=d[6],this._videos[g]={type:c,id:d,width:e,height:f},b.attr(\"data-video\",g),this.thumbnail(a,this._videos[g])},e.prototype.thumbnail=function(b,c){var d,e,f,g=c.width&&c.height?\"width:\"+c.width+\"px;height:\"+c.height+\"px;\":\"\",h=b.find(\"img\"),i=\"src\",j=\"\",k=this._core.settings,l=function(c){e='<div class=\"owl-video-play-icon\"></div>',d=k.lazyLoad?a(\"<div/>\",{class:\"owl-video-tn \"+j,srcType:c}):a(\"<div/>\",{class:\"owl-video-tn\",style:\"opacity:1;background-image:url(\"+c+\")\"}),b.after(d),b.after(e)};if(b.wrap(a(\"<div/>\",{class:\"owl-video-wrapper\",style:g})),this._core.settings.lazyLoad&&(i=\"data-src\",j=\"owl-lazy\"),h.length)return l(h.attr(i)),h.remove(),!1;\"youtube\"===c.type?(f=\"//img.youtube.com/vi/\"+c.id+\"/hqdefault.jpg\",l(f)):\"vimeo\"===c.type?a.ajax({type:\"GET\",url:\"//vimeo.com/api/v2/video/\"+c.id+\".json\",jsonp:\"callback\",dataType:\"jsonp\",success:function(a){f=a[0].thumbnail_large,l(f)}}):\"vzaar\"===c.type&&a.ajax({type:\"GET\",url:\"//vzaar.com/api/videos/\"+c.id+\".json\",jsonp:\"callback\",dataType:\"jsonp\",success:function(a){f=a.framegrab_url,l(f)}})},e.prototype.stop=function(){this._core.trigger(\"stop\",null,\"video\"),this._playing.find(\".owl-video-frame\").remove(),this._playing.removeClass(\"owl-video-playing\"),this._playing=null,this._core.leave(\"playing\"),this._core.trigger(\"stopped\",null,\"video\")},e.prototype.play=function(b){var c,d=a(b.target),e=d.closest(\".\"+this._core.settings.itemClass),f=this._videos[e.attr(\"data-video\")],g=f.width||\"100%\",h=f.height||this._core.$stage.height();this._playing||(this._core.enter(\"playing\"),this._core.trigger(\"play\",null,\"video\"),e=this._core.items(this._core.relative(e.index())),this._core.reset(e.index()),c=a('<iframe frameborder=\"0\" allowfullscreen mozallowfullscreen webkitAllowFullScreen ></iframe>'),c.attr(\"height\",h),c.attr(\"width\",g),\"youtube\"===f.type?c.attr(\"src\",\"//www.youtube.com/embed/\"+f.id+\"?autoplay=1&rel=0&v=\"+f.id):\"vimeo\"===f.type?c.attr(\"src\",\"//player.vimeo.com/video/\"+f.id+\"?autoplay=1\"):\"vzaar\"===f.type&&c.attr(\"src\",\"//view.vzaar.com/\"+f.id+\"/player?autoplay=true\"),a(c).wrap('<div class=\"owl-video-frame\" />').insertAfter(e.find(\".owl-video\")),this._playing=e.addClass(\"owl-video-playing\"))},e.prototype.isInFullScreen=function(){var b=c.fullscreenElement||c.mozFullScreenElement||c.webkitFullscreenElement;return b&&a(b).parent().hasClass(\"owl-video-frame\")},e.prototype.destroy=function(){var a,b;this._core.$element.off(\"click.owl.video\");for(a in this._handlers)this._core.$element.off(a,this._handlers[a]);for(b in Object.getOwnPropertyNames(this))\"function\"!=typeof this[b]&&(this[b]=null)},a.fn.owlCarousel.Constructor.Plugins.Video=e}(window.Zepto||window.jQuery,window,document),function(a,b,c,d){var e=function(b){this.core=b,this.core.options=a.extend({},e.Defaults,this.core.options),this.swapping=!0,this.previous=d,this.next=d,this.handlers={\"change.owl.carousel\":a.proxy(function(a){a.namespace&&\"position\"==a.property.name&&(this.previous=this.core.current(),this.next=a.property.value)},this),\"drag.owl.carousel dragged.owl.carousel translated.owl.carousel\":a.proxy(function(a){a.namespace&&(this.swapping=\"translated\"==a.type)},this),\"translate.owl.carousel\":a.proxy(function(a){a.namespace&&this.swapping&&(this.core.options.animateOut||this.core.options.animateIn)&&this.swap()},this)},this.core.$element.on(this.handlers)};e.Defaults={animateOut:!1,\r\nanimateIn:!1},e.prototype.swap=function(){if(1===this.core.settings.items&&a.support.animation&&a.support.transition){this.core.speed(0);var b,c=a.proxy(this.clear,this),d=this.core.$stage.children().eq(this.previous),e=this.core.$stage.children().eq(this.next),f=this.core.settings.animateIn,g=this.core.settings.animateOut;this.core.current()!==this.previous&&(g&&(b=this.core.coordinates(this.previous)-this.core.coordinates(this.next),d.one(a.support.animation.end,c).css({left:b+\"px\"}).addClass(\"animated owl-animated-out\").addClass(g)),f&&e.one(a.support.animation.end,c).addClass(\"animated owl-animated-in\").addClass(f))}},e.prototype.clear=function(b){a(b.target).css({left:\"\"}).removeClass(\"animated owl-animated-out owl-animated-in\").removeClass(this.core.settings.animateIn).removeClass(this.core.settings.animateOut),this.core.onTransitionEnd()},e.prototype.destroy=function(){var a,b;for(a in this.handlers)this.core.$element.off(a,this.handlers[a]);for(b in Object.getOwnPropertyNames(this))\"function\"!=typeof this[b]&&(this[b]=null)},a.fn.owlCarousel.Constructor.Plugins.Animate=e}(window.Zepto||window.jQuery,window,document),function(a,b,c,d){var e=function(b){this._core=b,this._call=null,this._time=0,this._timeout=0,this._paused=!0,this._handlers={\"changed.owl.carousel\":a.proxy(function(a){a.namespace&&\"settings\"===a.property.name?this._core.settings.autoplay?this.play():this.stop():a.namespace&&\"position\"===a.property.name&&this._paused&&(this._time=0)},this),\"initialized.owl.carousel\":a.proxy(function(a){a.namespace&&this._core.settings.autoplay&&this.play()},this),\"play.owl.autoplay\":a.proxy(function(a,b,c){a.namespace&&this.play(b,c)},this),\"stop.owl.autoplay\":a.proxy(function(a){a.namespace&&this.stop()},this),\"mouseover.owl.autoplay\":a.proxy(function(){this._core.settings.autoplayHoverPause&&this._core.is(\"rotating\")&&this.pause()},this),\"mouseleave.owl.autoplay\":a.proxy(function(){this._core.settings.autoplayHoverPause&&this._core.is(\"rotating\")&&this.play()},this),\"touchstart.owl.core\":a.proxy(function(){this._core.settings.autoplayHoverPause&&this._core.is(\"rotating\")&&this.pause()},this),\"touchend.owl.core\":a.proxy(function(){this._core.settings.autoplayHoverPause&&this.play()},this)},this._core.$element.on(this._handlers),this._core.options=a.extend({},e.Defaults,this._core.options)};e.Defaults={autoplay:!1,autoplayTimeout:5e3,autoplayHoverPause:!1,autoplaySpeed:!1},e.prototype._next=function(d){this._call=b.setTimeout(a.proxy(this._next,this,d),this._timeout*(Math.round(this.read()/this._timeout)+1)-this.read()),this._core.is(\"interacting\")||c.hidden||this._core.next(d||this._core.settings.autoplaySpeed)},e.prototype.read=function(){return(new Date).getTime()-this._time},e.prototype.play=function(c,d){var e;this._core.is(\"rotating\")||this._core.enter(\"rotating\"),c=c||this._core.settings.autoplayTimeout,e=Math.min(this._time%(this._timeout||c),c),this._paused?(this._time=this.read(),this._paused=!1):b.clearTimeout(this._call),this._time+=this.read()%c-e,this._timeout=c,this._call=b.setTimeout(a.proxy(this._next,this,d),c-e)},e.prototype.stop=function(){this._core.is(\"rotating\")&&(this._time=0,this._paused=!0,b.clearTimeout(this._call),this._core.leave(\"rotating\"))},e.prototype.pause=function(){this._core.is(\"rotating\")&&!this._paused&&(this._time=this.read(),this._paused=!0,b.clearTimeout(this._call))},e.prototype.destroy=function(){var a,b;this.stop();for(a in this._handlers)this._core.$element.off(a,this._handlers[a]);for(b in Object.getOwnPropertyNames(this))\"function\"!=typeof this[b]&&(this[b]=null)},a.fn.owlCarousel.Constructor.Plugins.autoplay=e}(window.Zepto||window.jQuery,window,document),function(a,b,c,d){\"use strict\";var e=function(b){this._core=b,this._initialized=!1,this._pages=[],this._controls={},this._templates=[],this.$element=this._core.$element,this._overrides={next:this._core.next,prev:this._core.prev,to:this._core.to},this._handlers={\"prepared.owl.carousel\":a.proxy(function(b){b.namespace&&this._core.settings.dotsData&&this._templates.push('<div class=\"'+this._core.settings.dotClass+'\">'+a(b.content).find(\"[data-dot]\").addBack(\"[data-dot]\").attr(\"data-dot\")+\"</div>\")},this),\"added.owl.carousel\":a.proxy(function(a){a.namespace&&this._core.settings.dotsData&&this._templates.splice(a.position,0,this._templates.pop())},this),\"remove.owl.carousel\":a.proxy(function(a){a.namespace&&this._core.settings.dotsData&&this._templates.splice(a.position,1)},this),\"changed.owl.carousel\":a.proxy(function(a){a.namespace&&\"position\"==a.property.name&&this.draw()},this),\"initialized.owl.carousel\":a.proxy(function(a){a.namespace&&!this._initialized&&(this._core.trigger(\"initialize\",null,\"navigation\"),this.initialize(),this.update(),this.draw(),this._initialized=!0,this._core.trigger(\"initialized\",null,\"navigation\"))},this),\"refreshed.owl.carousel\":a.proxy(function(a){a.namespace&&this._initialized&&(this._core.trigger(\"refresh\",null,\"navigation\"),this.update(),this.draw(),this._core.trigger(\"refreshed\",null,\"navigation\"))},this)},this._core.options=a.extend({},e.Defaults,this._core.options),this.$element.on(this._handlers)};e.Defaults={nav:!1,navText:['<span aria-label=\"Previous\">&#x2039;</span>','<span aria-label=\"Next\">&#x203a;</span>'],navSpeed:!1,navElement:'button type=\"button\" role=\"presentation\"',navContainer:!1,navContainerClass:\"owl-nav\",navClass:[\"owl-prev\",\"owl-next\"],slideBy:1,dotClass:\"owl-dot\",dotsClass:\"owl-dots\",dots:!0,dotsEach:!1,dotsData:!1,dotsSpeed:!1,dotsContainer:!1},e.prototype.initialize=function(){var b,c=this._core.settings;this._controls.$relative=(c.navContainer?a(c.navContainer):a(\"<div>\").addClass(c.navContainerClass).appendTo(this.$element)).addClass(\"disabled\"),this._controls.$previous=a(\"<\"+c.navElement+\">\").addClass(c.navClass[0]).html(c.navText[0]).prependTo(this._controls.$relative).on(\"click\",a.proxy(function(a){this.prev(c.navSpeed)},this)),this._controls.$next=a(\"<\"+c.navElement+\">\").addClass(c.navClass[1]).html(c.navText[1]).appendTo(this._controls.$relative).on(\"click\",a.proxy(function(a){this.next(c.navSpeed)},this)),c.dotsData||(this._templates=[a('<button role=\"button\">').addClass(c.dotClass).append(a(\"<span>\")).prop(\"outerHTML\")]),this._controls.$absolute=(c.dotsContainer?a(c.dotsContainer):a(\"<div>\").addClass(c.dotsClass).appendTo(this.$element)).addClass(\"disabled\"),this._controls.$absolute.on(\"click\",\"button\",a.proxy(function(b){var d=a(b.target).parent().is(this._controls.$absolute)?a(b.target).index():a(b.target).parent().index();b.preventDefault(),this.to(d,c.dotsSpeed)},this));for(b in this._overrides)this._core[b]=a.proxy(this[b],this)},e.prototype.destroy=function(){var a,b,c,d,e;e=this._core.settings;for(a in this._handlers)this.$element.off(a,this._handlers[a]);for(b in this._controls)\"$relative\"===b&&e.navContainer?this._controls[b].html(\"\"):this._controls[b].remove();for(d in this.overides)this._core[d]=this._overrides[d];for(c in Object.getOwnPropertyNames(this))\"function\"!=typeof this[c]&&(this[c]=null)},e.prototype.update=function(){var a,b,c,d=this._core.clones().length/2,e=d+this._core.items().length,f=this._core.maximum(!0),g=this._core.settings,h=g.center||g.autoWidth||g.dotsData?1:g.dotsEach||g.items;if(\"page\"!==g.slideBy&&(g.slideBy=Math.min(g.slideBy,g.items)),g.dots||\"page\"==g.slideBy)for(this._pages=[],a=d,b=0,c=0;a<e;a++){if(b>=h||0===b){if(this._pages.push({start:Math.min(f,a-d),end:a-d+h-1}),Math.min(f,a-d)===f)break;b=0,++c}b+=this._core.mergers(this._core.relative(a))}},e.prototype.draw=function(){var b,c=this._core.settings,d=this._core.items().length<=c.items,e=this._core.relative(this._core.current()),f=c.loop||c.rewind;this._controls.$relative.toggleClass(\"disabled\",!c.nav||d),c.nav&&(this._controls.$previous.toggleClass(\"disabled\",!f&&e<=this._core.minimum(!0)),this._controls.$next.toggleClass(\"disabled\",!f&&e>=this._core.maximum(!0))),this._controls.$absolute.toggleClass(\"disabled\",!c.dots||d),c.dots&&(b=this._pages.length-this._controls.$absolute.children().length,c.dotsData&&0!==b?this._controls.$absolute.html(this._templates.join(\"\")):b>0?this._controls.$absolute.append(new Array(b+1).join(this._templates[0])):b<0&&this._controls.$absolute.children().slice(b).remove(),this._controls.$absolute.find(\".active\").removeClass(\"active\"),this._controls.$absolute.children().eq(a.inArray(this.current(),this._pages)).addClass(\"active\"))},e.prototype.onTrigger=function(b){var c=this._core.settings;b.page={index:a.inArray(this.current(),this._pages),count:this._pages.length,size:c&&(c.center||c.autoWidth||c.dotsData?1:c.dotsEach||c.items)}},e.prototype.current=function(){var b=this._core.relative(this._core.current());return a.grep(this._pages,a.proxy(function(a,c){return a.start<=b&&a.end>=b},this)).pop()},e.prototype.getPosition=function(b){var c,d,e=this._core.settings;return\"page\"==e.slideBy?(c=a.inArray(this.current(),this._pages),d=this._pages.length,b?++c:--c,c=this._pages[(c%d+d)%d].start):(c=this._core.relative(this._core.current()),d=this._core.items().length,b?c+=e.slideBy:c-=e.slideBy),c},e.prototype.next=function(b){a.proxy(this._overrides.to,this._core)(this.getPosition(!0),b)},e.prototype.prev=function(b){a.proxy(this._overrides.to,this._core)(this.getPosition(!1),b)},e.prototype.to=function(b,c,d){var e;!d&&this._pages.length?(e=this._pages.length,a.proxy(this._overrides.to,this._core)(this._pages[(b%e+e)%e].start,c)):a.proxy(this._overrides.to,this._core)(b,c)},a.fn.owlCarousel.Constructor.Plugins.Navigation=e}(window.Zepto||window.jQuery,window,document),function(a,b,c,d){\"use strict\";var e=function(c){this._core=c,this._hashes={},this.$element=this._core.$element,this._handlers={\"initialized.owl.carousel\":a.proxy(function(c){c.namespace&&\"URLHash\"===this._core.settings.startPosition&&a(b).trigger(\"hashchange.owl.navigation\")},this),\"prepared.owl.carousel\":a.proxy(function(b){if(b.namespace){var c=a(b.content).find(\"[data-hash]\").addBack(\"[data-hash]\").attr(\"data-hash\");if(!c)return;this._hashes[c]=b.content}},this),\"changed.owl.carousel\":a.proxy(function(c){if(c.namespace&&\"position\"===c.property.name){var d=this._core.items(this._core.relative(this._core.current())),e=a.map(this._hashes,function(a,b){return a===d?b:null}).join();if(!e||b.location.hash.slice(1)===e)return;b.location.hash=e}},this)},this._core.options=a.extend({},e.Defaults,this._core.options),this.$element.on(this._handlers),a(b).on(\"hashchange.owl.navigation\",a.proxy(function(a){var c=b.location.hash.substring(1),e=this._core.$stage.children(),f=this._hashes[c]&&e.index(this._hashes[c]);f!==d&&f!==this._core.current()&&this._core.to(this._core.relative(f),!1,!0)},this))};e.Defaults={URLhashListener:!1},e.prototype.destroy=function(){var c,d;a(b).off(\"hashchange.owl.navigation\");for(c in this._handlers)this._core.$element.off(c,this._handlers[c]);for(d in Object.getOwnPropertyNames(this))\"function\"!=typeof this[d]&&(this[d]=null)},a.fn.owlCarousel.Constructor.Plugins.Hash=e}(window.Zepto||window.jQuery,window,document),function(a,b,c,d){function e(b,c){var e=!1,f=b.charAt(0).toUpperCase()+b.slice(1);return a.each((b+\" \"+h.join(f+\" \")+f).split(\" \"),function(a,b){if(g[b]!==d)return e=!c||b,!1}),e}function f(a){return e(a,!0)}var g=a(\"<support>\").get(0).style,h=\"Webkit Moz O ms\".split(\" \"),i={transition:{end:{WebkitTransition:\"webkitTransitionEnd\",MozTransition:\"transitionend\",OTransition:\"oTransitionEnd\",transition:\"transitionend\"}},animation:{end:{WebkitAnimation:\"webkitAnimationEnd\",MozAnimation:\"animationend\",OAnimation:\"oAnimationEnd\",animation:\"animationend\"}}},j={csstransforms:function(){return!!e(\"transform\")},csstransforms3d:function(){return!!e(\"perspective\")},csstransitions:function(){return!!e(\"transition\")},cssanimations:function(){return!!e(\"animation\")}};j.csstransitions()&&(a.support.transition=new String(f(\"transition\")),a.support.transition.end=i.transition.end[a.support.transition]),j.cssanimations()&&(a.support.animation=new String(f(\"animation\")),a.support.animation.end=i.animation.end[a.support.animation]),j.csstransforms()&&(a.support.transform=new String(f(\"transform\")),a.support.transform3d=j.csstransforms3d())}(window.Zepto||window.jQuery,window,document);","Mageplaza_DeliveryTime/js/action/set-shipping-information-mixin.js":"/**\r\n * Mageplaza\r\n *\r\n * NOTICE OF LICENSE\r\n *\r\n * This source file is subject to the Mageplaza.com license that is\r\n * available through the world-wide-web at this URL:\r\n * https://www.mageplaza.com/LICENSE.txt\r\n *\r\n * DISCLAIMER\r\n *\r\n * Do not edit or add to this file if you wish to upgrade this extension to newer\r\n * version in the future.\r\n *\r\n * @category    Mageplaza\r\n * @package     Mageplaza_DeliveryTime\r\n * @copyright   Copyright (c) Mageplaza (https://www.mageplaza.com/)\r\n * @license     https://www.mageplaza.com/LICENSE.txt\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'mage/utils/wrapper',\r\n    'Magento_Checkout/js/model/quote',\r\n    'Mageplaza_DeliveryTime/js/model/delivery-information'\r\n], function ($, wrapper, quote, deliveryInformation) {\r\n    'use strict';\r\n\r\n    return function (setShippingInformationAction) {\r\n        if (!window.checkoutConfig || !window.checkoutConfig.mpDtConfig) {\r\n            return setShippingInformationAction;\r\n        }\r\n\r\n        return wrapper.wrap(setShippingInformationAction, function (originalAction) {\r\n            var shippingAddress = quote.shippingAddress();\r\n\r\n            if (!shippingAddress.hasOwnProperty('extension_attributes')) {\r\n                shippingAddress.extension_attributes = {};\r\n            }\r\n\r\n            var deliveryData = {\r\n                mp_delivery_date: deliveryInformation().deliveryDate(),\r\n                mp_delivery_time: deliveryInformation().deliveryTime(),\r\n                mp_house_security_code: deliveryInformation().houseSecurityCode(),\r\n                mp_delivery_comment: deliveryInformation().deliveryComment()\r\n            };\r\n\r\n            shippingAddress.extension_attributes = $.extend(\r\n                shippingAddress.extension_attributes,\r\n                deliveryData\r\n            );\r\n\r\n            return originalAction();\r\n        });\r\n    };\r\n});","Mageplaza_DeliveryTime/js/model/delivery-information.js":"/**\r\n * Mageplaza\r\n *\r\n * NOTICE OF LICENSE\r\n *\r\n * This source file is subject to the Mageplaza.com license that is\r\n * available through the world-wide-web at this URL:\r\n * https://www.mageplaza.com/LICENSE.txt\r\n *\r\n * DISCLAIMER\r\n *\r\n * Do not edit or add to this file if you wish to upgrade this extension to newer\r\n * version in the future.\r\n *\r\n * @category    Mageplaza\r\n * @package     Mageplaza_DeliveryTime\r\n * @copyright   Copyright (c) Mageplaza (https://www.mageplaza.com/)\r\n * @license     https://www.mageplaza.com/LICENSE.txt\r\n */\r\n\r\ndefine(\r\n    [\r\n        'ko',\r\n        'uiComponent'\r\n    ],\r\n    function (ko, Component) {\r\n        'use strict';\r\n\r\n        return Component.extend({\r\n            deliveryDate: ko.observable(),\r\n            deliveryTime: ko.observable(),\r\n            houseSecurityCode: ko.observable(),\r\n            deliveryComment: ko.observable(),\r\n            deliveryTimeOptions: ko.observableArray([])\r\n        });\r\n    }\r\n);\r\n","Mageplaza_DeliveryTime/js/model/mpdt-data.js":"/**\r\n * Mageplaza\r\n *\r\n * NOTICE OF LICENSE\r\n *\r\n * This source file is subject to the Mageplaza.com license that is\r\n * available through the world-wide-web at this URL:\r\n * https://www.mageplaza.com/LICENSE.txt\r\n *\r\n * DISCLAIMER\r\n *\r\n * Do not edit or add to this file if you wish to upgrade this extension to newer\r\n * version in the future.\r\n *\r\n * @category    Mageplaza\r\n * @package     Mageplaza_DeliveryTime\r\n * @copyright   Copyright (c) Mageplaza (https://www.mageplaza.com/)\r\n * @license     https://www.mageplaza.com/LICENSE.txt\r\n */\r\n\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'Magento_Customer/js/customer-data'\r\n    ],\r\n    function ($, storage) {\r\n        'use strict';\r\n\r\n        var cacheKey = 'mpdt-data';\r\n\r\n        var getData = function () {\r\n            return storage.get(cacheKey)();\r\n        };\r\n\r\n        var saveData = function (checkoutData) {\r\n            storage.set(cacheKey, checkoutData);\r\n        };\r\n\r\n        return {\r\n            setData: function (key, data) {\r\n                var obj = getData();\r\n                obj[key] = data;\r\n                saveData(obj);\r\n            },\r\n\r\n            getData: function (key) {\r\n                if (typeof key === 'undefined') {\r\n                    return getData();\r\n                }\r\n\r\n                return getData()[key];\r\n            }\r\n        }\r\n    }\r\n);\r\n","Mageplaza_DeliveryTime/js/view/delivery-information.js":"/**\r\n * Mageplaza\r\n *\r\n * NOTICE OF LICENSE\r\n *\r\n * This source file is subject to the Mageplaza.com license that is\r\n * available through the world-wide-web at this URL:\r\n * https://www.mageplaza.com/LICENSE.txt\r\n *\r\n * DISCLAIMER\r\n *\r\n * Do not edit or add to this file if you wish to upgrade this extension to newer\r\n * version in the future.\r\n *\r\n * @category    Mageplaza\r\n * @package     Mageplaza_DeliveryTime\r\n * @copyright   Copyright (c) Mageplaza (https://www.mageplaza.com/)\r\n * @license     https://www.mageplaza.com/LICENSE.txt\r\n */\r\n\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'ko',\r\n        'underscore',\r\n        'uiComponent',\r\n        'Mageplaza_DeliveryTime/js/model/mpdt-data',\r\n        'Mageplaza_DeliveryTime/js/model/delivery-information',\r\n        'jquery/ui',\r\n        'jquery/jquery-ui-timepicker-addon'\r\n    ],\r\n    function ($, ko, _, Component, mpDtData, deliveryInformation) {\r\n        'use strict';\r\n\r\n        var cacheKeyDeliveryDate = 'deliveryDate',\r\n            cacheKeyDeliveryTime = 'deliveryTime',\r\n            cacheKeyHouseSecurityCode = 'houseSecurityCode',\r\n            cacheKeyDeliveryComment = 'deliveryComment',\r\n            dateFormat = window.checkoutConfig.mpDtConfig.deliveryDateFormat,\r\n            daysOff = window.checkoutConfig.mpDtConfig.deliveryDaysOff || [],\r\n            dateOff = [],\r\n            cutoffTime = window.checkoutConfig.mpDtConfig.cutoffTime;\r\n\r\n        function prepareSubscribeValue(object, cacheKey) {\r\n            var deliveryDateOff = _.pluck(window.checkoutConfig.mpDtConfig.deliveryDateOff, 'date_off'),\r\n                deliveryData = mpDtData.getData(cacheKey);\r\n\r\n            if (deliveryData && cacheKey === cacheKeyDeliveryDate) {\r\n                _.each(deliveryDateOff, function (dateoff) {\r\n                    if (dateToString(deliveryData) === dateToString(dateoff)) {\r\n                        mpDtData.setData(cacheKey, '');\r\n                    }\r\n                });\r\n\r\n                if (daysOff.indexOf(dateToString(deliveryData, true)) !== -1) {\r\n                    mpDtData.setData(cacheKey, '');\r\n                }\r\n            }\r\n\r\n            object(mpDtData.getData(cacheKey));\r\n            object.subscribe(function (newValue) {\r\n                mpDtData.setData(cacheKey, newValue);\r\n            });\r\n        }\r\n\r\n        function dateToString(dt, isDay = false) {\r\n            var date = new Date(dt),\r\n                month = date.getMonth() + 1;\r\n\r\n            if (!month) {\r\n                dt = dt.split(/[\\./-]+/);\r\n                date = new Date(dt[2], dt[1], dt[0]);\r\n                month = date.getMonth();\r\n            }\r\n\r\n            if (isDay) {\r\n                return date.getDay();\r\n            }\r\n\r\n            return date.getDate() + month + date.getFullYear();\r\n        }\r\n\r\n        function formatDeliveryTime(time) {\r\n            var from = time['from'][0] + 'h' + time['from'][1],\r\n                to = time['to'][0] + 'h' + time['to'][1];\r\n            return from + ' - ' + to;\r\n        }\r\n\r\n        return Component.extend({\r\n            defaults: {\r\n                template: 'Mageplaza_DeliveryTime/container/delivery-information'\r\n            },\r\n            deliveryDate: deliveryInformation().deliveryDate,\r\n            deliveryTime: deliveryInformation().deliveryTime,\r\n            houseSecurityCode: deliveryInformation().houseSecurityCode,\r\n            deliveryComment: deliveryInformation().deliveryComment,\r\n            deliveryTimeOptions: deliveryInformation().deliveryTimeOptions,\r\n            isVisible: ko.observable(mpDtData.getData(cacheKeyDeliveryDate)),\r\n\r\n            initialize: function () {\r\n                this._super();\r\n\r\n                var self = this;\r\n\r\n                dateOff = _.pluck(window.checkoutConfig.mpDtConfig.deliveryDateOff, 'date_off');\r\n                ko.bindingHandlers.mpdatepicker = {\r\n                    init: function (element) {\r\n                        var options = {\r\n                            minDate: 0,\r\n                            showButtonPanel: false,\r\n                            dateFormat: dateFormat,\r\n                            showOn: 'both',\r\n                            buttonText: '',\r\n                            beforeShowDay: function (date) {\r\n                                return self.deliveryShowday(date)\r\n                            },\r\n                            beforeShow: function() {\r\n                                $('#ui-datepicker-div').addClass('notranslate');\r\n                            }\r\n                        };\r\n                        $(element).datepicker(options);\r\n                    }\r\n                };\r\n\r\n                $.each(window.checkoutConfig.mpDtConfig.deliveryTime, function (index, item) {\r\n                    self.deliveryTimeOptions.push(formatDeliveryTime(item));\r\n                });\r\n\r\n                prepareSubscribeValue(this.deliveryDate, cacheKeyDeliveryDate);\r\n                prepareSubscribeValue(this.deliveryTime, cacheKeyDeliveryTime);\r\n                prepareSubscribeValue(this.houseSecurityCode, cacheKeyHouseSecurityCode);\r\n                prepareSubscribeValue(this.deliveryComment, cacheKeyDeliveryComment);\r\n\r\n                this.isVisible = ko.computed(function () {\r\n                    return !!self.deliveryDate();\r\n                });\r\n\r\n                return this;\r\n            },\r\n\r\n            removeDeliveryDate: function () {\r\n                if (mpDtData.getData(cacheKeyDeliveryDate) && mpDtData.getData(cacheKeyDeliveryDate) != null) {\r\n                    this.deliveryDate('');\r\n                }\r\n            },\r\n\r\n            deliveryShowday: function (date) {\r\n                var currentDay = date.getDay(),\r\n                    currentDate = date.getDate(),\r\n                    currentMonth = date.getMonth() + 1,\r\n                    formatCurrentMonth = String(currentMonth).length > 1 ? currentMonth : '0' + currentMonth,\r\n                    currentYear = date.getFullYear(),\r\n                    dateToCheck = ('0' + currentDate).slice(-2) + '/' + formatCurrentMonth + '/' + currentYear,\r\n                    isAvailableDay = daysOff.indexOf(currentDay) === -1,\r\n                    isAvailableDate = $.inArray(dateToCheck, dateOff) === -1;\r\n                if (cutoffTime == null) {\r\n                    return [isAvailableDay && isAvailableDate];\r\n                }else {\r\n                    var now = new Date(),\r\n                        timeCut = cutoffTime[0] * 3600000 + cutoffTime[1] * 60000 + cutoffTime[2] * 1000,\r\n                        timeNow = now.getHours() * 3600000 + now.getMinutes() * 60000 + now.getSeconds() * 1000,\r\n                        isToday = date.getDate() === now.getDate() && date.getMonth() === now.getMonth() && date.getFullYear() === now.getFullYear();\r\n                    if (isToday){\r\n                        if(timeNow < timeCut) {\r\n                            return [isAvailableDay && isAvailableDate];\r\n                        }else{\r\n                            return false;\r\n                        }\r\n                    }else {\r\n                        return [isAvailableDay && isAvailableDate];\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n);\r\n","Mageplaza_LayeredNavigation/js/layer.js":"/**\r\n * Copyright 2016 Mageplaza. All rights reserved.\r\n * See https://www.mageplaza.com/LICENSE.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'productListToolbarForm'\r\n], function ($) {\r\n    \"use strict\";\r\n    var next_page = \"\";\r\n    var loading = false;\r\n    var infinite_loaded_count = 0;\r\n    var active = false;\r\n    $.widget('mageplaza.layer', {\r\n\r\n        options: {\r\n            productsListSelector: '#layer-product-list',\r\n            navigationSelector: '#layered-filter-block'\r\n        },\r\n\r\n        _create: function () {\r\n            this.initProductListUrl();\r\n            this.initObserve();\r\n            this.initLoading();\r\n            this.inFinite();\r\n        },\r\n\r\n        initProductListUrl: function () {\r\n            var self = this;\r\n            $.mage.productListToolbarForm.prototype.changeUrl = function (paramName, paramValue, defaultValue) {\r\n                var urlPaths = this.options.url.split('?'),\r\n                    baseUrl = urlPaths[0],\r\n                    urlParams = urlPaths[1] ? urlPaths[1].split('&') : [],\r\n                    paramData = {},\r\n                    parameters;\r\n                for (var i = 0; i < urlParams.length; i++) {\r\n                    parameters = urlParams[i].split('=');\r\n                    paramData[parameters[0]] = parameters[1] !== undefined\r\n                        ? window.decodeURIComponent(parameters[1].replace(/\\+/g, '%20'))\r\n                        : '';\r\n                }\r\n                paramData[paramName] = paramValue;\r\n                if (paramValue == defaultValue) {\r\n                    delete paramData[paramName];\r\n                }\r\n                paramData = $.param(paramData);\r\n\r\n                self.ajaxSubmit(baseUrl + (paramData.length ? '?' + paramData : ''));\r\n            }\r\n        },\r\n\r\n        initObserve: function () {\r\n            var self = this;\r\n            var aElements = this.element.find('a');\r\n            aElements.each(function (index) {\r\n                var el = $(this);\r\n                var link = self.checkUrl(el.prop('href'));\r\n                if(!link) return;\r\n\r\n                el.bind('click', function (e) {\r\n                    if (el.hasClass('swatch-option-link-layered')) {\r\n                        var childEl = el.find('.swatch-option');\r\n                        childEl.addClass('selected');\r\n                    } else {\r\n                        var checkboxEl = el.find('input[type=checkbox]');\r\n                        checkboxEl.prop('checked', !checkboxEl.prop('checked'));\r\n                    }\r\n\r\n                    self.ajaxSubmit(link);\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                });\r\n\r\n                var checkbox = el.find('input[type=checkbox]');\r\n                checkbox.bind('click', function (e) {\r\n                    self.ajaxSubmit(link);\r\n                    e.stopPropagation();\r\n                });\r\n            });\r\n\r\n            $(\".filter-current a\").bind('click', function (e) {\r\n                var link = self.checkUrl($(this).prop('href'));\r\n                if(!link) return;\r\n\r\n                self.ajaxSubmit(link);\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n            });\r\n\r\n            $(\".filter-actions a\").bind('click', function (e) {\r\n                var link = self.checkUrl($(this).prop('href'));\r\n                if(!link) return;\r\n\r\n                self.ajaxSubmit(link);\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n            });\r\n        },\r\n\r\n        checkUrl: function (url) {\r\n            var regex = /(http|https):\\/\\/(\\w+:{0,1}\\w*)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%!\\-\\/]))?/;\r\n\r\n            return regex.test(url) ? url : null;\r\n        },\r\n\r\n        initLoading: function () {\r\n\r\n        },\r\n\r\n        inFinite: function() {\r\n            var self = this;\r\n            next_page = \"\";\r\n            if($(self.options.productsListSelector +' .infinite-loader').length > 0){\r\n                active = true;\r\n            }\r\n            $(\".pages-items li > a.next\").each(function(){\r\n                next_page = $(this).attr(\"href\");\r\n            });\r\n            $(window).scroll(function(){\r\n                if(!loading && next_page && active && $(\".infinite-loader\").hasClass('scrolling') && $(window).scrollTop() >= $(\".infinite-loader\").offset().top-$(window).height()+100){\r\n                    loading = true;\r\n                    $(\".pages-items li > a.next\").each(function(){\r\n                        next_page = $(this).attr(\"href\");\r\n                    });\r\n                    self.ajaxInfinite(next_page);\r\n                }\r\n            });\r\n            $(\".infinite-loader .btn-load-more\").click(function(){\r\n                if(!loading && next_page && infinite_loaded_count >= 2){\r\n                    loading = true;\r\n                    self.ajaxInfinite(next_page);\r\n                }\r\n            });\r\n        },\r\n\r\n        ajaxInfinite: function (submitUrl) {\r\n            var self = this;\r\n            infinite_loaded_count++;\r\n            $('.infinite-loader .btn-load-more').hide();\r\n            $('.infinite-loader .loading').hide();\r\n            $.ajax({\r\n                url: submitUrl,\r\n                data: {isAjax: 1},\r\n                type: 'post',\r\n                dataType: 'json',\r\n                beforeSend: function () {\r\n                    $('.infinite-loader .btn-load-more').hide();\r\n                    $('.infinite-loader .loading').show();\r\n                },\r\n                success: function (res) {\r\n                    loading = false;\r\n                    if (res.backUrl) {\r\n                        window.location = res.backUrl;\r\n                        return;\r\n                    }\r\n                    if (res.products) {\r\n                        if($(res.products).find('div.products-grid')){\r\n                            var items_grid = $(res.products).find('div.products-grid.wrapper .product-items .item');\r\n                            $(self.options.productsListSelector + ' .products.wrapper .product-items').append(items_grid);\r\n                            $(self.options.productsListSelector).trigger('contentUpdated');\r\n                        }\r\n                        if($(res.products).find('div.products-list')){\r\n                            var items_list = $(res.products).find('div.products-list.wrapper .product-items .item');\r\n                            $(self.options.productsListSelector + ' .products.wrapper .product-items').append(items_list);\r\n                            $(self.options.productsListSelector).trigger('contentUpdated');\r\n                        }\r\n                        if($(res.products).find('.pages a.next').length > 0){\r\n                            $(self.options.productsListSelector + ' .pages a.next').attr('href', $(res.products).find('.pages a.next').attr('href'));\r\n                        }else{\r\n                            $(self.options.productsListSelector + ' .pages a.next').remove();\r\n                        }\r\n                        if($(\"form[data-role=tocart-form]\").length > 0) {\r\n                            $(\"form[data-role=tocart-form]\").catalogAddToCart();\r\n                        }\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(2n)').addClass('nth-child-2n');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(2n+1)').addClass('nth-child-2np1');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(3n)').addClass('nth-child-3n');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(3n+1)').addClass('nth-child-3np1');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(4n)').addClass('nth-child-4n');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(4n+1)').addClass('nth-child-4np1');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(5n)').addClass('nth-child-5n');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(5n+1)').addClass('nth-child-5np1');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(6n)').addClass('nth-child-6n');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(6n+1)').addClass('nth-child-6np1');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(7n)').addClass('nth-child-7n');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(7n+1)').addClass('nth-child-7np1');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(8n)').addClass('nth-child-8n');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(8n+1)').addClass('nth-child-8np1');\r\n                        var hist = submitUrl;\r\n                        if(submitUrl.indexOf(\"p=\") > -1){\r\n                            var len = submitUrl.length-submitUrl.indexOf(\"p=\");\r\n                            var str_temp = submitUrl.substr(submitUrl.indexOf(\"p=\"),len);\r\n                            var page_param = \"\";\r\n                            if(str_temp.indexOf(\"&\") == -1){\r\n                                page_param = str_temp;\r\n                            } else {\r\n                                page_param = str_temp.substr(0,str_temp.indexOf(\"&\"));\r\n                            }\r\n                            hist = submitUrl.replace(page_param, \"\");\r\n                        }\r\n                        if (typeof window.history.pushState === 'function') {\r\n                            window.history.pushState({url: hist}, '', hist);\r\n                        }\r\n                        if(typeof enable_quickview != 'undefined' && enable_quickview == true) {\r\n                            requirejs(['jquery', 'weltpixel_quickview' ],\r\n                                function($, quickview) {\r\n                                    $('.weltpixel-quickview').off('click').on('click', function() {\r\n                                        var prodUrl = $(this).attr('data-quickview-url');\r\n                                        if (prodUrl.length) {\r\n                                            quickview.displayContent(prodUrl);\r\n                                        }\r\n                                    });\r\n                                });\r\n                        }\r\n                        $(\".products-grid .weltpixel-quickview\").each(function(){\r\n                            $(this).appendTo($(this).parent().parent().children(\".product-item-photo\"));\r\n                        });\r\n                        $(\"#layer-product-list img.porto-lazyload:not(.porto-lazyload-loaded)\").lazyload({effect:\"fadeIn\"});\r\n                        if ($('#layer-product-list .porto-lazyload:not(.porto-lazyload-loaded)').closest('.owl-carousel').length) {\r\n                            $('#layer-product-list .porto-lazyload:not(.porto-lazyload-loaded)').closest('.owl-carousel').on('initialized.owl.carousel', function() {\r\n                                $(this).find('.porto-lazyload:not(.porto-lazyload-loaded)').trigger('appear');\r\n                            });\r\n                            $('#layer-product-list .porto-lazyload:not(.porto-lazyload-loaded)').closest('.owl-carousel').on('changed.owl.carousel', function() {\r\n                                $(this).find('.porto-lazyload:not(.porto-lazyload-loaded)').trigger('appear');\r\n                            });\r\n                        }\r\n                        next_page = \"\";\r\n                        $(\".pages-items li > a.next\").each(function(){\r\n                            next_page = $(this).attr(\"href\");\r\n                        });\r\n                        if(infinite_loaded_count >= 2){\r\n                            $('.infinite-loader .loading').hide();\r\n                            if(next_page){\r\n                                $('.infinite-loader .btn-load-more').show();\r\n                                $(\".infinite-loader .btn-load-more\").unbind(\"click\").click(function(){\r\n                                    if(!loading && next_page && infinite_loaded_count >= 2){\r\n                                        loading = true;\r\n                                        self.ajaxInfinite(next_page);\r\n                                    }\r\n                                });\r\n                            }\r\n                        } else {\r\n                            $('.infinite-loader .loading').fadeOut(300);\r\n                        }\r\n                    }\r\n\r\n                },\r\n                error: function () {\r\n                    window.location.reload();\r\n                }\r\n            });\r\n        },\r\n\r\n        ajaxSubmit: function (submitUrl) {\r\n            var self = this;\r\n            infinite_loaded_count = 0;\r\n            $.ajax({\r\n                url: submitUrl,\r\n                data: {isAjax: 1},\r\n                type: 'post',\r\n                dataType: 'json',\r\n                beforeSend: function () {\r\n                    $('.ln_overlay').show();\r\n                    if (typeof window.history.pushState === 'function') {\r\n                        window.history.pushState({url: submitUrl}, '', submitUrl);\r\n                    }\r\n                },\r\n                success: function (res) {\r\n                    if (res.backUrl) {\r\n                        window.location = res.backUrl;\r\n                        return;\r\n                    }\r\n                    if (res.navigation) {\r\n                        $(self.options.navigationSelector).replaceWith(res.navigation);\r\n                        $(self.options.navigationSelector).trigger('contentUpdated');\r\n                    }\r\n                    if (res.products) {\r\n                        $(self.options.productsListSelector).replaceWith(res.products);\r\n                        $(self.options.productsListSelector).trigger('contentUpdated');\r\n                    }\r\n                    $('.ln_overlay').hide();\r\n                    if(typeof enable_quickview != 'undefined' && enable_quickview == true) {\r\n                        requirejs(['jquery', 'weltpixel_quickview' ],\r\n                        function($, quickview) {\r\n                            $('.weltpixel-quickview').off('click').on('click', function() {\r\n                                var prodUrl = $(this).attr('data-quickview-url');\r\n                                if (prodUrl.length) {\r\n                                    quickview.displayContent(prodUrl);\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n                    $(\".products-grid .weltpixel-quickview\").each(function(){\r\n                        $(this).appendTo($(this).parent().parent().children(\".product-item-photo\"));\r\n                    });\r\n                    $(\"#layer-product-list img.porto-lazyload\").lazyload({effect:\"fadeIn\"});\r\n                    if ($('#layer-product-list .porto-lazyload').closest('.owl-carousel').length) {\r\n                        $('#layer-product-list .porto-lazyload').closest('.owl-carousel').on('changed.owl.carousel', function() {\r\n                            $(this).find('.porto-lazyload:not(.porto-lazyload-loaded)').trigger('appear');\r\n                        });\r\n                    }\r\n                },\r\n                error: function () {\r\n                    window.location.reload();\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    return $.mageplaza.layer;\r\n});\r\n","Mageplaza_LayeredNavigation/js/action/submit-filter.js":"/**\r\n * Mageplaza\r\n *\r\n * NOTICE OF LICENSE\r\n *\r\n * This source file is subject to the Mageplaza.com license sliderConfig is\r\n * available through the world-wide-web at this URL:\r\n * https://www.mageplaza.com/LICENSE.txt\r\n *\r\n * DISCLAIMER\r\n *\r\n * Do not edit or add to this file if you wish to upgrade this extension to newer\r\n * version in the future.\r\n *\r\n * @category    Mageplaza\r\n * @package     Mageplaza_LayeredNavigation\r\n * @copyright   Copyright (c) 2017 Mageplaza (http://www.mageplaza.com/)\r\n * @license     https://www.mageplaza.com/LICENSE.txt\r\n */\r\n\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'mage/storage',\r\n        'Mageplaza_LayeredNavigation/js/model/loader'\r\n    ],\r\n    function ($, storage, loader) {\r\n        'use strict';\r\n\r\n        var productContainer = $('#layer-product-list'),\r\n            layerContainer = $('.layered-filter-block-container');\r\n\r\n        return function (submitUrl) {\r\n            /** save active state */\r\n            var actives = [];\r\n            $('.filter-options-item').each(function (index) {\r\n                if ($(this).hasClass('active')) {\r\n                    actives.push($(this).attr('attribute'));\r\n                }\r\n            });\r\n            window.layerActiveTabs = actives;\r\n\r\n            /** start loader */\r\n            loader.startLoader();\r\n\r\n            /** change browser url */\r\n            if (typeof window.history.pushState === 'function') {\r\n                window.history.pushState({url: submitUrl}, '', submitUrl);\r\n            }\r\n\r\n            return storage.post(submitUrl, {}).done(\r\n                function (response) {\r\n                    if (response.backUrl) {\r\n                        window.location = response.backUrl;\r\n                        return;\r\n                    }\r\n                    if (response.navigation) {\r\n                        layerContainer.html(response.navigation);\r\n                        layerContainer.trigger('contentUpdated');\r\n                    }\r\n                    if (response.products) {\r\n                        productContainer.html(response.products);\r\n                        productContainer.trigger('contentUpdated');\r\n                    }\r\n                }\r\n            ).fail(\r\n                function () {\r\n                    window.location.reload();\r\n                }\r\n            ).always(\r\n                function () {\r\n                    loader.stopLoader();\r\n                }\r\n            );\r\n        };\r\n    }\r\n);\r\n","Mageplaza_LayeredNavigation/js/model/loader.js":"/**\r\n * Mageplaza\r\n *\r\n * NOTICE OF LICENSE\r\n *\r\n * This source file is subject to the Mageplaza.com license sliderConfig is\r\n * available through the world-wide-web at this URL:\r\n * https://www.mageplaza.com/LICENSE.txt\r\n *\r\n * DISCLAIMER\r\n *\r\n * Do not edit or add to this file if you wish to upgrade this extension to newer\r\n * version in the future.\r\n *\r\n * @category    Mageplaza\r\n * @package     Mageplaza_LayeredNavigation\r\n * @copyright   Copyright (c) 2017 Mageplaza (http://www.mageplaza.com/)\r\n * @license     https://www.mageplaza.com/LICENSE.txt\r\n */\r\n\r\ndefine(\r\n    [\r\n        'jquery'\r\n    ],\r\n    function ($) {\r\n        'use strict';\r\n\r\n        return {\r\n            /**\r\n             * Start full page loader action\r\n             */\r\n            startLoader: function () {\r\n                $('#ln_overlay').show();\r\n            },\r\n\r\n            /**\r\n             * Stop full page loader action\r\n             */\r\n            stopLoader: function () {\r\n                $('#ln_overlay').hide();\r\n            }\r\n        };\r\n    }\r\n);\r\n","Mageplaza_LayeredNavigation/js/price/slider.js":"/**\r\n * Copyright ? 2016 Mageplaza. All rights reserved.\r\n * See https://www.mageplaza.com/LICENSE.txt for license details.\r\n */\r\ndefine([\r\n    'jquery',\r\n    'Magento_Catalog/js/price-utils',\r\n    'jquery/ui',\r\n    'Mageplaza_LayeredNavigation/js/layer'\r\n], function($, ultil) {\r\n    \"use strict\";\r\n\r\n    $.widget('mageplaza.layerSlider', $.mageplaza.layer, {\r\n        options: {\r\n            sliderElement: '#ln_price_slider',\r\n            textElement: '#ln_price_text'\r\n        },\r\n        _create: function () {\r\n            var self = this;\r\n            $(this.options.sliderElement).slider({\r\n                min: self.options.minValue,\r\n                max: self.options.maxValue,\r\n                values: [self.options.selectedFrom, self.options.selectedTo],\r\n                slide: function( event, ui ) {\r\n                    self.displayText(ui.values[0], ui.values[1]);\r\n                },\r\n                change: function(event, ui) {\r\n                    self.ajaxSubmit(self.getUrl(ui.values[0], ui.values[1]));\r\n                }\r\n            });\r\n            this.displayText(this.options.selectedFrom, this.options.selectedTo);\r\n        },\r\n\r\n        getUrl: function(from, to){\r\n            return this.options.ajaxUrl.replace(encodeURI('{price_start}'), from).replace(encodeURI('{price_end}'), to);\r\n        },\r\n\r\n        displayText: function(from, to){\r\n            $(this.options.textElement).html(this.formatPrice(from) + ' - ' + this.formatPrice(to));\r\n        },\r\n\r\n        formatPrice: function(value) {\r\n            return ultil.formatPrice(value, this.options.priceFormat);\r\n        }\r\n    });\r\n\r\n    return $.mageplaza.layerSlider;\r\n});\r\n","Mageplaza_LayeredNavigation/js/view/layer.js":"/**\r\n * Mageplaza\r\n *\r\n * NOTICE OF LICENSE\r\n *\r\n * This source file is subject to the Mageplaza.com license sliderConfig is\r\n * available through the world-wide-web at this URL:\r\n * https://www.mageplaza.com/LICENSE.txt\r\n *\r\n * DISCLAIMER\r\n *\r\n * Do not edit or add to this file if you wish to upgrade this extension to newer\r\n * version in the future.\r\n *\r\n * @category    Mageplaza\r\n * @package     Mageplaza_LayeredNavigation\r\n * @copyright   Copyright (c) Mageplaza (https://www.mageplaza.com/)\r\n * @license     https://www.mageplaza.com/LICENSE.txt\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'Mageplaza_AjaxLayer/js/action/submit-filter',\r\n    'Magento_Catalog/js/price-utils',\r\n    'accordion',\r\n    'productListToolbarForm',\r\n    'jquery/jquery-ui'\r\n], function ($, submitFilterAction, ultil) {\r\n    \"use strict\";\r\n    var next_page = \"\";\r\n    var loading = false;\r\n    var infinite_loaded_count = 0;\r\n    var active = false;\r\n\r\n    $.widget('mageplaza.layer', $.mage.accordion, {\r\n        options: {\r\n            openedState: 'active',\r\n            collapsible: true,\r\n            multipleCollapsible: true,\r\n            animate: 200,\r\n            productsListSelector: '#layer-product-list',\r\n            mobileShopbyElement: '#layered-filter-block .filter-title [data-role=title]',\r\n            collapsibleElement: '[data-role=ln_collapsible]',\r\n            header: '[data-role=ln_title]',\r\n            content: '[data-role=ln_content]',\r\n            isCustomerLoggedIn: false,\r\n            isAjax: true,\r\n            params: [],\r\n            active: [],\r\n            activeDesktop: [],\r\n            activeMobile: [],\r\n            checkboxEl: 'input[type=checkbox], input[type=radio]',\r\n            sliderElementPrefix: '#ln_slider_',\r\n            sliderTextElementPrefix: '#ln_slider_text_'\r\n        },\r\n\r\n        _create: function () {\r\n            this.initActiveItems();\r\n\r\n            this._super();\r\n\r\n            this.initProductListUrl();\r\n            this.initObserve();\r\n            this.initSlider();\r\n            this.initWishlistCompare();\r\n            this.selectedAttr();\r\n            this.renderCategoryTree();\r\n        },\r\n\r\n        inFinite: function() {\r\n            var self = this;\r\n            next_page = \"\";\r\n            if($(self.options.productsListSelector +' .infinite-loader').length > 0){\r\n                active = true;\r\n            }\r\n            $(\".pages-items li > a.next\").each(function(){\r\n                next_page = $(this).attr(\"href\");\r\n            });\r\n            if(!next_page){\r\n                $('.infinite-loader').hide();\r\n            }\r\n            $(window).scroll(function(){\r\n                if(!loading && next_page && active && $(\".infinite-loader\").hasClass('scrolling') && $(window).scrollTop() >= $(\".infinite-loader\").offset().top-$(window).height()+100){\r\n                    loading = true;\r\n                    $(\".pages-items li > a.next\").each(function(){\r\n                        next_page = $(this).attr(\"href\");\r\n                    });\r\n                    self.ajaxInfinite(next_page);\r\n                }\r\n            });\r\n            $(\".infinite-loader .btn-load-more\").click(function(){\r\n                if(!loading && next_page){\r\n                    loading = true;\r\n                    self.ajaxInfinite(next_page);\r\n                }\r\n            });\r\n        },\r\n\r\n        ajaxInfinite: function (submitUrl) {\r\n            var self = this;\r\n            infinite_loaded_count++;\r\n            $('.infinite-loader .btn-load-more').hide();\r\n            $('.infinite-loader .loading').hide();\r\n            $.ajax({\r\n                url: submitUrl,\r\n                type: 'get',\r\n                beforeSend: function () {\r\n                    $('.infinite-loader .btn-load-more').hide();\r\n                    $('.infinite-loader .loading').show();\r\n                },\r\n                success: function (res) {\r\n                    loading = false;\r\n                    var $products = $(res.products);\r\n                    if (res.backUrl) {\r\n                        window.location = res.backUrl;\r\n                        return;\r\n                    }\r\n                    if($products){\r\n                        $products.each(function(i,el){\r\n                            if($(el).hasClass('products-grid')){\r\n                                var items_grid = $(this).find('.product-items .item');\r\n                                $(self.options.productsListSelector + ' .products.wrapper .product-items').append(items_grid);\r\n                                $(self.options.productsListSelector).trigger('contentUpdated');\r\n                            }\r\n                            if($(el).hasClass('products-list')){\r\n                                var items_list = $(this).find('.product-items .item');\r\n                                $(self.options.productsListSelector + ' .products.wrapper .product-items').append(items_list);\r\n                                $(self.options.productsListSelector).trigger('contentUpdated');\r\n                            }\r\n                            if($(el).hasClass('toolbar-products')){\r\n                                if($(this).find('.pages a.next').length > 0){\r\n                                    $(self.options.productsListSelector + ' .pages a.next').attr('href', $(this).find('.pages a.next').attr('href'));\r\n                                }else{\r\n                                    $(self.options.productsListSelector + ' .pages a.next').remove();\r\n                                }\r\n                            }\r\n                        });\r\n                        if($(\"form[data-role=tocart-form]\").length > 0 && !redirect_cart) {\r\n                            $(\"form[data-role=tocart-form]\").catalogAddToCart();\r\n                        }\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(2n)').addClass('nth-child-2n');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(2n+1)').addClass('nth-child-2np1');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(3n)').addClass('nth-child-3n');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(3n+1)').addClass('nth-child-3np1');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(4n)').addClass('nth-child-4n');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(4n+1)').addClass('nth-child-4np1');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(5n)').addClass('nth-child-5n');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(5n+1)').addClass('nth-child-5np1');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(6n)').addClass('nth-child-6n');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(6n+1)').addClass('nth-child-6np1');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(7n)').addClass('nth-child-7n');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(7n+1)').addClass('nth-child-7np1');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(8n)').addClass('nth-child-8n');\r\n                        $('.main .products.grid .product-items li.product-item:nth-child(8n+1)').addClass('nth-child-8np1');\r\n                        var hist = submitUrl;\r\n                        if(submitUrl.indexOf(\"p=\") > -1){\r\n                            var len = submitUrl.length-submitUrl.indexOf(\"p=\");\r\n                            var str_temp = submitUrl.substr(submitUrl.indexOf(\"p=\"),len);\r\n                            var page_param = \"\";\r\n                            if(str_temp.indexOf(\"&\") == -1){\r\n                                page_param = str_temp;\r\n                            } else {\r\n                                page_param = str_temp.substr(0,str_temp.indexOf(\"&\"));\r\n                            }\r\n                            hist = submitUrl.replace(page_param, \"\");\r\n                        }\r\n                        if (typeof window.history.pushState === 'function') {\r\n                            window.history.pushState({url: hist}, '', hist);\r\n                        }\r\n                        if(typeof enable_quickview != 'undefined' && enable_quickview == true) {\r\n                            requirejs(['jquery', 'weltpixel_quickview' ],\r\n                                function($, quickview) {\r\n                                    $('.weltpixel-quickview').off('click').on('click', function() {\r\n                                        var prodUrl = $(this).attr('data-quickview-url');\r\n                                        if (prodUrl.length) {\r\n                                            quickview.displayContent(prodUrl);\r\n                                        }\r\n                                    });\r\n                                });\r\n                        }\r\n                        $(\".products-grid .weltpixel-quickview\").each(function(){\r\n                            $(this).appendTo($(this).parent().parent().children(\".product-item-photo\"));\r\n                        });\r\n                        $(\"#layer-product-list img.porto-lazyload:not(.porto-lazyload-loaded)\").lazyload({effect:\"fadeIn\"});\r\n                        if ($('#layer-product-list .porto-lazyload:not(.porto-lazyload-loaded)').closest('.owl-carousel').length) {\r\n                            $('#layer-product-list .porto-lazyload:not(.porto-lazyload-loaded)').closest('.owl-carousel').on('initialized.owl.carousel', function() {\r\n                                $(this).find('.porto-lazyload:not(.porto-lazyload-loaded)').trigger('appear');\r\n                            });\r\n                            $('#layer-product-list .porto-lazyload:not(.porto-lazyload-loaded)').closest('.owl-carousel').on('changed.owl.carousel', function() {\r\n                                $(this).find('.porto-lazyload:not(.porto-lazyload-loaded)').trigger('appear');\r\n                            });\r\n                        }\r\n                        self.initWishlistCompare();\r\n                        next_page = \"\";\r\n                        $(\".pages-items li > a.next\").each(function(){\r\n                            next_page = $(this).attr(\"href\");\r\n                        });\r\n                        $('.infinite-loader .loading').hide();\r\n                        if(next_page){\r\n                            $('.infinite-loader .btn-load-more').show();\r\n                            $(\".infinite-loader .btn-load-more\").unbind(\"click\").click(function(){\r\n                                if(!loading && next_page){\r\n                                    loading = true;\r\n                                    self.ajaxInfinite(next_page);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                },\r\n                error: function () {\r\n                    window.location.reload();\r\n                }\r\n            });\r\n        },\r\n\r\n        initActiveItems: function () {\r\n            var layerActivesDesktop = this.options.activeDesktop,\r\n                layerActivesMobile  = this.options.activeMobile,\r\n                activesDesktop = [],\r\n                activesMobile = [];\r\n            if ($(\".page-layout-1column\").length){\r\n                this.options.multipleCollapsible = false;\r\n            }\r\n\r\n            if (typeof window.layerActiveTabs !== 'undefined') {\r\n                layerActivesDesktop, layerActivesMobile = window.layerActiveTabs;\r\n            }\r\n            if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent)\r\n                || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(navigator.userAgent.substr(0,4))) {\r\n                if (layerActivesMobile.length) {\r\n                    this.element.find('.filter-options-item').each(function (index) {\r\n                        if (~$.inArray($(this).attr('attribute'), layerActivesMobile)) {\r\n                            activesMobile.push(index);\r\n                        }\r\n                    });\r\n                }\r\n                this.options.active = activesMobile;\r\n                return this;\r\n            }else{\r\n                if (layerActivesDesktop.length) {\r\n                    this.element.find('.filter-options-item').each(function (index) {\r\n                        if (~$.inArray($(this).attr('attribute'), layerActivesDesktop)) {\r\n                            activesDesktop.push(index);\r\n                        }\r\n                    });\r\n                }\r\n                this.options.active = activesDesktop;\r\n                return this;\r\n            }\r\n        },\r\n\r\n        initProductListUrl: function () {\r\n            var isProcessToolbar = false,\r\n                isAjax = this.options.isAjax;\r\n            $.mage.productListToolbarForm.prototype.changeUrl = function (paramName, paramValue, defaultValue) {\r\n                if (isProcessToolbar) {\r\n                    return;\r\n                }\r\n                if (isAjax) {\r\n                    isProcessToolbar = true;\r\n                }\r\n\r\n                var urlPaths = this.options.url.split('?'),\r\n                    baseUrl = urlPaths[0],\r\n                    urlParams = urlPaths[1] ? urlPaths[1].split('&') : [],\r\n                    paramData = {},\r\n                    parameters;\r\n                for (var i = 0; i < urlParams.length; i++) {\r\n                    parameters = urlParams[i].split('=');\r\n                    paramData[parameters[0]] = parameters[1] !== undefined\r\n                        ? window.decodeURIComponent(parameters[1].replace(/\\+/g, '%20'))\r\n                        : '';\r\n                }\r\n                paramData[paramName] = paramValue;\r\n                if (paramValue === defaultValue) {\r\n                    delete paramData[paramName];\r\n                }\r\n                paramData = $.param(paramData);\r\n                if (isAjax) {\r\n                    submitFilterAction(baseUrl + (paramData.length ? '?' + paramData : ''));\r\n                } else location.href = baseUrl + (paramData.length ? '?' + paramData : '');\r\n            }\r\n        },\r\n\r\n        initObserve: function () {\r\n            var self = this;\r\n            var isAjax = this.options.isAjax;\r\n\r\n            // fix browser back, forward button\r\n            if (typeof window.history.replaceState === \"function\") {\r\n                window.history.replaceState({url: document.URL}, document.title);\r\n\r\n                setTimeout(function () {\r\n                    window.onpopstate = function (e) {\r\n                        if (e.state) {\r\n                            submitFilterAction(e.state.url, 1);\r\n                        }\r\n                    };\r\n                }, 0)\r\n            }\r\n\r\n            var pageElements = $('#layer-product-list').find('.pages a');\r\n            pageElements.each(function () {\r\n                var el = $(this),\r\n                    link = self.checkUrl(el.prop('href'));\r\n                if (!link) {\r\n                    return;\r\n                }\r\n\r\n                el.bind('click', function (e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                    if (isAjax) {\r\n                        submitFilterAction(link);\r\n                    } else location.href = link;\r\n                })\r\n            });\r\n\r\n            var currentElements = this.element.find('.filter-current a, .filter-actions a');\r\n            currentElements.each(function (index) {\r\n                var el = $(this),\r\n                    link = self.checkUrl(el.prop('href'));\r\n                if (!link) {\r\n                    return;\r\n                }\r\n\r\n                el.bind('click', function (e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                    if (isAjax) {\r\n                        submitFilterAction(link);\r\n                    } else {\r\n                        location.href = link;\r\n                    }\r\n                });\r\n            });\r\n\r\n            var optionElements = this.element.find('.filter-options a');\r\n            optionElements.each(function (index) {\r\n                var el = $(this),\r\n                    link = self.checkUrl(el.prop('href'));\r\n                if (!link) {\r\n                    return;\r\n                }\r\n\r\n                el.bind('click', function (e) {\r\n                    if (el.hasClass('swatch-option-link-layered')) {\r\n                        self.selectSwatchOption(el);\r\n                    } else {\r\n                        var checkboxEl = el.siblings(self.options.checkboxEl);\r\n                        checkboxEl.prop('checked', !checkboxEl.prop('checked'));\r\n                    }\r\n\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                    self.ajaxSubmit(link);\r\n                });\r\n\r\n                var checkbox = el.siblings(self.options.checkboxEl);\r\n                checkbox.bind('click', function (e) {\r\n                    e.stopPropagation();\r\n                    self.ajaxSubmit(link);\r\n                });\r\n            });\r\n\r\n            var swatchElements = this.element.find('.swatch-attribute');\r\n            swatchElements.each(function (index) {\r\n                var el = $(this);\r\n                var attCode = el.attr('attribute-code');\r\n                if (attCode) {\r\n                    if (self.options.params.hasOwnProperty(attCode)) {\r\n                        var attValues = self.options.params[attCode].split(\",\");\r\n                        var swatchOptions = el.find('.swatch-option');\r\n                        swatchOptions.each(function (option) {\r\n                            var elOption = $(this);\r\n                            if ($.inArray(elOption.attr('option-id'), attValues) !== -1) {\r\n                                elOption.addClass('selected');\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n            if(typeof enable_quickview != 'undefined' && enable_quickview == true) {\r\n                requirejs(['jquery', 'weltpixel_quickview' ],\r\n                    function($, quickview) {\r\n                        $('.weltpixel-quickview').off('click').on('click', function() {\r\n                            var prodUrl = $(this).attr('data-quickview-url');\r\n                            if (prodUrl.length) {\r\n                                quickview.displayContent(prodUrl);\r\n                            }\r\n                        });\r\n                    });\r\n            }\r\n\r\n            $(\".products-grid .weltpixel-quickview\").each(function(){\r\n                $(this).appendTo($(this).parents('.product-item-info').children(\".product-item-photo\"));\r\n            });\r\n            $(\"#layer-product-list img.porto-lazyload:not(.porto-lazyload-loaded)\").lazyload({effect:\"fadeIn\"});\r\n            if ($('#layer-product-list .porto-lazyload:not(.porto-lazyload-loaded)').closest('.owl-carousel').length) {\r\n                $('#layer-product-list .porto-lazyload:not(.porto-lazyload-loaded)').closest('.owl-carousel').on('changed.owl.carousel', function() {\r\n                    $(this).find('.porto-lazyload:not(.porto-lazyload-loaded)').trigger('appear');\r\n                });\r\n            }\r\n            if(isAjax) {\r\n                self.inFinite();\r\n            }else{\r\n                $('.infinite-loader').hide();\r\n            }\r\n        },\r\n\r\n        selectSwatchOption: function (el) {\r\n            var childEl = el.find('.swatch-option');\r\n            if (childEl.hasClass('selected')) {\r\n                childEl.removeClass('selected');\r\n            } else {\r\n                childEl.addClass('selected');\r\n            }\r\n        },\r\n\r\n        initSlider: function () {\r\n            var self = this,\r\n                slider = this.options.slider;\r\n\r\n            for (var code in slider) {\r\n                if (slider.hasOwnProperty(code)) {\r\n                    var sliderConfig = slider[code],\r\n                        sliderElement = self.element.find(this.options.sliderElementPrefix + code),\r\n                        priceFormat = sliderConfig.hasOwnProperty('priceFormat') ? JSON.parse(sliderConfig.priceFormat) : null;\r\n\r\n                    if (sliderElement.length) {\r\n                        sliderElement.slider({\r\n                            range: true,\r\n                            min: sliderConfig.minValue,\r\n                            max: sliderConfig.maxValue,\r\n                            values: [sliderConfig.selectedFrom, sliderConfig.selectedTo],\r\n                            slide: function (event, ui) {\r\n                                self.displaySliderText(code, ui.values[0], ui.values[1], priceFormat);\r\n                            },\r\n                            change: function (event, ui) {\r\n                                self.ajaxSubmit(self.getSliderUrl(sliderConfig.ajaxUrl, ui.values[0], ui.values[1]));\r\n                            }\r\n                        });\r\n                    }\r\n                    self.displaySliderText(code, sliderConfig.selectedFrom, sliderConfig.selectedTo, priceFormat);\r\n                }\r\n            }\r\n        },\r\n\r\n        displaySliderText: function (code, from, to, format) {\r\n            var textElement = this.element.find(this.options.sliderTextElementPrefix + code);\r\n            if (textElement.length) {\r\n                if (format !== null) {\r\n                    from = this.formatPrice(from, format);\r\n                    to = this.formatPrice(to, format);\r\n                }\r\n\r\n                textElement.html(from + ' - ' + to);\r\n            }\r\n        },\r\n\r\n        getSliderUrl: function (url, from, to) {\r\n            return url.replace('from-to', from + '-' + to);\r\n        },\r\n\r\n        formatPrice: function (value, format) {\r\n            return ultil.formatPrice(value, format);\r\n        },\r\n\r\n        ajaxSubmit: function (submitUrl) {\r\n            var isAjax = this.options.isAjax;\r\n            this.element.find(this.options.mobileShopbyElement).trigger('click');\r\n\r\n            if (isAjax) {\r\n                return submitFilterAction(submitUrl);\r\n            }\r\n            location.href = submitUrl;\r\n        },\r\n\r\n        checkUrl: function (url) {\r\n            var regex = /(http|https):\\/\\/(\\w+:{0,1}\\w*)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%!\\-\\/]))?/;\r\n\r\n            return regex.test(url) ? url : null;\r\n        },\r\n\r\n        //Handling 'add to wishlist' & 'add to compare' event\r\n        initWishlistCompare: function () {\r\n            var isAjax = this.options.isAjax;\r\n            var isCustomerLoggedIn = this.options.isCustomerLoggedIn,\r\n                elClass = 'a.action.tocompare' + (isCustomerLoggedIn ? ',a.action.towishlist' : '');\r\n            $(elClass).each(function () {\r\n                var el = $(this);\r\n                if (isAjax){\r\n                    $(el).bind('click', function (e) {\r\n                        var dataPost = $(el).data('post'),\r\n                            formKey = $('input[name=\"form_key\"]').val(), method = 'post';\r\n                        if (formKey) {\r\n                            dataPost.data.form_key = formKey;\r\n                        }\r\n\r\n                        var paramData = $.param(dataPost.data),\r\n                            url = dataPost.action + (paramData.length ? '?' + paramData : '');\r\n\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n\r\n                        if (el.hasClass('towishlist')) {\r\n                            submitFilterAction(url, true, method);\r\n                        } else{\r\n                            submitFilterAction(url, true, method);\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n        },\r\n\r\n        //Selected attribute color after page load.\r\n        selectedAttr: function () {\r\n            var filterCurrent = $('.layered-filter-block-container .filter-current .items .item .filter-value');\r\n\r\n            filterCurrent.each(function(){\r\n                var el         = $(this),\r\n                    colorLabel = el.html(),\r\n                    swatchAttr  = $('.filter-options .filter-options-item .swatch-option-link-layered .swatch-option');\r\n\r\n                swatchAttr.each(function(){\r\n                    var elA = $(this);\r\n                    if(elA.attr('data-option-label') === colorLabel && !elA.hasClass('selected')){\r\n                        elA.addClass('selected');\r\n                    }\r\n                });\r\n            });\r\n        },\r\n\r\n        renderCategoryTree: function () {\r\n            var iconExpand = this.element.find('.filter-options .icon-expand');\r\n\r\n            iconExpand.each(function () {\r\n                var el = $(this);\r\n\r\n                el.nextAll('ol').each(function() {\r\n                    if($(this).find('input[checked]').length !== 0\r\n                        && !$(this).prevAll('.icon-expand').hasClass('active')\r\n                    ) {\r\n                        $(this).show();\r\n                        $(this).prevAll('.icon-expand').toggleClass('active');\r\n                    }\r\n                });\r\n\r\n                el.bind('click', function (e) {\r\n                    el.nextAll('ol').toggle();\r\n                    el.toggleClass('active');\r\n                    e.stopPropagation();\r\n                });\r\n            });\r\n        }\r\n    });\r\n\r\n    return $.mageplaza.layer;\r\n});\r\n","Mageplaza_Osc/js/catalog-add-to-cart-mixin.js":"/**\r\n * Mageplaza\r\n *\r\n * NOTICE OF LICENSE\r\n *\r\n * This source file is subject to the Mageplaza.com license that is\r\n * available through the world-wide-web at this URL:\r\n * https://www.mageplaza.com/LICENSE.txt\r\n *\r\n * DISCLAIMER\r\n *\r\n * Do not edit or add to this file if you wish to upgrade this extension to newer\r\n * version in the future.\r\n *\r\n * @category    Mageplaza\r\n * @package     Mageplaza_Osc\r\n * @copyright   Copyright (c) Mageplaza (https://www.mageplaza.com/)\r\n * @license     https://www.mageplaza.com/LICENSE.txt\r\n */\r\ndefine([\r\n    'jquery',\r\n    'underscore',\r\n    'jquery-ui-modules/widget'\r\n], function ($, _) {\r\n    'use strict';\r\n\r\n    return function (widget) {\r\n        $.widget('mage.catalogAddToCart', widget, {\r\n            ajaxSubmit: function (form) {\r\n                this._super();\r\n                 location.reload();\r\n            }\r\n        });\r\n\r\n        return $.mage.catalogAddToCart;\r\n    }\r\n});\r\n"}
}});
